/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.talkback;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int btn_checkbox_to_checked_box_inner_merged_animation=0x7f01000c;
    public static final int btn_checkbox_to_checked_box_outer_merged_animation=0x7f01000d;
    public static final int btn_checkbox_to_checked_icon_null_animation=0x7f01000e;
    public static final int btn_checkbox_to_unchecked_box_inner_merged_animation=0x7f01000f;
    public static final int btn_checkbox_to_unchecked_check_path_merged_animation=0x7f010010;
    public static final int btn_checkbox_to_unchecked_icon_null_animation=0x7f010011;
    public static final int btn_radio_to_off_mtrl_dot_group_animation=0x7f010012;
    public static final int btn_radio_to_off_mtrl_ring_outer_animation=0x7f010013;
    public static final int btn_radio_to_off_mtrl_ring_outer_path_animation=0x7f010014;
    public static final int btn_radio_to_on_mtrl_dot_group_animation=0x7f010015;
    public static final int btn_radio_to_on_mtrl_ring_outer_animation=0x7f010016;
    public static final int btn_radio_to_on_mtrl_ring_outer_path_animation=0x7f010017;
    public static final int design_bottom_sheet_slide_in=0x7f010018;
    public static final int design_bottom_sheet_slide_out=0x7f010019;
    public static final int design_snackbar_in=0x7f01001a;
    public static final int design_snackbar_out=0x7f01001b;
    public static final int fragment_close_enter=0x7f01001c;
    public static final int fragment_close_exit=0x7f01001d;
    public static final int fragment_fade_enter=0x7f01001e;
    public static final int fragment_fade_exit=0x7f01001f;
    public static final int fragment_fast_out_extra_slow_in=0x7f010020;
    public static final int fragment_open_enter=0x7f010021;
    public static final int fragment_open_exit=0x7f010022;
    public static final int mtrl_bottom_sheet_slide_in=0x7f010023;
    public static final int mtrl_bottom_sheet_slide_out=0x7f010024;
    public static final int mtrl_card_lowers_interpolator=0x7f010025;
  }
  public static final class animator {
    public static final int design_appbar_state_list_animator=0x7f020000;
    public static final int design_fab_hide_motion_spec=0x7f020001;
    public static final int design_fab_show_motion_spec=0x7f020002;
    public static final int mtrl_btn_state_list_anim=0x7f020003;
    public static final int mtrl_btn_unelevated_state_list_anim=0x7f020004;
    public static final int mtrl_card_state_list_anim=0x7f020005;
    public static final int mtrl_chip_state_list_anim=0x7f020006;
    public static final int mtrl_extended_fab_change_size_motion_spec=0x7f020007;
    public static final int mtrl_extended_fab_hide_motion_spec=0x7f020008;
    public static final int mtrl_extended_fab_show_motion_spec=0x7f020009;
    public static final int mtrl_extended_fab_state_list_animator=0x7f02000a;
    public static final int mtrl_fab_hide_motion_spec=0x7f02000b;
    public static final int mtrl_fab_show_motion_spec=0x7f02000c;
    public static final int mtrl_fab_transformation_sheet_collapse_spec=0x7f02000d;
    public static final int mtrl_fab_transformation_sheet_expand_spec=0x7f02000e;
  }
  public static final class array {
    public static final int gesture_detection_repeated_pattern=0x7f030000;
    public static final int initial_selector_gestures=0x7f030001;
    public static final int navigation_options_menu=0x7f030002;
    public static final int notification_pattern=0x7f030003;
    public static final int pref_2finger_pass_through_shortcut_keys=0x7f030004;
    public static final int pref_2finger_pass_through_shortcut_summary=0x7f030005;
    public static final int pref_capital_letters_entries=0x7f030006;
    public static final int pref_capital_letters_values=0x7f030007;
    public static final int pref_choose_trigger_modifier_entries=0x7f030008;
    public static final int pref_choose_trigger_modifier_values=0x7f030009;
    public static final int pref_keyboard_echo_entries=0x7f03000a;
    public static final int pref_keyboard_echo_values=0x7f03000b;
    public static final int pref_log_level_entries=0x7f03000c;
    public static final int pref_log_level_values=0x7f03000d;
    public static final int pref_node_desc_order_entries=0x7f03000e;
    public static final int pref_node_desc_order_values=0x7f03000f;
    public static final int pref_resume_talkback_entries=0x7f030010;
    public static final int pref_resume_talkback_values=0x7f030011;
    public static final int pref_select_keymap_entries=0x7f030012;
    public static final int pref_select_keymap_values=0x7f030013;
    public static final int pref_shake_to_read_threshold_entries=0x7f030014;
    public static final int pref_shake_to_read_threshold_values=0x7f030015;
    public static final int pref_shortcut_keys=0x7f030016;
    public static final int pref_soundback_volume_entries=0x7f030017;
    public static final int pref_soundback_volume_values=0x7f030018;
    public static final int pref_speech_volume_entries=0x7f030019;
    public static final int pref_speech_volume_values=0x7f03001a;
    public static final int pref_verbosity_preset_entries=0x7f03001b;
    public static final int pref_verbosity_preset_values=0x7f03001c;
    public static final int selector_shortcut_values=0x7f03001d;
    public static final int shortcut_basic_navigation=0x7f03001e;
    public static final int shortcut_menu_control=0x7f03001f;
    public static final int shortcut_reading_control=0x7f030020;
    public static final int shortcut_system_actions=0x7f030021;
    public static final int shortcut_text_editing=0x7f030022;
    public static final int shortcut_value_basic_navigation=0x7f030023;
    public static final int shortcut_value_menu_control=0x7f030024;
    public static final int shortcut_value_reading_control=0x7f030025;
    public static final int shortcut_value_system_actions=0x7f030026;
    public static final int shortcut_value_text_editing=0x7f030027;
    public static final int tutorial_scrolling_items=0x7f030028;
    public static final int view_actionable_pattern=0x7f030029;
    public static final int view_clicked_pattern=0x7f03002a;
    public static final int view_focused_or_selected_pattern=0x7f03002b;
    public static final int view_hovered_pattern=0x7f03002c;
    public static final int view_long_clicked_pattern=0x7f03002d;
    public static final int voice_commands=0x7f03002e;
    public static final int window_state_pattern=0x7f03002f;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f04000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040011;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040012;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040013;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040014;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040015;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040016;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040017;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f040018;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f040019;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001b;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f04001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f04001e;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f04001f;
    /**
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int actionTextColorAlpha=0x7f040020;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040021;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040022;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f040023;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040024;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040025;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f040026;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f040027;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f040028;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f040029;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f04002a;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f04002b;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f04002c;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f04002d;
    /**
     * Sets the enter and exit animations for a Snackbar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     */
    public static final int animationMode=0x7f04002e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int appBarLayoutStyle=0x7f04002f;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f040030;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f040031;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f040032;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040033;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040034;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040035;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040036;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040037;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040038;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundColor=0x7f040039;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetBottom=0x7f04003a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetEnd=0x7f04003b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetStart=0x7f04003c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetTop=0x7f04003d;
    /**
     * Alpha level for the color that is overlaid on top of the background color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int backgroundOverlayColorAlpha=0x7f04003e;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f04003f;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f040040;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f040041;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f040042;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     */
    public static final int badgeGravity=0x7f040043;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int badgeStyle=0x7f040044;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int badgeTextColor=0x7f040045;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f040046;
    /**
     * Whether the FAB should automatically hide when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoHide=0x7f040047;
    /**
     * Whether the extended FAB should automatically shrink when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoShrink=0x7f040048;
    /**
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int behavior_expandedOffset=0x7f040049;
    /**
     * Whether height of expanded sheet wraps content or not
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_fitToContents=0x7f04004a;
    /**
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int behavior_halfExpandedRatio=0x7f04004b;
    /**
     * Whether this bottom sheet can be hidden by dragging it further downwards
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_hideable=0x7f04004c;
    /**
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_overlapTop=0x7f04004d;
    /**
     * The height of the bottom sheet when it is collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     */
    public static final int behavior_peekHeight=0x7f04004e;
    /**
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     */
    public static final int behavior_saveFlags=0x7f04004f;
    /**
     * Skip the collapsed state once expanded; no effect unless it is hideable
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_skipCollapsed=0x7f040050;
    /**
     * The width of the border around the FAB.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f040051;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f040052;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomAppBarStyle=0x7f040053;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomNavigationStyle=0x7f040054;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetDialogTheme=0x7f040055;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetStyle=0x7f040056;
    /**
     * The color to use for the box's background color when in filled box mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxBackgroundColor=0x7f040057;
    /**
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     */
    public static final int boxBackgroundMode=0x7f040058;
    /**
     * Value to use for the EditText's collapsed top padding in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCollapsedPaddingTop=0x7f040059;
    /**
     * The value to use for the box's bottom end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomEnd=0x7f04005a;
    /**
     * The value to use for the box's bottom start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomStart=0x7f04005b;
    /**
     * The value to use for the box's top end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopEnd=0x7f04005c;
    /**
     * The value to use for the box's top start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopStart=0x7f04005d;
    /**
     * The color to use for the box's stroke when in outline box mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeColor=0x7f04005e;
    /**
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidth=0x7f04005f;
    /**
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidthFocused=0x7f040060;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f040061;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f040062;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f040063;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040064;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040065;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonCompat=0x7f040066;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f040067;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f040068;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f040069;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>icon_only</td><td>2</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * <tr><td>wide</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int buttonSize=0x7f04006a;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f04006b;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f04006c;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f04006d;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f04006e;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f04006f;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f040070;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f040071;
    /**
     * Foreground color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardForegroundColor=0x7f040072;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f040073;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f040074;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f040075;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardViewStyle=0x7f040076;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f040077;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f040078;
    /**
     * The id of the child button that should be checked by default within this button group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedButton=0x7f040079;
    /**
     * The id of the child chip that should be checked by default within this chip group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedChip=0x7f04007a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedIcon=0x7f04007b;
    /**
     * Deprecated. Use checkedIconVisible instead
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconEnabled=0x7f04007c;
    /**
     * Tint color for the checked icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int checkedIconTint=0x7f04007d;
    /**
     * Whether to show the checked icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconVisible=0x7f04007e;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f04007f;
    /**
     * Background color to apply to the chip.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipBackgroundColor=0x7f040080;
    /**
     * Corner radius to apply to the chip's shape.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipCornerRadius=0x7f040081;
    /**
     * Padding at the end of the chip, after the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipEndPadding=0x7f040082;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipGroupStyle=0x7f040083;
    /**
     * Icon drawable to display at the start of the chip.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipIcon=0x7f040084;
    /**
     * Deprecated. Use chipIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconEnabled=0x7f040085;
    /**
     * Size of the chip's icon and checked icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipIconSize=0x7f040086;
    /**
     * Tint to apply to the chip icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipIconTint=0x7f040087;
    /**
     * Whether to show the chip icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconVisible=0x7f040088;
    /**
     * Min height to apply to the chip. Total height includes stroke width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinHeight=0x7f040089;
    /**
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinTouchTargetSize=0x7f04008a;
    /**
     * Horizontal and vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacing=0x7f04008b;
    /**
     * Horizontal spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingHorizontal=0x7f04008c;
    /**
     * Vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingVertical=0x7f04008d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStandaloneStyle=0x7f04008e;
    /**
     * Padding at the start of the chip, before the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStartPadding=0x7f04008f;
    /**
     * Stroke color to apply to the chip's outline.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipStrokeColor=0x7f040090;
    /**
     * Stroke width to apply to the chip's outline.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStrokeWidth=0x7f040091;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStyle=0x7f040092;
    /**
     * Surface layer color to apply to the chip.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipSurfaceColor=0x7f040093;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int circleCrop=0x7f040094;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f040095;
    /**
     * Deprecated. Use closeIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconEnabled=0x7f040096;
    /**
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconEndPadding=0x7f040097;
    /**
     * Size of the chip's close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconSize=0x7f040098;
    /**
     * Padding at the start of the close icon, after the text. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconStartPadding=0x7f040099;
    /**
     * Tint to apply to the chip's close icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int closeIconTint=0x7f04009a;
    /**
     * Whether to show the close icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconVisible=0x7f04009b;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f04009c;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f04009d;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f04009e;
    /**
     * Specifies how the title should be positioned when collapsed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int collapsedTitleGravity=0x7f04009f;
    /**
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsedTitleTextAppearance=0x7f0400a0;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f0400a1;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f0400a2;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f0400a3;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f0400a4;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f0400a5;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f0400a6;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f0400a7;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f0400a8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int colorOnBackground=0x7f0400a9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnError=0x7f0400aa;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnPrimary=0x7f0400ab;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnPrimarySurface=0x7f0400ac;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnSecondary=0x7f0400ad;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnSurface=0x7f0400ae;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f0400af;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f0400b0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimarySurface=0x7f0400b1;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryVariant=0x7f0400b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>dark</td><td>0</td><td></td></tr>
     * <tr><td>light</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int colorScheme=0x7f0400b3;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondary=0x7f0400b4;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondaryVariant=0x7f0400b5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSurface=0x7f0400b6;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f0400b7;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f0400b8;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f0400b9;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f0400ba;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f0400bb;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f0400bc;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f0400bd;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f0400be;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f0400bf;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f0400c0;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f0400c1;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f0400c2;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f0400c3;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f0400c4;
    /**
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int contentScrim=0x7f0400c5;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f0400c6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f0400c7;
    /**
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamily=0x7f0400c8;
    /**
     * Bottom left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyBottomLeft=0x7f0400c9;
    /**
     * Bottom right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyBottomRight=0x7f0400ca;
    /**
     * Top left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyTopLeft=0x7f0400cb;
    /**
     * Top right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyTopRight=0x7f0400cc;
    /**
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f0400cd;
    /**
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSize=0x7f0400ce;
    /**
     * Bottom left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeBottomLeft=0x7f0400cf;
    /**
     * Bottom right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeBottomRight=0x7f0400d0;
    /**
     * Top left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeTopLeft=0x7f0400d1;
    /**
     * Top right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeTopRight=0x7f0400d2;
    /**
     * Whether the layout is laid out as if the character counter will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int counterEnabled=0x7f0400d3;
    /**
     * The max length to display in the character counter.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int counterMaxLength=0x7f0400d4;
    /**
     * TextAppearance of the character counter when the text is longer than the max.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextAppearance=0x7f0400d5;
    /**
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextColor=0x7f0400d6;
    /**
     * TextAppearance of the character counter.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextAppearance=0x7f0400d7;
    /**
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextColor=0x7f0400d8;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f0400d9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayInvalidStyle=0x7f0400da;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int daySelectedStyle=0x7f0400db;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayStyle=0x7f0400dc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayTodayStyle=0x7f0400dd;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f0400de;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f0400df;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f0400e0;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f0400e1;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f0400e2;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f0400e3;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f0400e4;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f0400e5;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f0400e6;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f0400e7;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f0400e8;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f0400e9;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f0400ea;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f0400eb;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f0400ec;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f0400ed;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f0400ee;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableBottomCompat=0x7f0400ef;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableEndCompat=0x7f0400f0;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableLeftCompat=0x7f0400f1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableRightCompat=0x7f0400f2;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f0400f3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableStartCompat=0x7f0400f4;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int drawableTint=0x7f0400f5;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int drawableTintMode=0x7f0400f6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableTopCompat=0x7f0400f7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f0400f8;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f0400f9;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f0400fa;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f0400fb;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f0400fc;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f0400fd;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f0400fe;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f0400ff;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f040100;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int elevationOverlayColor=0x7f040101;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int elevationOverlayEnabled=0x7f040102;
    /**
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enableCopying=0x7f040103;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f040104;
    /**
     * Whether the end icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int endIconCheckable=0x7f040105;
    /**
     * Text to set as the content description for the end icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int endIconContentDescription=0x7f040106;
    /**
     * Drawable to use for the end icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int endIconDrawable=0x7f040107;
    /**
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     */
    public static final int endIconMode=0x7f040108;
    /**
     * Tint color to use for the end icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int endIconTint=0x7f040109;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int endIconTintMode=0x7f04010a;
    /**
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceMaterialTheme=0x7f04010b;
    /**
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceTextAppearance=0x7f04010c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ensureMinTouchTargetSize=0x7f04010d;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f04010e;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f04010f;
    /**
     * Whether the layout is laid out as if an error will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int errorEnabled=0x7f040110;
    /**
     * End icon to be shown when an error is displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorIconDrawable=0x7f040111;
    /**
     * Tint color to use for the error icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorIconTint=0x7f040112;
    /**
     * Blending mode used to apply the error icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int errorIconTintMode=0x7f040113;
    /**
     * TextAppearance of any error message displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorTextAppearance=0x7f040114;
    /**
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int errorTextColor=0x7f040115;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f040116;
    /**
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expanded=0x7f040117;
    /**
     * Specifies how the title should be positioned when expanded.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int expandedTitleGravity=0x7f040118;
    /**
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMargin=0x7f040119;
    /**
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginBottom=0x7f04011a;
    /**
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginEnd=0x7f04011b;
    /**
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginStart=0x7f04011c;
    /**
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginTop=0x7f04011d;
    /**
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandedTitleTextAppearance=0x7f04011e;
    /**
     * Motion spec for extend animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int extendMotionSpec=0x7f04011f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int extendedFloatingActionButtonStyle=0x7f040120;
    /**
     * The alignment of the fab relative to the BottomAppBar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     */
    public static final int fabAlignmentMode=0x7f040121;
    /**
     * The animation mode that should be used when the fab animates between alignment modes.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     */
    public static final int fabAnimationMode=0x7f040122;
    /**
     * The margin between the semi-circular cradle for the fab and the fab.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleMargin=0x7f040123;
    /**
     * The radius of the rounded corners on each side of the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleRoundedCornerRadius=0x7f040124;
    /**
     * The vertical offset between the fab from the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleVerticalOffset=0x7f040125;
    /**
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCustomSize=0x7f040126;
    /**
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     */
    public static final int fabSize=0x7f040127;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f040128;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f040129;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f04012a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f04012b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f04012c;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f04012d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int floatingActionButtonStyle=0x7f04012e;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f04012f;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f040130;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f040131;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f040132;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f040133;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f040134;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f040135;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f040136;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f040137;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f040138;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f040139;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int foregroundInsidePadding=0x7f04013a;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f04013b;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f04013c;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f04013d;
    /**
     * Layout resource to inflate as the header
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerLayout=0x7f04013e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f04013f;
    /**
     * The text to display as helper text underneath the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int helperText=0x7f040140;
    /**
     * Whether the layout's helper text functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int helperTextEnabled=0x7f040141;
    /**
     * TextAppearance of the helper text displayed underneath the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int helperTextTextAppearance=0x7f040142;
    /**
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int helperTextTextColor=0x7f040143;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hideMotionSpec=0x7f040144;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f040145;
    /**
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnScroll=0x7f040146;
    /**
     * Whether to animate hint state changes.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintAnimationEnabled=0x7f040147;
    /**
     * Whether the layout's floating label functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintEnabled=0x7f040148;
    /**
     * TextAppearance of the hint in the collapsed floating label.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hintTextAppearance=0x7f040149;
    /**
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int hintTextColor=0x7f04014a;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f04014b;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f04014c;
    /**
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int hoveredFocusedTranslationZ=0x7f04014d;
    /**
     * Icon drawable to display at the start of this view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f04014e;
    /**
     * Padding at the end of the icon, before the text. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconEndPadding=0x7f04014f;
    /**
     * Specifies how the icon should be positioned on the X axis.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * </table>
     */
    public static final int iconGravity=0x7f040150;
    /**
     * Padding between icon and button text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconPadding=0x7f040151;
    /**
     * Specifies the width and height to use for the icon drawable.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconSize=0x7f040152;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f040153;
    /**
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconStartPadding=0x7f040154;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f040155;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f040156;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f040157;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int imageAspectRatio=0x7f040158;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjust_height</td><td>2</td><td></td></tr>
     * <tr><td>adjust_width</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int imageAspectRatioAdjust=0x7f040159;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f04015a;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f04015b;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f04015c;
    /**
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int initialExpandedChildrenCount=0x7f04015d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int insetForeground=0x7f04015e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f04015f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isMaterialTheme=0x7f040160;
    /**
     * Whether the Preference is visible. By default, this is set to true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isPreferenceVisible=0x7f040161;
    /**
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemBackground=0x7f040162;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemFillColor=0x7f040163;
    /**
     * Horizontal padding (left and right) of navigation items, around the icon & text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemHorizontalPadding=0x7f040164;
    /**
     * Whether the items translate horizontally when in "selected" label visibility mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int itemHorizontalTranslationEnabled=0x7f040165;
    /**
     * Padding between the icon and the text for navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconPadding=0x7f040166;
    /**
     * The size of the icon navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconSize=0x7f040167;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemIconTint=0x7f040168;
    /**
     * Makes the TextView of the item text be at most this many lines tall.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int itemMaxLines=0x7f040169;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f04016a;
    /**
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemRippleColor=0x7f04016b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemShapeAppearance=0x7f04016c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemShapeAppearanceOverlay=0x7f04016d;
    /**
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemShapeFillColor=0x7f04016e;
    /**
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetBottom=0x7f04016f;
    /**
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetEnd=0x7f040170;
    /**
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetStart=0x7f040171;
    /**
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetTop=0x7f040172;
    /**
     * Horizontal spacing between two items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemSpacing=0x7f040173;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemStrokeColor=0x7f040174;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemStrokeWidth=0x7f040175;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearance=0x7f040176;
    /**
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceActive=0x7f040177;
    /**
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceInactive=0x7f040178;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemTextColor=0x7f040179;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f04017a;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f04017b;
    /**
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     */
    public static final int labelVisibilityMode=0x7f04017c;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f04017d;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f04017e;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f04017f;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f040180;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f040181;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f040182;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     */
    public static final int layout_collapseMode=0x7f040183;
    /**
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_collapseParallaxMultiplier=0x7f040184;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f040185;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f040186;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f040187;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     */
    public static final int layout_scrollFlags=0x7f040188;
    /**
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_scrollInterpolator=0x7f040189;
    /**
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int liftOnScroll=0x7f04018a;
    /**
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int liftOnScrollTargetViewId=0x7f04018b;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f04018c;
    /**
     * Vertical Spacing between two lines of items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineSpacing=0x7f04018d;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f04018e;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorMultipleAnimated=0x7f04018f;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorSingleAnimated=0x7f040190;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f040191;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f040192;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f040193;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f040194;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f040195;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f040196;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f040197;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f040198;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingEnd=0x7f040199;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f04019a;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f04019b;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingStart=0x7f04019c;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f04019d;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f04019e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogBodyTextStyle=0x7f04019f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTheme=0x7f0401a0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitleIconStyle=0x7f0401a1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitlePanelStyle=0x7f0401a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitleTextStyle=0x7f0401a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonOutlinedStyle=0x7f0401a4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonStyle=0x7f0401a5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonToggleGroupStyle=0x7f0401a6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarDay=0x7f0401a7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarFullscreenTheme=0x7f0401a8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderConfirmButton=0x7f0401a9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderDivider=0x7f0401aa;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderLayout=0x7f0401ab;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderSelection=0x7f0401ac;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderTitle=0x7f0401ad;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderToggleButton=0x7f0401ae;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarStyle=0x7f0401af;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarTheme=0x7f0401b0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCardViewStyle=0x7f0401b1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialThemeOverlay=0x7f0401b2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxActionInlineWidth=0x7f0401b3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f0401b4;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxCharacterCount=0x7f0401b5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f0401b6;
    /**
     * Maximum icon image size.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxImageSize=0x7f0401b7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f0401b8;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0401b9;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f0401ba;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f0401bb;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minTouchTargetSize=0x7f0401bc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f0401bd;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f0401be;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f0401bf;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f0401c0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationViewStyle=0x7f0401c1;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f0401c2;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int number=0x7f0401c3;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f0401c4;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f0401c5;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f0401c6;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f0401c7;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f0401c8;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f0401c9;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f0401ca;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f0401cb;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f0401cc;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f0401cd;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f0401ce;
    /**
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int passwordToggleContentDescription=0x7f0401cf;
    /**
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int passwordToggleDrawable=0x7f0401d0;
    /**
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordToggleEnabled=0x7f0401d1;
    /**
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int passwordToggleTint=0x7f0401d2;
    /**
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int passwordToggleTintMode=0x7f0401d3;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f0401d4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuBackground=0x7f0401d5;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f0401d6;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f0401d7;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f0401d8;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f0401d9;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f0401da;
    /**
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryTitleTextAppearance=0x7f0401db;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f0401dc;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f0401dd;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f0401de;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f0401df;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f0401e0;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f0401e1;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f0401e2;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f0401e3;
    /**
     * TranslationZ value for the FAB when pressed
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pressedTranslationZ=0x7f0401e4;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f0401e5;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f0401e6;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f0401e7;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f0401e8;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f0401e9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rangeFillColor=0x7f0401ea;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f0401eb;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f0401ec;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f0401ed;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int recyclerViewStyle=0x7f0401ee;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f0401ef;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rippleColor=0x7f0401f0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int scopeUris=0x7f0401f1;
    /**
     * Specifies the duration used for scrim visibility animations.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int scrimAnimationDuration=0x7f0401f2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int scrimBackground=0x7f0401f3;
    /**
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrimVisibleHeightTrigger=0x7f0401f4;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f0401f5;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f0401f6;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f0401f7;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f0401f8;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f0401f9;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f0401fa;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f0401fb;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f0401fc;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f0401fd;
    /**
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearance=0x7f0401fe;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceLargeComponent=0x7f0401ff;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceMediumComponent=0x7f040200;
    /**
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceOverlay=0x7f040201;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceSmallComponent=0x7f040202;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f040203;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f040204;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f040205;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int showMotionSpec=0x7f040206;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f040207;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f040208;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f040209;
    /**
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shrinkMotionSpec=0x7f04020a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f04020b;
    /**
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLine=0x7f04020c;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f04020d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleSelection=0x7f04020e;
    /**
     * Style to use for action button within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarButtonStyle=0x7f04020f;
    /**
     * Style to use for Snackbars in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarStyle=0x7f040210;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f040211;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f040212;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f040213;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f040214;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f040215;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f040216;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f040217;
    /**
     * Whether the start icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int startIconCheckable=0x7f040218;
    /**
     * Text to set as the content description for the start icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int startIconContentDescription=0x7f040219;
    /**
     * Drawable to use for the start icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int startIconDrawable=0x7f04021a;
    /**
     * Tint color to use for the start icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int startIconTint=0x7f04021b;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int startIconTintMode=0x7f04021c;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f04021d;
    /**
     * @deprecated in favor of {@link R.attr#state_lifted}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static final int state_collapsed=0x7f04021e;
    /**
     * @deprecated in favor of {@link R.attr#state_liftable}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static final int state_collapsible=0x7f04021f;
    /**
     * State when a Card is being dragged.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_dragged=0x7f040220;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_liftable=0x7f040221;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_lifted=0x7f040222;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f040223;
    /**
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarForeground=0x7f040224;
    /**
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarScrim=0x7f040225;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f040226;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int strokeWidth=0x7f040227;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f040228;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f040229;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f04022a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f04022b;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f04022c;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f04022d;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f04022e;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f04022f;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f040230;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f040231;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f040232;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f040233;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f040234;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f040235;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f040236;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f040237;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f040238;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f040239;
    /**
     * Reference to a background to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabBackground=0x7f04023a;
    /**
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabContentStart=0x7f04023b;
    /**
     * Gravity constant for tabs.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabGravity=0x7f04023c;
    /**
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIconTint=0x7f04023d;
    /**
     * Blending mode to apply to tab icons.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int tabIconTintMode=0x7f04023e;
    /**
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabIndicator=0x7f04023f;
    /**
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int tabIndicatorAnimationDuration=0x7f040240;
    /**
     * Color of the indicator used to show the currently selected tab.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIndicatorColor=0x7f040241;
    /**
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabIndicatorFullWidth=0x7f040242;
    /**
     * Gravity constant for tab selection indicator.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     */
    public static final int tabIndicatorGravity=0x7f040243;
    /**
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int tabIndicatorHeight=0x7f040244;
    /**
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabInlineLabel=0x7f040245;
    /**
     * The maximum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMaxWidth=0x7f040246;
    /**
     * The minimum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMinWidth=0x7f040247;
    /**
     * The behavior mode for the Tabs in this layout
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabMode=0x7f040248;
    /**
     * The preferred padding along all edges of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPadding=0x7f040249;
    /**
     * The preferred padding along the bottom edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingBottom=0x7f04024a;
    /**
     * The preferred padding along the end edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingEnd=0x7f04024b;
    /**
     * The preferred padding along the start edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingStart=0x7f04024c;
    /**
     * The preferred padding along the top edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingTop=0x7f04024d;
    /**
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabRippleColor=0x7f04024e;
    /**
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    @Deprecated
    public static final int tabSelectedTextColor=0x7f04024f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabStyle=0x7f040250;
    /**
     * A reference to a TextAppearance style to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabTextAppearance=0x7f040251;
    /**
     * The default text color to be applied to tabs.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabTextColor=0x7f040252;
    /**
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabUnboundedRipple=0x7f040253;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f040254;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody1=0x7f040255;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody2=0x7f040256;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceButton=0x7f040257;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceCaption=0x7f040258;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline1=0x7f040259;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline2=0x7f04025a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline3=0x7f04025b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline4=0x7f04025c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline5=0x7f04025d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline6=0x7f04025e;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f04025f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAppearanceLineHeightEnabled=0x7f040260;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f040261;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f040262;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f040263;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceOverline=0x7f040264;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f040265;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f040266;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f040267;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f040268;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle1=0x7f040269;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle2=0x7f04026a;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f04026b;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f04026c;
    /**
     * Padding at the end of the text, before the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textEndPadding=0x7f04026d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textInputStyle=0x7f04026e;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int textLocale=0x7f04026f;
    /**
     * Padding at the start of the text, after the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textStartPadding=0x7f040270;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f040271;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int themeLineHeight=0x7f040272;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f040273;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f040274;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f040275;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f040276;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040277;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f040278;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f040279;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f04027a;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f04027b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f04027c;
    /**
     * Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleEnabled=0x7f04027d;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f04027e;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f04027f;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f040280;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f040281;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f040282;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f040283;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f040284;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f040285;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f040286;
    /**
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarId=0x7f040287;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f040288;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f040289;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f04028a;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f04028b;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f04028c;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f04028d;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f04028e;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f04028f;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f040290;
    /**
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int updatesContinuously=0x7f040291;
    /**
     * Enable compat padding.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useCompatPadding=0x7f040292;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useMaterialThemeColors=0x7f040293;
    /**
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useSimpleSummaryProvider=0x7f040294;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f040295;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f040296;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f040297;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f040298;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f040299;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f04029a;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f04029b;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f04029c;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f04029d;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f04029e;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f04029f;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f0402a0;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f0402a1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearSelectedStyle=0x7f0402a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearStyle=0x7f0402a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearTodayStyle=0x7f0402a4;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    public static final int abc_allow_stacked_button_bar=0x7f050001;
    public static final int abc_config_actionMenuItemAllCaps=0x7f050002;
    public static final int config_materialPreferenceIconSpaceReserved=0x7f050003;
    public static final int is_phone_sized=0x7f050004;
    public static final int is_tablet=0x7f050005;
    public static final int mtrl_btn_textappearance_all_caps=0x7f050006;
    public static final int pref_a11y_hints_default=0x7f050007;
    public static final int pref_dim_volume_three_clicks_default=0x7f050008;
    public static final int pref_dim_when_talkback_enabled_default=0x7f050009;
    public static final int pref_echo_recognized_text_default=0x7f05000a;
    public static final int pref_explore_by_touch_default=0x7f05000b;
    public static final int pref_intonation_default=0x7f05000c;
    public static final int pref_performance_stats_default=0x7f05000d;
    public static final int pref_phonetic_letters_default=0x7f05000e;
    public static final int pref_proximity_default=0x7f05000f;
    public static final int pref_punctuation_default=0x7f050010;
    public static final int pref_reduce_window_delay_default=0x7f050011;
    public static final int pref_resume_volume_buttons_long_click_default=0x7f050012;
    public static final int pref_screenoff_default=0x7f050013;
    public static final int pref_selector_a11y_volume_default=0x7f050014;
    public static final int pref_selector_activation_default=0x7f050015;
    public static final int pref_selector_audio_focus_default=0x7f050016;
    public static final int pref_selector_granularity_characters_default=0x7f050017;
    public static final int pref_selector_granularity_controls_default=0x7f050018;
    public static final int pref_selector_granularity_default=0x7f050019;
    public static final int pref_selector_granularity_headings_default=0x7f05001a;
    public static final int pref_selector_granularity_landmarks_default=0x7f05001b;
    public static final int pref_selector_granularity_lines_default=0x7f05001c;
    public static final int pref_selector_granularity_links_default=0x7f05001d;
    public static final int pref_selector_granularity_paragraphs_default=0x7f05001e;
    public static final int pref_selector_granularity_words_default=0x7f05001f;
    public static final int pref_selector_hide_screen_default=0x7f050020;
    public static final int pref_selector_language_default=0x7f050021;
    public static final int pref_selector_punctuation_default=0x7f050022;
    public static final int pref_selector_scroll_seq_default=0x7f050023;
    public static final int pref_selector_special_widget_default=0x7f050024;
    public static final int pref_selector_speech_rate_default=0x7f050025;
    public static final int pref_selector_verbosity_default=0x7f050026;
    public static final int pref_shake_to_read_default=0x7f050027;
    public static final int pref_show_context_menu_audio_ducking_default=0x7f050028;
    public static final int pref_show_context_menu_copy_last_spoken_phrase_default=0x7f050029;
    public static final int pref_show_context_menu_custom_action_default=0x7f05002a;
    public static final int pref_show_context_menu_dim_or_brighten_default=0x7f05002b;
    public static final int pref_show_context_menu_editing_default=0x7f05002c;
    public static final int pref_show_context_menu_find_on_screen_default=0x7f05002d;
    public static final int pref_show_context_menu_granularity_default=0x7f05002e;
    public static final int pref_show_context_menu_labeling_default=0x7f05002f;
    public static final int pref_show_context_menu_language_default=0x7f050030;
    public static final int pref_show_context_menu_links_default=0x7f050031;
    public static final int pref_show_context_menu_page_navigation_default=0x7f050032;
    public static final int pref_show_context_menu_pause_feedback_default=0x7f050033;
    public static final int pref_show_context_menu_read_from_current_default=0x7f050034;
    public static final int pref_show_context_menu_read_from_top_default=0x7f050035;
    public static final int pref_show_context_menu_repeat_last_spoken_phrase_default=0x7f050036;
    public static final int pref_show_context_menu_sound_feedback_default=0x7f050037;
    public static final int pref_show_context_menu_spell_last_spoken_phrase_default=0x7f050038;
    public static final int pref_show_context_menu_system_action_default=0x7f050039;
    public static final int pref_show_context_menu_talkback_settings_default=0x7f05003a;
    public static final int pref_show_context_menu_tts_settings_default=0x7f05003b;
    public static final int pref_show_context_menu_verbosity_default=0x7f05003c;
    public static final int pref_show_context_menu_vibration_feedback_default=0x7f05003d;
    public static final int pref_show_context_menu_voice_commands_default=0x7f05003e;
    public static final int pref_show_navigation_menu_characters_default=0x7f05003f;
    public static final int pref_show_navigation_menu_controls_default=0x7f050040;
    public static final int pref_show_navigation_menu_granularity_default=0x7f050041;
    public static final int pref_show_navigation_menu_headings_default=0x7f050042;
    public static final int pref_show_navigation_menu_landmarks_default=0x7f050043;
    public static final int pref_show_navigation_menu_lines_default=0x7f050044;
    public static final int pref_show_navigation_menu_links_default=0x7f050045;
    public static final int pref_show_navigation_menu_other_web_navigation_default=0x7f050046;
    public static final int pref_show_navigation_menu_paragraphs_default=0x7f050047;
    public static final int pref_show_navigation_menu_special_content_default=0x7f050048;
    public static final int pref_show_navigation_menu_words_default=0x7f050049;
    public static final int pref_show_suspension_confirmation_dialog_default=0x7f05004a;
    public static final int pref_single_tap_default=0x7f05004b;
    public static final int pref_soundback_default=0x7f05004c;
    public static final int pref_speak_container_element_positions_default=0x7f05004d;
    public static final int pref_speak_element_ids_default=0x7f05004e;
    public static final int pref_speak_passwords_without_headphones_default=0x7f05004f;
    public static final int pref_speak_roles_default=0x7f050050;
    public static final int pref_tree_debug_default=0x7f050051;
    public static final int pref_tts_overlay_default=0x7f050052;
    public static final int pref_use_audio_focus_default=0x7f050053;
    public static final int pref_verbose_scroll_announcement_default=0x7f050054;
    public static final int pref_vibration_default=0x7f050055;
    public static final int pref_web_scripts_default=0x7f050056;
    public static final int support_lift_to_type=0x7f050057;
    public static final int supports_text_replacement=0x7f050058;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060001;
    public static final int abc_btn_colored_borderless_text_material=0x7f060002;
    public static final int abc_btn_colored_text_material=0x7f060003;
    public static final int abc_color_highlight_material=0x7f060004;
    public static final int abc_hint_foreground_material_dark=0x7f060005;
    public static final int abc_hint_foreground_material_light=0x7f060006;
    public static final int abc_input_method_navigation_guard=0x7f060007;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060008;
    public static final int abc_primary_text_disable_only_material_light=0x7f060009;
    public static final int abc_primary_text_material_dark=0x7f06000a;
    public static final int abc_primary_text_material_light=0x7f06000b;
    public static final int abc_search_url_text=0x7f06000c;
    public static final int abc_search_url_text_normal=0x7f06000d;
    public static final int abc_search_url_text_pressed=0x7f06000e;
    public static final int abc_search_url_text_selected=0x7f06000f;
    public static final int abc_secondary_text_material_dark=0x7f060010;
    public static final int abc_secondary_text_material_light=0x7f060011;
    public static final int abc_tint_btn_checkable=0x7f060012;
    public static final int abc_tint_default=0x7f060013;
    public static final int abc_tint_edittext=0x7f060014;
    public static final int abc_tint_seek_thumb=0x7f060015;
    public static final int abc_tint_spinner=0x7f060016;
    public static final int abc_tint_switch_track=0x7f060017;
    public static final int accent_material_dark=0x7f060018;
    public static final int accent_material_light=0x7f060019;
    public static final int accessibility_touch_guard=0x7f06001a;
    public static final int actionBarTextColorPrimary=0x7f06001b;
    public static final int alert_dialog_bg_color=0x7f06001c;
    public static final int androidx_core_ripple_material_light=0x7f06001d;
    public static final int androidx_core_secondary_text_default_material_light=0x7f06001e;
    public static final int background_floating_material_dark=0x7f06001f;
    public static final int background_floating_material_light=0x7f060020;
    public static final int background_material_dark=0x7f060021;
    public static final int background_material_light=0x7f060022;
    public static final int braille_block_background=0x7f060023;
    public static final int braille_block_dash_path=0x7f060024;
    public static final int bright_foreground_disabled_material_dark=0x7f060025;
    public static final int bright_foreground_disabled_material_light=0x7f060026;
    public static final int bright_foreground_inverse_material_dark=0x7f060027;
    public static final int bright_foreground_inverse_material_light=0x7f060028;
    public static final int bright_foreground_material_dark=0x7f060029;
    public static final int bright_foreground_material_light=0x7f06002a;
    public static final int button_material_dark=0x7f06002b;
    public static final int button_material_light=0x7f06002c;
    public static final int cardview_dark_background=0x7f06002d;
    public static final int cardview_light_background=0x7f06002e;
    public static final int cardview_shadow_end_color=0x7f06002f;
    public static final int cardview_shadow_start_color=0x7f060030;
    public static final int checkbox_themeable_attribute_color=0x7f060031;
    public static final int colorAccent=0x7f060032;
    public static final int colorAccentFocused=0x7f060033;
    public static final int common_google_signin_btn_text_dark=0x7f060034;
    public static final int common_google_signin_btn_text_dark_default=0x7f060035;
    public static final int common_google_signin_btn_text_dark_disabled=0x7f060036;
    public static final int common_google_signin_btn_text_dark_focused=0x7f060037;
    public static final int common_google_signin_btn_text_dark_pressed=0x7f060038;
    public static final int common_google_signin_btn_text_light=0x7f060039;
    public static final int common_google_signin_btn_text_light_default=0x7f06003a;
    public static final int common_google_signin_btn_text_light_disabled=0x7f06003b;
    public static final int common_google_signin_btn_text_light_focused=0x7f06003c;
    public static final int common_google_signin_btn_text_light_pressed=0x7f06003d;
    public static final int common_google_signin_btn_tint=0x7f06003e;
    public static final int design_bottom_navigation_shadow_color=0x7f06003f;
    public static final int design_box_stroke_color=0x7f060040;
    public static final int design_dark_default_color_background=0x7f060041;
    public static final int design_dark_default_color_error=0x7f060042;
    public static final int design_dark_default_color_on_background=0x7f060043;
    public static final int design_dark_default_color_on_error=0x7f060044;
    public static final int design_dark_default_color_on_primary=0x7f060045;
    public static final int design_dark_default_color_on_secondary=0x7f060046;
    public static final int design_dark_default_color_on_surface=0x7f060047;
    public static final int design_dark_default_color_primary=0x7f060048;
    public static final int design_dark_default_color_primary_dark=0x7f060049;
    public static final int design_dark_default_color_primary_variant=0x7f06004a;
    public static final int design_dark_default_color_secondary=0x7f06004b;
    public static final int design_dark_default_color_secondary_variant=0x7f06004c;
    public static final int design_dark_default_color_surface=0x7f06004d;
    public static final int design_default_color_background=0x7f06004e;
    public static final int design_default_color_error=0x7f06004f;
    public static final int design_default_color_on_background=0x7f060050;
    public static final int design_default_color_on_error=0x7f060051;
    public static final int design_default_color_on_primary=0x7f060052;
    public static final int design_default_color_on_secondary=0x7f060053;
    public static final int design_default_color_on_surface=0x7f060054;
    public static final int design_default_color_primary=0x7f060055;
    public static final int design_default_color_primary_dark=0x7f060056;
    public static final int design_default_color_primary_variant=0x7f060057;
    public static final int design_default_color_secondary=0x7f060058;
    public static final int design_default_color_secondary_variant=0x7f060059;
    public static final int design_default_color_surface=0x7f06005a;
    public static final int design_error=0x7f06005b;
    public static final int design_fab_shadow_end_color=0x7f06005c;
    public static final int design_fab_shadow_mid_color=0x7f06005d;
    public static final int design_fab_shadow_start_color=0x7f06005e;
    public static final int design_fab_stroke_end_inner_color=0x7f06005f;
    public static final int design_fab_stroke_end_outer_color=0x7f060060;
    public static final int design_fab_stroke_top_inner_color=0x7f060061;
    public static final int design_fab_stroke_top_outer_color=0x7f060062;
    public static final int design_icon_tint=0x7f060063;
    public static final int design_snackbar_background_color=0x7f060064;
    public static final int dim_foreground_disabled_material_dark=0x7f060065;
    public static final int dim_foreground_disabled_material_light=0x7f060066;
    public static final int dim_foreground_material_dark=0x7f060067;
    public static final int dim_foreground_material_light=0x7f060068;
    public static final int divider_color=0x7f060069;
    public static final int error_color_material_dark=0x7f06006a;
    public static final int error_color_material_light=0x7f06006b;
    public static final int foreground_material_dark=0x7f06006c;
    public static final int foreground_material_light=0x7f06006d;
    public static final int gesture_circle=0x7f06006e;
    public static final int gesture_circle_gradient=0x7f06006f;
    public static final int google_black=0x7f060070;
    public static final int google_blue100=0x7f060071;
    public static final int google_blue300=0x7f060072;
    public static final int google_blue600=0x7f060073;
    public static final int google_blue900=0x7f060074;
    public static final int google_grey100=0x7f060075;
    public static final int google_grey200=0x7f060076;
    public static final int google_grey50=0x7f060077;
    public static final int google_grey500=0x7f060078;
    public static final int google_grey700=0x7f060079;
    public static final int google_grey900=0x7f06007a;
    public static final int google_transparent=0x7f06007b;
    public static final int google_white=0x7f06007c;
    public static final int highlighted_text_material_dark=0x7f06007d;
    public static final int highlighted_text_material_light=0x7f06007e;
    public static final int hint_background=0x7f06007f;
    public static final int input_plane_background=0x7f060080;
    public static final int input_plane_caption=0x7f060081;
    public static final int input_plane_debug_background=0x7f060082;
    public static final int input_plane_dot_background_default=0x7f060083;
    public static final int input_plane_dot_background_pressed=0x7f060084;
    public static final int input_plane_dot_number_default=0x7f060085;
    public static final int input_plane_dot_number_pressed=0x7f060086;
    public static final int input_plane_most_recent_animation=0x7f060087;
    public static final int input_plane_touch_circle=0x7f060088;
    public static final int light_gray=0x7f060089;
    public static final int material_blue_grey_800=0x7f06008a;
    public static final int material_blue_grey_900=0x7f06008b;
    public static final int material_blue_grey_950=0x7f06008c;
    public static final int material_deep_teal_200=0x7f06008d;
    public static final int material_deep_teal_500=0x7f06008e;
    public static final int material_grey_100=0x7f06008f;
    public static final int material_grey_300=0x7f060090;
    public static final int material_grey_50=0x7f060091;
    public static final int material_grey_600=0x7f060092;
    public static final int material_grey_800=0x7f060093;
    public static final int material_grey_850=0x7f060094;
    public static final int material_grey_900=0x7f060095;
    public static final int material_on_background_disabled=0x7f060096;
    public static final int material_on_background_emphasis_high_type=0x7f060097;
    public static final int material_on_background_emphasis_medium=0x7f060098;
    public static final int material_on_primary_disabled=0x7f060099;
    public static final int material_on_primary_emphasis_high_type=0x7f06009a;
    public static final int material_on_primary_emphasis_medium=0x7f06009b;
    public static final int material_on_surface_disabled=0x7f06009c;
    public static final int material_on_surface_emphasis_high_type=0x7f06009d;
    public static final int material_on_surface_emphasis_medium=0x7f06009e;
    public static final int mtrl_bottom_nav_colored_item_tint=0x7f06009f;
    public static final int mtrl_bottom_nav_colored_ripple_color=0x7f0600a0;
    public static final int mtrl_bottom_nav_item_tint=0x7f0600a1;
    public static final int mtrl_bottom_nav_ripple_color=0x7f0600a2;
    public static final int mtrl_btn_bg_color_selector=0x7f0600a3;
    public static final int mtrl_btn_ripple_color=0x7f0600a4;
    public static final int mtrl_btn_stroke_color_selector=0x7f0600a5;
    public static final int mtrl_btn_text_btn_bg_color_selector=0x7f0600a6;
    public static final int mtrl_btn_text_btn_ripple_color=0x7f0600a7;
    public static final int mtrl_btn_text_color_disabled=0x7f0600a8;
    public static final int mtrl_btn_text_color_selector=0x7f0600a9;
    public static final int mtrl_btn_transparent_bg_color=0x7f0600aa;
    public static final int mtrl_calendar_item_stroke_color=0x7f0600ab;
    public static final int mtrl_calendar_selected_range=0x7f0600ac;
    public static final int mtrl_card_view_foreground=0x7f0600ad;
    public static final int mtrl_card_view_ripple=0x7f0600ae;
    public static final int mtrl_chip_background_color=0x7f0600af;
    public static final int mtrl_chip_close_icon_tint=0x7f0600b0;
    public static final int mtrl_chip_ripple_color=0x7f0600b1;
    public static final int mtrl_chip_surface_color=0x7f0600b2;
    public static final int mtrl_chip_text_color=0x7f0600b3;
    public static final int mtrl_choice_chip_background_color=0x7f0600b4;
    public static final int mtrl_choice_chip_ripple_color=0x7f0600b5;
    public static final int mtrl_choice_chip_text_color=0x7f0600b6;
    public static final int mtrl_error=0x7f0600b7;
    public static final int mtrl_extended_fab_bg_color_selector=0x7f0600b8;
    public static final int mtrl_extended_fab_ripple_color=0x7f0600b9;
    public static final int mtrl_extended_fab_text_color_selector=0x7f0600ba;
    public static final int mtrl_fab_ripple_color=0x7f0600bb;
    public static final int mtrl_filled_background_color=0x7f0600bc;
    public static final int mtrl_filled_icon_tint=0x7f0600bd;
    public static final int mtrl_filled_stroke_color=0x7f0600be;
    public static final int mtrl_indicator_text_color=0x7f0600bf;
    public static final int mtrl_navigation_item_background_color=0x7f0600c0;
    public static final int mtrl_navigation_item_icon_tint=0x7f0600c1;
    public static final int mtrl_navigation_item_text_color=0x7f0600c2;
    public static final int mtrl_on_primary_text_btn_text_color_selector=0x7f0600c3;
    public static final int mtrl_outlined_icon_tint=0x7f0600c4;
    public static final int mtrl_outlined_stroke_color=0x7f0600c5;
    public static final int mtrl_popupmenu_overlay_color=0x7f0600c6;
    public static final int mtrl_scrim_color=0x7f0600c7;
    public static final int mtrl_tabs_colored_ripple_color=0x7f0600c8;
    public static final int mtrl_tabs_icon_color_selector=0x7f0600c9;
    public static final int mtrl_tabs_icon_color_selector_colored=0x7f0600ca;
    public static final int mtrl_tabs_legacy_text_color_selector=0x7f0600cb;
    public static final int mtrl_tabs_ripple_color=0x7f0600cc;
    public static final int mtrl_text_btn_text_color_selector=0x7f0600cd;
    public static final int mtrl_textinput_default_box_stroke_color=0x7f0600ce;
    public static final int mtrl_textinput_disabled_color=0x7f0600cf;
    public static final int mtrl_textinput_filled_box_default_background_color=0x7f0600d0;
    public static final int mtrl_textinput_focused_box_stroke_color=0x7f0600d1;
    public static final int mtrl_textinput_hovered_box_stroke_color=0x7f0600d2;
    public static final int notification_action_color_filter=0x7f0600d3;
    public static final int notification_icon_bg_color=0x7f0600d4;
    public static final int overlay_background=0x7f0600d5;
    public static final int preference_fallback_accent_color=0x7f0600d6;
    public static final int primary_dark_material_dark=0x7f0600d7;
    public static final int primary_dark_material_light=0x7f0600d8;
    public static final int primary_material_dark=0x7f0600d9;
    public static final int primary_material_light=0x7f0600da;
    public static final int primary_text_default_material_dark=0x7f0600db;
    public static final int primary_text_default_material_light=0x7f0600dc;
    public static final int primary_text_disabled_material_dark=0x7f0600dd;
    public static final int primary_text_disabled_material_light=0x7f0600de;
    public static final int quick_menu_overlay_text_color=0x7f0600df;
    public static final int ripple_material_dark=0x7f0600e0;
    public static final int ripple_material_light=0x7f0600e1;
    public static final int secondary_text_default_material_dark=0x7f0600e2;
    public static final int secondary_text_default_material_light=0x7f0600e3;
    public static final int secondary_text_disabled_material_dark=0x7f0600e4;
    public static final int secondary_text_disabled_material_light=0x7f0600e5;
    public static final int settings_background=0x7f0600e6;
    public static final int settings_bg_color=0x7f0600e7;
    public static final int settings_primary_text=0x7f0600e8;
    public static final int switch_thumb_disabled_material_dark=0x7f0600e9;
    public static final int switch_thumb_disabled_material_light=0x7f0600ea;
    public static final int switch_thumb_material_dark=0x7f0600eb;
    public static final int switch_thumb_material_light=0x7f0600ec;
    public static final int switch_thumb_normal_material_dark=0x7f0600ed;
    public static final int switch_thumb_normal_material_light=0x7f0600ee;
    public static final int tap_to_continue_text_color=0x7f0600ef;
    public static final int test_mtrl_calendar_day=0x7f0600f0;
    public static final int test_mtrl_calendar_day_selected=0x7f0600f1;
    public static final int text_color=0x7f0600f2;
    public static final int text_highlight_color=0x7f0600f3;
    public static final int title_color=0x7f0600f4;
    public static final int tooltip_background_dark=0x7f0600f5;
    public static final int tooltip_background_light=0x7f0600f6;
    public static final int training_background_color=0x7f0600f7;
    public static final int training_button_text_color=0x7f0600f8;
    public static final int training_divider_color=0x7f0600f9;
    public static final int training_edit_text_hint_color=0x7f0600fa;
    public static final int training_edit_text_text_color=0x7f0600fb;
    public static final int training_heading_color=0x7f0600fc;
    public static final int training_icon_color=0x7f0600fd;
    public static final int training_link_text_color=0x7f0600fe;
    public static final int training_list_item_border_color=0x7f0600ff;
    public static final int training_list_item_text_color=0x7f060100;
    public static final int training_navigation_button_bar_background_color=0x7f060101;
    public static final int training_note_border_color=0x7f060102;
    public static final int training_note_text_color=0x7f060103;
    public static final int training_page_number_text_color=0x7f060104;
    public static final int training_subtext_color=0x7f060105;
    public static final int training_text_color=0x7f060106;
    public static final int tutorial_arrow_color=0x7f060107;
    public static final int tutorial_background=0x7f060108;
    public static final int tutorial_button_background=0x7f060109;
    public static final int tutorial_footer_background=0x7f06010a;
    public static final int tutorial_footer_buttons=0x7f06010b;
    public static final int tutorial_footer_chevron_color=0x7f06010c;
    public static final int tutorial_grid_item=0x7f06010d;
    public static final int tutorial_leave_button_text_color=0x7f06010e;
    public static final int tutorial_main_item_background=0x7f06010f;
    public static final int tutorial_main_item_buttons=0x7f060110;
    public static final int tutorial_main_item_stroke=0x7f060111;
    public static final int tutorial_main_item_title=0x7f060112;
    public static final int tutorial_semi_black=0x7f060113;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    public static final int abc_action_bar_default_height_material=0x7f070002;
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    public static final int abc_action_bar_stacked_max_height=0x7f070009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000c;
    public static final int abc_action_button_min_height_material=0x7f07000d;
    public static final int abc_action_button_min_width_material=0x7f07000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f07000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f070010;
    public static final int abc_alert_dialog_button_dimen=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    public static final int abc_button_padding_vertical_material=0x7f070015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    public static final int abc_config_prefDialogWidth=0x7f070017;
    public static final int abc_control_corner_material=0x7f070018;
    public static final int abc_control_inset_material=0x7f070019;
    public static final int abc_control_padding_material=0x7f07001a;
    public static final int abc_dialog_corner_radius_material=0x7f07001b;
    public static final int abc_dialog_fixed_height_major=0x7f07001c;
    public static final int abc_dialog_fixed_height_minor=0x7f07001d;
    public static final int abc_dialog_fixed_width_major=0x7f07001e;
    public static final int abc_dialog_fixed_width_minor=0x7f07001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f070020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070021;
    public static final int abc_dialog_min_width_major=0x7f070022;
    public static final int abc_dialog_min_width_minor=0x7f070023;
    public static final int abc_dialog_padding_material=0x7f070024;
    public static final int abc_dialog_padding_top_material=0x7f070025;
    public static final int abc_dialog_title_divider_material=0x7f070026;
    public static final int abc_disabled_alpha_material_dark=0x7f070027;
    public static final int abc_disabled_alpha_material_light=0x7f070028;
    public static final int abc_dropdownitem_icon_width=0x7f070029;
    public static final int abc_dropdownitem_text_padding_left=0x7f07002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002d;
    public static final int abc_edit_text_inset_top_material=0x7f07002e;
    public static final int abc_floating_window_z=0x7f07002f;
    public static final int abc_list_item_height_large_material=0x7f070030;
    public static final int abc_list_item_height_material=0x7f070031;
    public static final int abc_list_item_height_small_material=0x7f070032;
    public static final int abc_list_item_padding_horizontal_material=0x7f070033;
    public static final int abc_panel_menu_list_width=0x7f070034;
    public static final int abc_progress_bar_height_material=0x7f070035;
    public static final int abc_search_view_preferred_height=0x7f070036;
    public static final int abc_search_view_preferred_width=0x7f070037;
    public static final int abc_seekbar_track_background_height_material=0x7f070038;
    public static final int abc_seekbar_track_progress_height_material=0x7f070039;
    public static final int abc_select_dialog_padding_start_material=0x7f07003a;
    public static final int abc_switch_padding=0x7f07003b;
    public static final int abc_text_size_body_1_material=0x7f07003c;
    public static final int abc_text_size_body_2_material=0x7f07003d;
    public static final int abc_text_size_button_material=0x7f07003e;
    public static final int abc_text_size_caption_material=0x7f07003f;
    public static final int abc_text_size_display_1_material=0x7f070040;
    public static final int abc_text_size_display_2_material=0x7f070041;
    public static final int abc_text_size_display_3_material=0x7f070042;
    public static final int abc_text_size_display_4_material=0x7f070043;
    public static final int abc_text_size_headline_material=0x7f070044;
    public static final int abc_text_size_large_material=0x7f070045;
    public static final int abc_text_size_medium_material=0x7f070046;
    public static final int abc_text_size_menu_header_material=0x7f070047;
    public static final int abc_text_size_menu_material=0x7f070048;
    public static final int abc_text_size_small_material=0x7f070049;
    public static final int abc_text_size_subhead_material=0x7f07004a;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f07004b;
    public static final int abc_text_size_title_material=0x7f07004c;
    public static final int abc_text_size_title_material_toolbar=0x7f07004d;
    public static final int action_bar_size=0x7f07004e;
    public static final int action_result_text_size=0x7f07004f;
    public static final int actions_drawable_size=0x7f070050;
    public static final int actions_item_text_size=0x7f070051;
    public static final int app_icon_size=0x7f070052;
    public static final int appcompat_dialog_background_inset=0x7f070053;
    public static final int button_bar_height=0x7f070054;
    public static final int cardview_compat_inset_shadow=0x7f070055;
    public static final int cardview_default_elevation=0x7f070056;
    public static final int cardview_default_radius=0x7f070057;
    public static final int compat_button_inset_horizontal_material=0x7f070058;
    public static final int compat_button_inset_vertical_material=0x7f070059;
    public static final int compat_button_padding_horizontal_material=0x7f07005a;
    public static final int compat_button_padding_vertical_material=0x7f07005b;
    public static final int compat_control_corner_material=0x7f07005c;
    public static final int compat_notification_large_icon_max_height=0x7f07005d;
    public static final int compat_notification_large_icon_max_width=0x7f07005e;
    public static final int content_margin_left=0x7f07005f;
    public static final int customize_menus_settings_layout_margin_end_6=0x7f070060;
    public static final int customize_menus_settings_layout_margin_start_16=0x7f070061;
    public static final int customize_menus_settings_layout_margin_start_24=0x7f070062;
    public static final int customize_menus_settings_menuitem_margin_bottom=0x7f070063;
    public static final int customize_menus_settings_menuitem_margin_top=0x7f070064;
    public static final int default_dimension=0x7f070065;
    public static final int design_appbar_elevation=0x7f070066;
    public static final int design_bottom_navigation_active_item_max_width=0x7f070067;
    public static final int design_bottom_navigation_active_item_min_width=0x7f070068;
    public static final int design_bottom_navigation_active_text_size=0x7f070069;
    public static final int design_bottom_navigation_elevation=0x7f07006a;
    public static final int design_bottom_navigation_height=0x7f07006b;
    public static final int design_bottom_navigation_icon_size=0x7f07006c;
    public static final int design_bottom_navigation_item_max_width=0x7f07006d;
    public static final int design_bottom_navigation_item_min_width=0x7f07006e;
    public static final int design_bottom_navigation_margin=0x7f07006f;
    public static final int design_bottom_navigation_shadow_height=0x7f070070;
    public static final int design_bottom_navigation_text_size=0x7f070071;
    public static final int design_bottom_sheet_elevation=0x7f070072;
    public static final int design_bottom_sheet_modal_elevation=0x7f070073;
    public static final int design_bottom_sheet_peek_height_min=0x7f070074;
    public static final int design_fab_border_width=0x7f070075;
    public static final int design_fab_elevation=0x7f070076;
    public static final int design_fab_image_size=0x7f070077;
    public static final int design_fab_size_mini=0x7f070078;
    public static final int design_fab_size_normal=0x7f070079;
    public static final int design_fab_translation_z_hovered_focused=0x7f07007a;
    public static final int design_fab_translation_z_pressed=0x7f07007b;
    public static final int design_navigation_elevation=0x7f07007c;
    public static final int design_navigation_icon_padding=0x7f07007d;
    public static final int design_navigation_icon_size=0x7f07007e;
    public static final int design_navigation_item_horizontal_padding=0x7f07007f;
    public static final int design_navigation_item_icon_padding=0x7f070080;
    public static final int design_navigation_max_width=0x7f070081;
    public static final int design_navigation_padding_bottom=0x7f070082;
    public static final int design_navigation_separator_vertical_padding=0x7f070083;
    public static final int design_snackbar_action_inline_max_width=0x7f070084;
    public static final int design_snackbar_action_text_color_alpha=0x7f070085;
    public static final int design_snackbar_background_corner_radius=0x7f070086;
    public static final int design_snackbar_elevation=0x7f070087;
    public static final int design_snackbar_extra_spacing_horizontal=0x7f070088;
    public static final int design_snackbar_max_width=0x7f070089;
    public static final int design_snackbar_min_width=0x7f07008a;
    public static final int design_snackbar_padding_horizontal=0x7f07008b;
    public static final int design_snackbar_padding_vertical=0x7f07008c;
    public static final int design_snackbar_padding_vertical_2lines=0x7f07008d;
    public static final int design_snackbar_text_size=0x7f07008e;
    public static final int design_tab_max_width=0x7f07008f;
    public static final int design_tab_scrollable_min_width=0x7f070090;
    public static final int design_tab_text_size=0x7f070091;
    public static final int design_tab_text_size_2line=0x7f070092;
    public static final int design_textinput_caption_translate_y=0x7f070093;
    public static final int dim_screen_bottom_offset=0x7f070094;
    public static final int disabled_alpha_material_dark=0x7f070095;
    public static final int disabled_alpha_material_light=0x7f070096;
    public static final int dot_block_dash_path_interval=0x7f070097;
    public static final int dot_block_dash_path_stroke_width=0x7f070098;
    public static final int dot_block_padding=0x7f070099;
    public static final int edittext_min_height=0x7f07009a;
    public static final int fastscroll_default_thickness=0x7f07009b;
    public static final int fastscroll_margin=0x7f07009c;
    public static final int fastscroll_minimum_range=0x7f07009d;
    public static final int full_screen_preference_fragment_padding_on_watch=0x7f07009e;
    public static final int highlight_alpha_material_colored=0x7f07009f;
    public static final int highlight_alpha_material_dark=0x7f0700a0;
    public static final int highlight_alpha_material_light=0x7f0700a1;
    public static final int hint_alpha_material_dark=0x7f0700a2;
    public static final int hint_alpha_material_light=0x7f0700a3;
    public static final int hint_margin=0x7f0700a4;
    public static final int hint_pressed_alpha_material_dark=0x7f0700a5;
    public static final int hint_pressed_alpha_material_light=0x7f0700a6;
    public static final int hint_text_size=0x7f0700a7;
    public static final int input_plane_debug_background_inset=0x7f0700a8;
    public static final int input_plane_dot_number_size_multiplier=0x7f0700a9;
    public static final int input_plane_dot_number_stroke_width=0x7f0700aa;
    public static final int input_plane_dot_radius=0x7f0700ab;
    public static final int input_plane_touch_circle_size_multiplier=0x7f0700ac;
    public static final int input_plane_touch_circle_stroke_width=0x7f0700ad;
    public static final int input_view_caption_bottom_margin=0x7f0700ae;
    public static final int input_view_caption_text_size=0x7f0700af;
    public static final int input_view_most_recent_text_size=0x7f0700b0;
    public static final int intro_animation_black_background_corner_radius=0x7f0700b1;
    public static final int intro_animation_border_width=0x7f0700b2;
    public static final int intro_animation_dot_diameter=0x7f0700b3;
    public static final int intro_animation_dot_horizontal_length_to_far_border=0x7f0700b4;
    public static final int intro_animation_dot_horizontal_length_to_near_border=0x7f0700b5;
    public static final int intro_animation_dot_vertical_length_to_far_border=0x7f0700b6;
    public static final int intro_animation_dot_vertical_length_to_near_border=0x7f0700b7;
    public static final int intro_animation_gray_background_corner_radius=0x7f0700b8;
    public static final int intro_animation_letter_horizontal_length_to_border=0x7f0700b9;
    public static final int intro_animation_letter_vertical_length_to_border=0x7f0700ba;
    public static final int intro_animation_middle_dot_vertical_length_to_border=0x7f0700bb;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f0700bc;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f0700bd;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f0700be;
    public static final int material_emphasis_disabled=0x7f0700bf;
    public static final int material_emphasis_high_type=0x7f0700c0;
    public static final int material_emphasis_medium=0x7f0700c1;
    public static final int material_text_view_test_line_height=0x7f0700c2;
    public static final int material_text_view_test_line_height_override=0x7f0700c3;
    public static final int mtrl_alert_dialog_background_inset_bottom=0x7f0700c4;
    public static final int mtrl_alert_dialog_background_inset_end=0x7f0700c5;
    public static final int mtrl_alert_dialog_background_inset_start=0x7f0700c6;
    public static final int mtrl_alert_dialog_background_inset_top=0x7f0700c7;
    public static final int mtrl_alert_dialog_picker_background_inset=0x7f0700c8;
    public static final int mtrl_badge_horizontal_edge_offset=0x7f0700c9;
    public static final int mtrl_badge_long_text_horizontal_padding=0x7f0700ca;
    public static final int mtrl_badge_radius=0x7f0700cb;
    public static final int mtrl_badge_text_horizontal_edge_offset=0x7f0700cc;
    public static final int mtrl_badge_text_size=0x7f0700cd;
    public static final int mtrl_badge_with_text_radius=0x7f0700ce;
    public static final int mtrl_bottomappbar_fabOffsetEndMode=0x7f0700cf;
    public static final int mtrl_bottomappbar_fab_bottom_margin=0x7f0700d0;
    public static final int mtrl_bottomappbar_fab_cradle_margin=0x7f0700d1;
    public static final int mtrl_bottomappbar_fab_cradle_rounded_corner_radius=0x7f0700d2;
    public static final int mtrl_bottomappbar_fab_cradle_vertical_offset=0x7f0700d3;
    public static final int mtrl_bottomappbar_height=0x7f0700d4;
    public static final int mtrl_btn_corner_radius=0x7f0700d5;
    public static final int mtrl_btn_dialog_btn_min_width=0x7f0700d6;
    public static final int mtrl_btn_disabled_elevation=0x7f0700d7;
    public static final int mtrl_btn_disabled_z=0x7f0700d8;
    public static final int mtrl_btn_elevation=0x7f0700d9;
    public static final int mtrl_btn_focused_z=0x7f0700da;
    public static final int mtrl_btn_hovered_z=0x7f0700db;
    public static final int mtrl_btn_icon_btn_padding_left=0x7f0700dc;
    public static final int mtrl_btn_icon_padding=0x7f0700dd;
    public static final int mtrl_btn_inset=0x7f0700de;
    public static final int mtrl_btn_letter_spacing=0x7f0700df;
    public static final int mtrl_btn_padding_bottom=0x7f0700e0;
    public static final int mtrl_btn_padding_left=0x7f0700e1;
    public static final int mtrl_btn_padding_right=0x7f0700e2;
    public static final int mtrl_btn_padding_top=0x7f0700e3;
    public static final int mtrl_btn_pressed_z=0x7f0700e4;
    public static final int mtrl_btn_stroke_size=0x7f0700e5;
    public static final int mtrl_btn_text_btn_icon_padding=0x7f0700e6;
    public static final int mtrl_btn_text_btn_padding_left=0x7f0700e7;
    public static final int mtrl_btn_text_btn_padding_right=0x7f0700e8;
    public static final int mtrl_btn_text_size=0x7f0700e9;
    public static final int mtrl_btn_z=0x7f0700ea;
    public static final int mtrl_calendar_action_height=0x7f0700eb;
    public static final int mtrl_calendar_action_padding=0x7f0700ec;
    public static final int mtrl_calendar_bottom_padding=0x7f0700ed;
    public static final int mtrl_calendar_content_padding=0x7f0700ee;
    public static final int mtrl_calendar_day_corner=0x7f0700ef;
    public static final int mtrl_calendar_day_height=0x7f0700f0;
    public static final int mtrl_calendar_day_horizontal_padding=0x7f0700f1;
    public static final int mtrl_calendar_day_today_stroke=0x7f0700f2;
    public static final int mtrl_calendar_day_vertical_padding=0x7f0700f3;
    public static final int mtrl_calendar_day_width=0x7f0700f4;
    public static final int mtrl_calendar_days_of_week_height=0x7f0700f5;
    public static final int mtrl_calendar_dialog_background_inset=0x7f0700f6;
    public static final int mtrl_calendar_header_content_padding=0x7f0700f7;
    public static final int mtrl_calendar_header_content_padding_fullscreen=0x7f0700f8;
    public static final int mtrl_calendar_header_divider_thickness=0x7f0700f9;
    public static final int mtrl_calendar_header_height=0x7f0700fa;
    public static final int mtrl_calendar_header_height_fullscreen=0x7f0700fb;
    public static final int mtrl_calendar_header_selection_line_height=0x7f0700fc;
    public static final int mtrl_calendar_header_text_padding=0x7f0700fd;
    public static final int mtrl_calendar_header_toggle_margin_bottom=0x7f0700fe;
    public static final int mtrl_calendar_header_toggle_margin_top=0x7f0700ff;
    public static final int mtrl_calendar_landscape_header_width=0x7f070100;
    public static final int mtrl_calendar_maximum_default_fullscreen_minor_axis=0x7f070101;
    public static final int mtrl_calendar_month_horizontal_padding=0x7f070102;
    public static final int mtrl_calendar_month_vertical_padding=0x7f070103;
    public static final int mtrl_calendar_navigation_bottom_padding=0x7f070104;
    public static final int mtrl_calendar_navigation_height=0x7f070105;
    public static final int mtrl_calendar_navigation_top_padding=0x7f070106;
    public static final int mtrl_calendar_pre_l_text_clip_padding=0x7f070107;
    public static final int mtrl_calendar_selection_baseline_to_top_fullscreen=0x7f070108;
    public static final int mtrl_calendar_selection_text_baseline_to_bottom=0x7f070109;
    public static final int mtrl_calendar_selection_text_baseline_to_bottom_fullscreen=0x7f07010a;
    public static final int mtrl_calendar_selection_text_baseline_to_top=0x7f07010b;
    public static final int mtrl_calendar_text_input_padding_top=0x7f07010c;
    public static final int mtrl_calendar_title_baseline_to_top=0x7f07010d;
    public static final int mtrl_calendar_title_baseline_to_top_fullscreen=0x7f07010e;
    public static final int mtrl_calendar_year_corner=0x7f07010f;
    public static final int mtrl_calendar_year_height=0x7f070110;
    public static final int mtrl_calendar_year_horizontal_padding=0x7f070111;
    public static final int mtrl_calendar_year_vertical_padding=0x7f070112;
    public static final int mtrl_calendar_year_width=0x7f070113;
    public static final int mtrl_card_checked_icon_margin=0x7f070114;
    public static final int mtrl_card_checked_icon_size=0x7f070115;
    public static final int mtrl_card_corner_radius=0x7f070116;
    public static final int mtrl_card_dragged_z=0x7f070117;
    public static final int mtrl_card_elevation=0x7f070118;
    public static final int mtrl_card_spacing=0x7f070119;
    public static final int mtrl_chip_pressed_translation_z=0x7f07011a;
    public static final int mtrl_chip_text_size=0x7f07011b;
    public static final int mtrl_exposed_dropdown_menu_popup_elevation=0x7f07011c;
    public static final int mtrl_exposed_dropdown_menu_popup_vertical_offset=0x7f07011d;
    public static final int mtrl_exposed_dropdown_menu_popup_vertical_padding=0x7f07011e;
    public static final int mtrl_extended_fab_bottom_padding=0x7f07011f;
    public static final int mtrl_extended_fab_corner_radius=0x7f070120;
    public static final int mtrl_extended_fab_disabled_elevation=0x7f070121;
    public static final int mtrl_extended_fab_disabled_translation_z=0x7f070122;
    public static final int mtrl_extended_fab_elevation=0x7f070123;
    public static final int mtrl_extended_fab_end_padding=0x7f070124;
    public static final int mtrl_extended_fab_end_padding_icon=0x7f070125;
    public static final int mtrl_extended_fab_icon_size=0x7f070126;
    public static final int mtrl_extended_fab_icon_text_spacing=0x7f070127;
    public static final int mtrl_extended_fab_min_height=0x7f070128;
    public static final int mtrl_extended_fab_min_width=0x7f070129;
    public static final int mtrl_extended_fab_start_padding=0x7f07012a;
    public static final int mtrl_extended_fab_start_padding_icon=0x7f07012b;
    public static final int mtrl_extended_fab_top_padding=0x7f07012c;
    public static final int mtrl_extended_fab_translation_z_base=0x7f07012d;
    public static final int mtrl_extended_fab_translation_z_hovered_focused=0x7f07012e;
    public static final int mtrl_extended_fab_translation_z_pressed=0x7f07012f;
    public static final int mtrl_fab_elevation=0x7f070130;
    public static final int mtrl_fab_min_touch_target=0x7f070131;
    public static final int mtrl_fab_translation_z_hovered_focused=0x7f070132;
    public static final int mtrl_fab_translation_z_pressed=0x7f070133;
    public static final int mtrl_high_ripple_default_alpha=0x7f070134;
    public static final int mtrl_high_ripple_focused_alpha=0x7f070135;
    public static final int mtrl_high_ripple_hovered_alpha=0x7f070136;
    public static final int mtrl_high_ripple_pressed_alpha=0x7f070137;
    public static final int mtrl_large_touch_target=0x7f070138;
    public static final int mtrl_low_ripple_default_alpha=0x7f070139;
    public static final int mtrl_low_ripple_focused_alpha=0x7f07013a;
    public static final int mtrl_low_ripple_hovered_alpha=0x7f07013b;
    public static final int mtrl_low_ripple_pressed_alpha=0x7f07013c;
    public static final int mtrl_min_touch_target_size=0x7f07013d;
    public static final int mtrl_navigation_elevation=0x7f07013e;
    public static final int mtrl_navigation_item_horizontal_padding=0x7f07013f;
    public static final int mtrl_navigation_item_icon_padding=0x7f070140;
    public static final int mtrl_navigation_item_icon_size=0x7f070141;
    public static final int mtrl_navigation_item_shape_horizontal_margin=0x7f070142;
    public static final int mtrl_navigation_item_shape_vertical_margin=0x7f070143;
    public static final int mtrl_shape_corner_size_large_component=0x7f070144;
    public static final int mtrl_shape_corner_size_medium_component=0x7f070145;
    public static final int mtrl_shape_corner_size_small_component=0x7f070146;
    public static final int mtrl_snackbar_action_text_color_alpha=0x7f070147;
    public static final int mtrl_snackbar_background_corner_radius=0x7f070148;
    public static final int mtrl_snackbar_background_overlay_color_alpha=0x7f070149;
    public static final int mtrl_snackbar_margin=0x7f07014a;
    public static final int mtrl_switch_thumb_elevation=0x7f07014b;
    public static final int mtrl_textinput_box_corner_radius_medium=0x7f07014c;
    public static final int mtrl_textinput_box_corner_radius_small=0x7f07014d;
    public static final int mtrl_textinput_box_label_cutout_padding=0x7f07014e;
    public static final int mtrl_textinput_box_stroke_width_default=0x7f07014f;
    public static final int mtrl_textinput_box_stroke_width_focused=0x7f070150;
    public static final int mtrl_textinput_end_icon_margin_start=0x7f070151;
    public static final int mtrl_textinput_outline_box_expanded_padding=0x7f070152;
    public static final int mtrl_textinput_start_icon_margin_end=0x7f070153;
    public static final int mtrl_toolbar_default_height=0x7f070154;
    public static final int notification_action_icon_size=0x7f070155;
    public static final int notification_action_text_size=0x7f070156;
    public static final int notification_big_circle_margin=0x7f070157;
    public static final int notification_content_margin_start=0x7f070158;
    public static final int notification_large_icon_height=0x7f070159;
    public static final int notification_large_icon_width=0x7f07015a;
    public static final int notification_main_column_padding_top=0x7f07015b;
    public static final int notification_media_narrow_margin=0x7f07015c;
    public static final int notification_right_icon_size=0x7f07015d;
    public static final int notification_right_side_padding_top=0x7f07015e;
    public static final int notification_small_icon_background_padding=0x7f07015f;
    public static final int notification_small_icon_size_as_large=0x7f070160;
    public static final int notification_subtext_size=0x7f070161;
    public static final int notification_top_pad=0x7f070162;
    public static final int notification_top_pad_large_text=0x7f070163;
    public static final int padding_between_drawable_and_text=0x7f070164;
    public static final int preference_dropdown_padding_start=0x7f070165;
    public static final int preference_icon_minWidth=0x7f070166;
    public static final int preference_seekbar_padding_horizontal=0x7f070167;
    public static final int preference_seekbar_padding_vertical=0x7f070168;
    public static final int preference_seekbar_value_minWidth=0x7f070169;
    public static final int quick_menu_overlay_border=0x7f07016a;
    public static final int quick_menu_overlay_corner_radius=0x7f07016b;
    public static final int quick_menu_overlay_margin=0x7f07016c;
    public static final int quick_menu_overlay_margin_end=0x7f07016d;
    public static final int quick_menu_overlay_margin_start=0x7f07016e;
    public static final int quick_menu_overlay_padding=0x7f07016f;
    public static final int quick_menu_overlay_padding_bottom=0x7f070170;
    public static final int quick_menu_overlay_padding_end=0x7f070171;
    public static final int quick_menu_overlay_padding_start=0x7f070172;
    public static final int quick_menu_overlay_padding_top=0x7f070173;
    public static final int quick_menu_overlay_text_size=0x7f070174;
    public static final int screen_margin_bottom=0x7f070175;
    public static final int screen_margin_sides=0x7f070176;
    public static final int screen_margin_top=0x7f070177;
    public static final int search_text_font_size=0x7f070178;
    public static final int test_mtrl_calendar_day_cornerSize=0x7f070179;
    public static final int title_height=0x7f07017a;
    public static final int tooltip_corner_radius=0x7f07017b;
    public static final int tooltip_horizontal_padding=0x7f07017c;
    public static final int tooltip_margin=0x7f07017d;
    public static final int tooltip_precise_anchor_extra_offset=0x7f07017e;
    public static final int tooltip_precise_anchor_threshold=0x7f07017f;
    public static final int tooltip_vertical_padding=0x7f070180;
    public static final int tooltip_y_offset_non_touch=0x7f070181;
    public static final int tooltip_y_offset_touch=0x7f070182;
    public static final int training_button_height=0x7f070183;
    public static final int training_button_padding=0x7f070184;
    public static final int training_button_text_size=0x7f070185;
    public static final int training_edit_text_padding=0x7f070186;
    public static final int training_edit_text_text_height=0x7f070187;
    public static final int training_edit_text_text_size=0x7f070188;
    public static final int training_heading_height=0x7f070189;
    public static final int training_heading_size=0x7f07018a;
    public static final int training_link_margin_top=0x7f07018b;
    public static final int training_link_padding=0x7f07018c;
    public static final int training_list_item_corner_radius=0x7f07018d;
    public static final int training_list_item_height=0x7f07018e;
    public static final int training_list_item_margin_bottom=0x7f07018f;
    public static final int training_list_item_margin_start=0x7f070190;
    public static final int training_list_item_margin_top=0x7f070191;
    public static final int training_list_item_padding=0x7f070192;
    public static final int training_list_item_stroke_width=0x7f070193;
    public static final int training_list_item_text_height=0x7f070194;
    public static final int training_list_item_text_size=0x7f070195;
    public static final int training_list_margin_top=0x7f070196;
    public static final int training_note_corner_radius=0x7f070197;
    public static final int training_note_margin_top=0x7f070198;
    public static final int training_note_padding=0x7f070199;
    public static final int training_note_stroke_width=0x7f07019a;
    public static final int training_note_text_height=0x7f07019b;
    public static final int training_note_text_size=0x7f07019c;
    public static final int training_padding_bottom=0x7f07019d;
    public static final int training_padding_end=0x7f07019e;
    public static final int training_padding_start=0x7f07019f;
    public static final int training_padding_top=0x7f0701a0;
    public static final int training_page_number_height=0x7f0701a1;
    public static final int training_page_number_margin_top=0x7f0701a2;
    public static final int training_page_number_text_size=0x7f0701a3;
    public static final int training_subtext_height=0x7f0701a4;
    public static final int training_subtext_size=0x7f0701a5;
    public static final int training_text_height=0x7f0701a6;
    public static final int training_text_size=0x7f0701a7;
    public static final int training_text_with_number_margin_top=0x7f0701a8;
    public static final int training_title_height=0x7f0701a9;
    public static final int training_title_text_size=0x7f0701aa;
    public static final int tts_overlay_text_bottom_margin=0x7f0701ab;
    public static final int tts_overlay_text_padding=0x7f0701ac;
    public static final int tutorial_animation_margin=0x7f0701ad;
    public static final int tutorial_button_margin=0x7f0701ae;
    public static final int tutorial_button_max_width=0x7f0701af;
    public static final int tutorial_continue_button_bottom_padding=0x7f0701b0;
    public static final int tutorial_description_bold_text_size=0x7f0701b1;
    public static final int tutorial_description_line_space=0x7f0701b2;
    public static final int tutorial_description_min_height=0x7f0701b3;
    public static final int tutorial_description_text_size=0x7f0701b4;
    public static final int tutorial_gesture_dot_radius=0x7f0701b5;
    public static final int tutorial_horizontal_padding=0x7f0701b6;
    public static final int tutorial_title_text_size=0x7f0701b7;
    public static final int tutorial_vertical_padding=0x7f0701b8;
    public static final int tutorial_width=0x7f0701b9;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080006;
    public static final int abc_action_bar_item_background_material=0x7f080007;
    public static final int abc_btn_borderless_material=0x7f080008;
    public static final int abc_btn_check_material=0x7f080009;
    public static final int abc_btn_check_material_anim=0x7f08000a;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f08000b;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f08000c;
    public static final int abc_btn_colored_material=0x7f08000d;
    public static final int abc_btn_default_mtrl_shape=0x7f08000e;
    public static final int abc_btn_radio_material=0x7f08000f;
    public static final int abc_btn_radio_material_anim=0x7f080010;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f080011;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f080012;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f080013;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f080014;
    public static final int abc_cab_background_internal_bg=0x7f080015;
    public static final int abc_cab_background_top_material=0x7f080016;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f080017;
    public static final int abc_control_background_material=0x7f080018;
    public static final int abc_dialog_material_background=0x7f080019;
    public static final int abc_edit_text_material=0x7f08001a;
    public static final int abc_ic_ab_back_material=0x7f08001b;
    public static final int abc_ic_ab_back_mtrl_am_alpha=0x7f08001c;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f08001d;
    public static final int abc_ic_clear_material=0x7f08001e;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f08001f;
    public static final int abc_ic_go_search_api_material=0x7f080020;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f080021;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f080022;
    public static final int abc_ic_menu_overflow_material=0x7f080023;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f080024;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f080025;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f080026;
    public static final int abc_ic_search_api_material=0x7f080027;
    public static final int abc_ic_star_black_16dp=0x7f080028;
    public static final int abc_ic_star_black_36dp=0x7f080029;
    public static final int abc_ic_star_black_48dp=0x7f08002a;
    public static final int abc_ic_star_half_black_16dp=0x7f08002b;
    public static final int abc_ic_star_half_black_36dp=0x7f08002c;
    public static final int abc_ic_star_half_black_48dp=0x7f08002d;
    public static final int abc_ic_voice_search_api_material=0x7f08002e;
    public static final int abc_item_background_holo_dark=0x7f08002f;
    public static final int abc_item_background_holo_light=0x7f080030;
    public static final int abc_list_divider_material=0x7f080031;
    public static final int abc_list_divider_mtrl_alpha=0x7f080032;
    public static final int abc_list_focused_holo=0x7f080033;
    public static final int abc_list_longpressed_holo=0x7f080034;
    public static final int abc_list_pressed_holo_dark=0x7f080035;
    public static final int abc_list_pressed_holo_light=0x7f080036;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f080037;
    public static final int abc_list_selector_background_transition_holo_light=0x7f080038;
    public static final int abc_list_selector_disabled_holo_dark=0x7f080039;
    public static final int abc_list_selector_disabled_holo_light=0x7f08003a;
    public static final int abc_list_selector_holo_dark=0x7f08003b;
    public static final int abc_list_selector_holo_light=0x7f08003c;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f08003d;
    public static final int abc_popup_background_mtrl_mult=0x7f08003e;
    public static final int abc_ratingbar_indicator_material=0x7f08003f;
    public static final int abc_ratingbar_material=0x7f080040;
    public static final int abc_ratingbar_small_material=0x7f080041;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f080042;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f080043;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f080044;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f080045;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f080046;
    public static final int abc_seekbar_thumb_material=0x7f080047;
    public static final int abc_seekbar_tick_mark_material=0x7f080048;
    public static final int abc_seekbar_track_material=0x7f080049;
    public static final int abc_spinner_mtrl_am_alpha=0x7f08004a;
    public static final int abc_spinner_textfield_background_material=0x7f08004b;
    public static final int abc_switch_thumb_material=0x7f08004c;
    public static final int abc_switch_track_mtrl_alpha=0x7f08004d;
    public static final int abc_tab_indicator_material=0x7f08004e;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f08004f;
    public static final int abc_text_cursor_material=0x7f080050;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f080051;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f080052;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f080053;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f080054;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f080055;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f080056;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f080057;
    public static final int abc_textfield_default_mtrl_alpha=0x7f080058;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f080059;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f08005a;
    public static final int abc_textfield_search_material=0x7f08005b;
    public static final int abc_vector_test=0x7f08005c;
    public static final int animation_tabletop=0x7f08005d;
    public static final int avd_hide_password=0x7f08005e;
    public static final int avd_show_password=0x7f08005f;
    public static final int braille_keyboard=0x7f080060;
    public static final int braille_keyboard_letter_a=0x7f080061;
    public static final int braille_keyboard_letter_a_tabletop=0x7f080062;
    public static final int braille_keyboard_letter_b=0x7f080063;
    public static final int braille_keyboard_letter_b_tabletop=0x7f080064;
    public static final int braille_keyboard_letter_c=0x7f080065;
    public static final int braille_keyboard_letter_c_tabletop=0x7f080066;
    public static final int braille_keyboard_tabletop=0x7f080067;
    public static final int btn_checkbox_checked_mtrl=0x7f080068;
    public static final int btn_checkbox_checked_to_unchecked_mtrl_animation=0x7f080069;
    public static final int btn_checkbox_unchecked_mtrl=0x7f08006a;
    public static final int btn_checkbox_unchecked_to_checked_mtrl_animation=0x7f08006b;
    public static final int btn_radio_off_mtrl=0x7f08006c;
    public static final int btn_radio_off_to_on_mtrl_animation=0x7f08006d;
    public static final int btn_radio_on_mtrl=0x7f08006e;
    public static final int btn_radio_on_to_off_mtrl_animation=0x7f08006f;
    public static final int common_full_open_on_phone=0x7f080070;
    public static final int common_google_signin_btn_icon_dark=0x7f080071;
    public static final int common_google_signin_btn_icon_dark_focused=0x7f080072;
    public static final int common_google_signin_btn_icon_dark_normal=0x7f080073;
    public static final int common_google_signin_btn_icon_dark_normal_background=0x7f080074;
    public static final int common_google_signin_btn_icon_disabled=0x7f080075;
    public static final int common_google_signin_btn_icon_light=0x7f080076;
    public static final int common_google_signin_btn_icon_light_focused=0x7f080077;
    public static final int common_google_signin_btn_icon_light_normal=0x7f080078;
    public static final int common_google_signin_btn_icon_light_normal_background=0x7f080079;
    public static final int common_google_signin_btn_text_dark=0x7f08007a;
    public static final int common_google_signin_btn_text_dark_focused=0x7f08007b;
    public static final int common_google_signin_btn_text_dark_normal=0x7f08007c;
    public static final int common_google_signin_btn_text_dark_normal_background=0x7f08007d;
    public static final int common_google_signin_btn_text_disabled=0x7f08007e;
    public static final int common_google_signin_btn_text_light=0x7f08007f;
    public static final int common_google_signin_btn_text_light_focused=0x7f080080;
    public static final int common_google_signin_btn_text_light_normal=0x7f080081;
    public static final int common_google_signin_btn_text_light_normal_background=0x7f080082;
    public static final int design_bottom_navigation_item_background=0x7f080083;
    public static final int design_fab_background=0x7f080084;
    public static final int design_ic_visibility=0x7f080085;
    public static final int design_ic_visibility_off=0x7f080086;
    public static final int design_password_eye=0x7f080087;
    public static final int design_snackbar_background=0x7f080088;
    public static final int googleg_disabled_color_18=0x7f080089;
    public static final int googleg_standard_color_18=0x7f08008a;
    public static final int hold_illustration=0x7f08008b;
    public static final int ic_3_finger_swipe_right=0x7f08008c;
    public static final int ic_arrow_back_gm_grey_24dp=0x7f08008d;
    public static final int ic_arrow_down_24dp=0x7f08008e;
    public static final int ic_calendar_black_24dp=0x7f08008f;
    public static final int ic_chrome_reader_mode_googblue_24dp=0x7f080090;
    public static final int ic_clear=0x7f080091;
    public static final int ic_clear_black_24dp=0x7f080092;
    public static final int ic_down_right_arrow=0x7f080093;
    public static final int ic_edit_black_24dp=0x7f080094;
    public static final int ic_gesture_2fingerdoubletap=0x7f080095;
    public static final int ic_gesture_2fingerdoubletaphold=0x7f080096;
    public static final int ic_gesture_2fingeredgedown=0x7f080097;
    public static final int ic_gesture_2fingeredgeup=0x7f080098;
    public static final int ic_gesture_2fingeredgeuphold=0x7f080099;
    public static final int ic_gesture_2fingerinward=0x7f08009a;
    public static final int ic_gesture_2fingertap=0x7f08009b;
    public static final int ic_gesture_3fingerdoubletap=0x7f08009c;
    public static final int ic_gesture_3fingerdoubletaphold=0x7f08009d;
    public static final int ic_gesture_3fingeredgeup=0x7f08009e;
    public static final int ic_gesture_3fingerright=0x7f08009f;
    public static final int ic_gesture_3fingertripletap=0x7f0800a0;
    public static final int ic_gesture_downthenup=0x7f0800a1;
    public static final int ic_gesture_googblue_24dp=0x7f0800a2;
    public static final int ic_keyboard_arrow_left_black_24dp=0x7f0800a3;
    public static final int ic_keyboard_arrow_right_black_24dp=0x7f0800a4;
    public static final int ic_keyboard_voice_googblue_24dp=0x7f0800a5;
    public static final int ic_letter_a=0x7f0800a6;
    public static final int ic_letter_b=0x7f0800a7;
    public static final int ic_letter_c=0x7f0800a8;
    public static final int ic_menu_arrow_down_black_24dp=0x7f0800a9;
    public static final int ic_menu_arrow_up_black_24dp=0x7f0800aa;
    public static final int ic_mtrl_checked_circle=0x7f0800ab;
    public static final int ic_mtrl_chip_checked_black=0x7f0800ac;
    public static final int ic_mtrl_chip_checked_circle=0x7f0800ad;
    public static final int ic_mtrl_chip_close_circle=0x7f0800ae;
    public static final int ic_navigation_googblue_24dp=0x7f0800af;
    public static final int ic_stat_info=0x7f0800b0;
    public static final int ic_swipe_down_then_up=0x7f0800b1;
    public static final int ic_swipe_right=0x7f0800b2;
    public static final int ic_swipe_up_then_down=0x7f0800b3;
    public static final int ic_text_fields_alt_googblue_24dp=0x7f0800b4;
    public static final int ic_up_right_arrow=0x7f0800b5;
    public static final int icon=0x7f0800b6;
    public static final int intro_animation=0x7f0800b7;
    public static final int intro_animation_tabletop=0x7f0800b8;
    public static final int mtrl_dialog_background=0x7f0800b9;
    public static final int mtrl_dropdown_arrow=0x7f0800ba;
    public static final int mtrl_ic_arrow_drop_down=0x7f0800bb;
    public static final int mtrl_ic_arrow_drop_up=0x7f0800bc;
    public static final int mtrl_ic_cancel=0x7f0800bd;
    public static final int mtrl_ic_error=0x7f0800be;
    public static final int mtrl_popupmenu_background=0x7f0800bf;
    public static final int mtrl_popupmenu_background_dark=0x7f0800c0;
    public static final int mtrl_tabs_default_indicator=0x7f0800c1;
    public static final int navigation_empty_icon=0x7f0800c2;
    public static final int notification_action_background=0x7f0800c3;
    public static final int notification_bg=0x7f0800c4;
    public static final int notification_bg_low=0x7f0800c5;
    public static final int notification_bg_low_normal=0x7f0800c6;
    public static final int notification_bg_low_pressed=0x7f0800c7;
    public static final int notification_bg_normal=0x7f0800c8;
    public static final int notification_bg_normal_pressed=0x7f0800c9;
    public static final int notification_icon_background=0x7f0800ca;
    public static final int notification_template_icon_bg=0x7f0800cb;
    public static final int notification_template_icon_low_bg=0x7f0800cc;
    public static final int notification_tile_bg=0x7f0800cd;
    public static final int notify_panel_notification_icon_bg=0x7f0800ce;
    public static final int preference_list_divider_material=0x7f0800cf;
    public static final int quantum_gm_ic_hearing_googblue_24=0x7f0800d0;
    public static final int quantum_gm_ic_more_horiz_googblue_24=0x7f0800d1;
    public static final int quantum_gm_ic_search_googblue_24=0x7f0800d2;
    public static final int quantum_gm_ic_smartphone_googblue_24=0x7f0800d3;
    public static final int quantum_gm_ic_text_fields_alt_googblue_24=0x7f0800d4;
    public static final int quantum_ic_arrow_downward_white_24=0x7f0800d5;
    public static final int quantum_ic_arrow_upward_white_24=0x7f0800d6;
    public static final int quantum_ic_cancel_white_24=0x7f0800d7;
    public static final int quantum_ic_chevron_left_vd_theme_24=0x7f0800d8;
    public static final int quantum_ic_chevron_right_vd_theme_24=0x7f0800d9;
    public static final int quantum_ic_close_white_24=0x7f0800da;
    public static final int quantum_ic_keyboard_grey600_24=0x7f0800db;
    public static final int quick_menu_overlay_message_background=0x7f0800dc;
    public static final int swipe_down_three=0x7f0800dd;
    public static final int swipe_down_two=0x7f0800de;
    public static final int swipe_left_one=0x7f0800df;
    public static final int swipe_left_two=0x7f0800e0;
    public static final int swipe_right_one=0x7f0800e1;
    public static final int swipe_right_two=0x7f0800e2;
    public static final int swipe_up_three=0x7f0800e3;
    public static final int swipe_up_two=0x7f0800e4;
    public static final int tabletop_tutorial_01=0x7f0800e5;
    public static final int tabletop_tutorial_02=0x7f0800e6;
    public static final int talkback_intro=0x7f0800e7;
    public static final int test_custom_background=0x7f0800e8;
    public static final int tooltip_frame_dark=0x7f0800e9;
    public static final int tooltip_frame_light=0x7f0800ea;
    public static final int training_list_item_background=0x7f0800eb;
    public static final int training_note_background=0x7f0800ec;
    public static final int tutorial_grid_item_background=0x7f0800ed;
    public static final int tutorial_main_menu_item_background=0x7f0800ee;
  }
  public static final class id {
    public static final int ALT=0x7f090000;
    public static final int BOTTOM_END=0x7f090001;
    public static final int BOTTOM_START=0x7f090002;
    public static final int CTRL=0x7f090003;
    public static final int FUNCTION=0x7f090004;
    public static final int META=0x7f090005;
    public static final int SHIFT=0x7f090006;
    public static final int SYM=0x7f090007;
    public static final int TOP_END=0x7f090008;
    public static final int TOP_START=0x7f090009;
    public static final int accessibility_action_clickable_span=0x7f09000a;
    public static final int accessibility_custom_action_0=0x7f09000b;
    public static final int accessibility_custom_action_1=0x7f09000c;
    public static final int accessibility_custom_action_10=0x7f09000d;
    public static final int accessibility_custom_action_11=0x7f09000e;
    public static final int accessibility_custom_action_12=0x7f09000f;
    public static final int accessibility_custom_action_13=0x7f090010;
    public static final int accessibility_custom_action_14=0x7f090011;
    public static final int accessibility_custom_action_15=0x7f090012;
    public static final int accessibility_custom_action_16=0x7f090013;
    public static final int accessibility_custom_action_17=0x7f090014;
    public static final int accessibility_custom_action_18=0x7f090015;
    public static final int accessibility_custom_action_19=0x7f090016;
    public static final int accessibility_custom_action_2=0x7f090017;
    public static final int accessibility_custom_action_20=0x7f090018;
    public static final int accessibility_custom_action_21=0x7f090019;
    public static final int accessibility_custom_action_22=0x7f09001a;
    public static final int accessibility_custom_action_23=0x7f09001b;
    public static final int accessibility_custom_action_24=0x7f09001c;
    public static final int accessibility_custom_action_25=0x7f09001d;
    public static final int accessibility_custom_action_26=0x7f09001e;
    public static final int accessibility_custom_action_27=0x7f09001f;
    public static final int accessibility_custom_action_28=0x7f090020;
    public static final int accessibility_custom_action_29=0x7f090021;
    public static final int accessibility_custom_action_3=0x7f090022;
    public static final int accessibility_custom_action_30=0x7f090023;
    public static final int accessibility_custom_action_31=0x7f090024;
    public static final int accessibility_custom_action_4=0x7f090025;
    public static final int accessibility_custom_action_5=0x7f090026;
    public static final int accessibility_custom_action_6=0x7f090027;
    public static final int accessibility_custom_action_7=0x7f090028;
    public static final int accessibility_custom_action_8=0x7f090029;
    public static final int accessibility_custom_action_9=0x7f09002a;
    public static final int accessibility_tutorial_tag_touched=0x7f09002b;
    public static final int action_bar=0x7f09002c;
    public static final int action_bar_activity_content=0x7f09002d;
    public static final int action_bar_container=0x7f09002e;
    public static final int action_bar_root=0x7f09002f;
    public static final int action_bar_spinner=0x7f090030;
    public static final int action_bar_subtitle=0x7f090031;
    public static final int action_bar_title=0x7f090032;
    public static final int action_container=0x7f090033;
    public static final int action_context_bar=0x7f090034;
    public static final int action_divider=0x7f090035;
    public static final int action_image=0x7f090036;
    public static final int action_menu_divider=0x7f090037;
    public static final int action_menu_presenter=0x7f090038;
    public static final int action_mode_bar=0x7f090039;
    public static final int action_mode_bar_stub=0x7f09003a;
    public static final int action_mode_close_button=0x7f09003b;
    public static final int action_text=0x7f09003c;
    public static final int actions=0x7f09003d;
    public static final int activity_chooser_view_content=0x7f09003e;
    public static final int add=0x7f09003f;
    public static final int adjust_height=0x7f090040;
    public static final int adjust_width=0x7f090041;
    public static final int alertTitle=0x7f090042;
    public static final int all=0x7f090043;
    public static final int always=0x7f090044;
    public static final int assigned_combination=0x7f090045;
    public static final int async=0x7f090046;
    public static final int audio_ducking=0x7f090047;
    public static final int auto=0x7f090048;
    public static final int beginning=0x7f090049;
    public static final int blocking=0x7f09004a;
    public static final int bottom=0x7f09004b;
    public static final int buttonPanel=0x7f09004c;
    public static final int button_divider=0x7f09004d;
    public static final int cancel_button=0x7f09004e;
    public static final int cancel_divider=0x7f09004f;
    public static final int cancel_search=0x7f090050;
    public static final int center=0x7f090051;
    public static final int center_horizontal=0x7f090052;
    public static final int center_vertical=0x7f090053;
    public static final int character=0x7f090054;
    public static final int checkbox=0x7f090055;
    public static final int checked=0x7f090056;
    public static final int chip=0x7f090057;
    public static final int chip_group=0x7f090058;
    public static final int chronometer=0x7f090059;
    public static final int clear=0x7f09005a;
    public static final int clear_keyword=0x7f09005b;
    public static final int clear_text=0x7f09005c;
    public static final int clip_horizontal=0x7f09005d;
    public static final int clip_vertical=0x7f09005e;
    public static final int collapseActionView=0x7f09005f;
    public static final int confirm_button=0x7f090060;
    public static final int container=0x7f090061;
    public static final int content=0x7f090062;
    public static final int contentPanel=0x7f090063;
    public static final int control_layout=0x7f090064;
    public static final int coordinator=0x7f090065;
    public static final int copy_last_utterance_to_clipboard=0x7f090066;
    public static final int custom=0x7f090067;
    public static final int customPanel=0x7f090068;
    public static final int custom_action_menu=0x7f090069;
    public static final int cut=0x7f09006a;
    public static final int dark=0x7f09006b;
    public static final int date_picker_actions=0x7f09006c;
    public static final int decor_content_parent=0x7f09006d;
    public static final int default_activity_button=0x7f09006e;
    public static final int design_bottom_sheet=0x7f09006f;
    public static final int design_menu_item_action_area=0x7f090070;
    public static final int design_menu_item_action_area_stub=0x7f090071;
    public static final int design_menu_item_text=0x7f090072;
    public static final int design_navigation_view=0x7f090073;
    public static final int dialog_button=0x7f090074;
    public static final int dialog_content=0x7f090075;
    public static final int dialog_second_content=0x7f090076;
    public static final int dialog_third_content=0x7f090077;
    public static final int dialog_url_view=0x7f090078;
    public static final int dim_screen_text=0x7f090079;
    public static final int disableHome=0x7f09007a;
    public static final int disable_all=0x7f09007b;
    public static final int disable_dimming=0x7f09007c;
    public static final int divider=0x7f09007d;
    public static final int dropdown_menu=0x7f09007e;
    public static final int edit_query=0x7f09007f;
    public static final int editing_menu=0x7f090080;
    public static final int edittext_breakout_copy=0x7f090081;
    public static final int edittext_breakout_cut=0x7f090082;
    public static final int edittext_breakout_end_selection_mode=0x7f090083;
    public static final int edittext_breakout_move_to_beginning=0x7f090084;
    public static final int edittext_breakout_move_to_end=0x7f090085;
    public static final int edittext_breakout_paste=0x7f090086;
    public static final int edittext_breakout_select_all=0x7f090087;
    public static final int edittext_breakout_start_selection_mode=0x7f090088;
    public static final int enable_all=0x7f090089;
    public static final int enable_dimming=0x7f09008a;
    public static final int end=0x7f09008b;
    public static final int enterAlways=0x7f09008c;
    public static final int enterAlwaysCollapsed=0x7f09008d;
    public static final int exitUntilCollapsed=0x7f09008e;
    public static final int expand_activities_button=0x7f09008f;
    public static final int expanded_menu=0x7f090090;
    public static final int export_labels=0x7f090091;
    public static final int fade=0x7f090092;
    public static final int fill=0x7f090093;
    public static final int fill_horizontal=0x7f090094;
    public static final int fill_vertical=0x7f090095;
    public static final int filled=0x7f090096;
    public static final int filter_chip=0x7f090097;
    public static final int fitToContents=0x7f090098;
    public static final int fixed=0x7f090099;
    public static final int forever=0x7f09009a;
    public static final int fragment_container_view_tag=0x7f09009b;
    public static final int ghost_view=0x7f09009c;
    public static final int ghost_view_holder=0x7f09009d;
    public static final int granularity_menu=0x7f09009e;
    public static final int group_divider=0x7f09009f;
    public static final int group_keyboard=0x7f0900a0;
    public static final int group_language=0x7f0900a1;
    public static final int group_links=0x7f0900a2;
    public static final int hear_lesson=0x7f0900a3;
    public static final int hideable=0x7f0900a4;
    public static final int highlight_description=0x7f0900a5;
    public static final int home=0x7f0900a6;
    public static final int homeAsUp=0x7f0900a7;
    public static final int icon=0x7f0900a8;
    public static final int icon_frame=0x7f0900a9;
    public static final int icon_group=0x7f0900aa;
    public static final int icon_image=0x7f0900ab;
    public static final int icon_only=0x7f0900ac;
    public static final int ifRoom=0x7f0900ad;
    public static final int image=0x7f0900ae;
    public static final int import_labels=0x7f0900af;
    public static final int info=0x7f0900b0;
    public static final int instruction=0x7f0900b1;
    public static final int italic=0x7f0900b2;
    public static final int item_touch_helper_previous_elevation=0x7f0900b3;
    public static final int keyword_edit=0x7f0900b4;
    public static final int label_dialog_edit_text=0x7f0900b5;
    public static final int label_list=0x7f0900b6;
    public static final int label_text=0x7f0900b7;
    public static final int label_timestamp=0x7f0900b8;
    public static final int labeled=0x7f0900b9;
    public static final int labeling_breakout_add_label=0x7f0900ba;
    public static final int labeling_breakout_edit_label=0x7f0900bb;
    public static final int labeling_breakout_remove_label=0x7f0900bc;
    public static final int language_menu=0x7f0900bd;
    public static final int largeLabel=0x7f0900be;
    public static final int leave_keyboard_button=0x7f0900bf;
    public static final int left=0x7f0900c0;
    public static final int light=0x7f0900c1;
    public static final int line=0x7f0900c2;
    public static final int line1=0x7f0900c3;
    public static final int line3=0x7f0900c4;
    public static final int links_menu=0x7f0900c5;
    public static final int listMode=0x7f0900c6;
    public static final int list_item=0x7f0900c7;
    public static final int masked=0x7f0900c8;
    public static final int message=0x7f0900c9;
    public static final int message_line_1=0x7f0900ca;
    public static final int middle=0x7f0900cb;
    public static final int mini=0x7f0900cc;
    public static final int month_grid=0x7f0900cd;
    public static final int month_navigation_bar=0x7f0900ce;
    public static final int month_navigation_fragment_toggle=0x7f0900cf;
    public static final int month_navigation_next=0x7f0900d0;
    public static final int month_navigation_previous=0x7f0900d1;
    public static final int month_title=0x7f0900d2;
    public static final int mtrl_calendar_day_selector_frame=0x7f0900d3;
    public static final int mtrl_calendar_days_of_week=0x7f0900d4;
    public static final int mtrl_calendar_frame=0x7f0900d5;
    public static final int mtrl_calendar_main_pane=0x7f0900d6;
    public static final int mtrl_calendar_months=0x7f0900d7;
    public static final int mtrl_calendar_selection_frame=0x7f0900d8;
    public static final int mtrl_calendar_text_input_frame=0x7f0900d9;
    public static final int mtrl_calendar_year_selector_frame=0x7f0900da;
    public static final int mtrl_card_checked_layer_id=0x7f0900db;
    public static final int mtrl_child_content_container=0x7f0900dc;
    public static final int mtrl_internal_children_alpha_tag=0x7f0900dd;
    public static final int mtrl_picker_fullscreen=0x7f0900de;
    public static final int mtrl_picker_header=0x7f0900df;
    public static final int mtrl_picker_header_selection_text=0x7f0900e0;
    public static final int mtrl_picker_header_title_and_selection=0x7f0900e1;
    public static final int mtrl_picker_header_toggle=0x7f0900e2;
    public static final int mtrl_picker_text_input_date=0x7f0900e3;
    public static final int mtrl_picker_text_input_range_end=0x7f0900e4;
    public static final int mtrl_picker_text_input_range_start=0x7f0900e5;
    public static final int mtrl_picker_title_text=0x7f0900e6;
    public static final int multiply=0x7f0900e7;
    public static final int navigation_header_container=0x7f0900e8;
    public static final int navigation_reminder=0x7f0900e9;
    public static final int never=0x7f0900ea;
    public static final int next_button=0x7f0900eb;
    public static final int next_screen=0x7f0900ec;
    public static final int noScroll=0x7f0900ed;
    public static final int no_packages_message=0x7f0900ee;
    public static final int none=0x7f0900ef;
    public static final int normal=0x7f0900f0;
    public static final int notification_background=0x7f0900f1;
    public static final int notification_main_column=0x7f0900f2;
    public static final int notification_main_column_container=0x7f0900f3;
    public static final int notification_suspended=0x7f0900f4;
    public static final int object=0x7f0900f5;
    public static final int off=0x7f0900f6;
    public static final int on=0x7f0900f7;
    public static final int outline=0x7f0900f8;
    public static final int package_label_info_count=0x7f0900f9;
    public static final int package_label_info_text=0x7f0900fa;
    public static final int package_list=0x7f0900fb;
    public static final int page=0x7f0900fc;
    public static final int paragraph=0x7f0900fd;
    public static final int parallax=0x7f0900fe;
    public static final int parentPanel=0x7f0900ff;
    public static final int parent_matrix=0x7f090100;
    public static final int password_toggle=0x7f090101;
    public static final int pause_feedback=0x7f090102;
    public static final int peekHeight=0x7f090103;
    public static final int pin=0x7f090104;
    public static final int preference_root=0x7f090105;
    public static final int previous_screen=0x7f090106;
    public static final int progress=0x7f090107;
    public static final int progress_circular=0x7f090108;
    public static final int progress_horizontal=0x7f090109;
    public static final int pseudo_web_special_content=0x7f09010a;
    public static final int quick_menu_left_icon=0x7f09010b;
    public static final int quick_menu_right_icon=0x7f09010c;
    public static final int quick_menu_text=0x7f09010d;
    public static final int radio=0x7f09010e;
    public static final int read_from_current=0x7f09010f;
    public static final int read_from_top=0x7f090110;
    public static final int recycler_view=0x7f090111;
    public static final int repeat_last_utterance=0x7f090112;
    public static final int revert_import=0x7f090113;
    public static final int right=0x7f090114;
    public static final int right_icon=0x7f090115;
    public static final int right_side=0x7f090116;
    public static final int rotate_orientation_description_1=0x7f090117;
    public static final int rounded=0x7f090118;
    public static final int save_non_transition_alpha=0x7f090119;
    public static final int save_overlay_view=0x7f09011a;
    public static final int scale=0x7f09011b;
    public static final int screen=0x7f09011c;
    public static final int screen_search=0x7f09011d;
    public static final int scroll=0x7f09011e;
    public static final int scrollIndicatorDown=0x7f09011f;
    public static final int scrollIndicatorUp=0x7f090120;
    public static final int scrollView=0x7f090121;
    public static final int scrollable=0x7f090122;
    public static final int search_badge=0x7f090123;
    public static final int search_bar=0x7f090124;
    public static final int search_button=0x7f090125;
    public static final int search_close_btn=0x7f090126;
    public static final int search_edit_frame=0x7f090127;
    public static final int search_go_btn=0x7f090128;
    public static final int search_mag_icon=0x7f090129;
    public static final int search_plate=0x7f09012a;
    public static final int search_result=0x7f09012b;
    public static final int search_src_text=0x7f09012c;
    public static final int search_voice_btn=0x7f09012d;
    public static final int seekbar=0x7f09012e;
    public static final int seekbar_menu=0x7f09012f;
    public static final int seekbar_value=0x7f090130;
    public static final int select_dialog_listview=0x7f090131;
    public static final int selected=0x7f090132;
    public static final int shortcut=0x7f090133;
    public static final int showCustom=0x7f090134;
    public static final int showHome=0x7f090135;
    public static final int showTitle=0x7f090136;
    public static final int show_message_checkbox=0x7f090137;
    public static final int show_warning_checkbox=0x7f090138;
    public static final int skipCollapsed=0x7f090139;
    public static final int slide=0x7f09013a;
    public static final int smallLabel=0x7f09013b;
    public static final int snackbar_action=0x7f09013c;
    public static final int snackbar_text=0x7f09013d;
    public static final int snap=0x7f09013e;
    public static final int snapMargins=0x7f09013f;
    public static final int sound_feedback=0x7f090140;
    public static final int spacer=0x7f090141;
    public static final int spell_last_utterance=0x7f090142;
    public static final int spinner=0x7f090143;
    public static final int split_action_bar=0x7f090144;
    public static final int src_atop=0x7f090145;
    public static final int src_in=0x7f090146;
    public static final int src_over=0x7f090147;
    public static final int standard=0x7f090148;
    public static final int start=0x7f090149;
    public static final int stretch=0x7f09014a;
    public static final int submenuarrow=0x7f09014b;
    public static final int submit_area=0x7f09014c;
    public static final int suggestions_breakout_anchor=0x7f09014d;
    public static final int suggestions_breakout_suggestions=0x7f09014e;
    public static final int summaryListHeader=0x7f09014f;
    public static final int summaryListItem=0x7f090150;
    public static final int survey_prompt_parent_sheet=0x7f090151;
    public static final int switchWidget=0x7f090152;
    public static final int tabMode=0x7f090153;
    public static final int tag_accessibility_actions=0x7f090154;
    public static final int tag_accessibility_clickable_spans=0x7f090155;
    public static final int tag_accessibility_heading=0x7f090156;
    public static final int tag_accessibility_pane_title=0x7f090157;
    public static final int tag_screen_reader_focusable=0x7f090158;
    public static final int tag_state_description=0x7f090159;
    public static final int tag_transition_group=0x7f09015a;
    public static final int tag_unhandled_key_event_manager=0x7f09015b;
    public static final int tag_unhandled_key_listeners=0x7f09015c;
    public static final int talkback_settings=0x7f09015d;
    public static final int tap_to_continue=0x7f09015e;
    public static final int test_checkbox_android_button_tint=0x7f09015f;
    public static final int test_checkbox_app_button_tint=0x7f090160;
    public static final int text=0x7f090161;
    public static final int text2=0x7f090162;
    public static final int textEnd=0x7f090163;
    public static final int textSpacerNoButtons=0x7f090164;
    public static final int textSpacerNoTitle=0x7f090165;
    public static final int textStart=0x7f090166;
    public static final int text_input_end_icon=0x7f090167;
    public static final int text_input_start_icon=0x7f090168;
    public static final int textinput_counter=0x7f090169;
    public static final int textinput_error=0x7f09016a;
    public static final int textinput_helper_text=0x7f09016b;
    public static final int time=0x7f09016c;
    public static final int timer=0x7f09016d;
    public static final int title=0x7f09016e;
    public static final int titleDividerNoCustom=0x7f09016f;
    public static final int title_template=0x7f090170;
    public static final int top=0x7f090171;
    public static final int topPanel=0x7f090172;
    public static final int touch_outside=0x7f090173;
    public static final int training_back_button_0=0x7f090174;
    public static final int training_back_button_1=0x7f090175;
    public static final int training_bottom=0x7f090176;
    public static final int training_bottom_button=0x7f090177;
    public static final int training_button=0x7f090178;
    public static final int training_edit_text=0x7f090179;
    public static final int training_exit_button_0=0x7f09017a;
    public static final int training_exit_button_1=0x7f09017b;
    public static final int training_heading=0x7f09017c;
    public static final int training_icon=0x7f09017d;
    public static final int training_linear_layout=0x7f09017e;
    public static final int training_link=0x7f09017f;
    public static final int training_link_icon=0x7f090180;
    public static final int training_link_subtext=0x7f090181;
    public static final int training_link_text=0x7f090182;
    public static final int training_list_item_text=0x7f090183;
    public static final int training_navigation=0x7f090184;
    public static final int training_next_button_0=0x7f090185;
    public static final int training_next_button_1=0x7f090186;
    public static final int training_note=0x7f090187;
    public static final int training_page=0x7f090188;
    public static final int training_page_number=0x7f090189;
    public static final int training_root=0x7f09018a;
    public static final int training_subtext=0x7f09018b;
    public static final int training_text=0x7f09018c;
    public static final int training_text_list=0x7f09018d;
    public static final int training_text_with_number=0x7f09018e;
    public static final int training_title=0x7f09018f;
    public static final int training_toolbar=0x7f090190;
    public static final int training_toolbar_layout=0x7f090191;
    public static final int transition_current_scene=0x7f090192;
    public static final int transition_layout_save=0x7f090193;
    public static final int transition_position=0x7f090194;
    public static final int transition_scene_layoutid_cache=0x7f090195;
    public static final int transition_transform=0x7f090196;
    public static final int tts_settings=0x7f090197;
    public static final int tutorial_animation=0x7f090198;
    public static final int tutorial_title=0x7f090199;
    public static final int unchecked=0x7f09019a;
    public static final int uniform=0x7f09019b;
    public static final int unlabeled=0x7f09019c;
    public static final int up=0x7f09019d;
    public static final int useLogo=0x7f09019e;
    public static final int verbosity=0x7f09019f;
    public static final int vibration_feedback=0x7f0901a0;
    public static final int view_offset_helper=0x7f0901a1;
    public static final int viewpager_breakout_next_page=0x7f0901a2;
    public static final int viewpager_breakout_page_down=0x7f0901a3;
    public static final int viewpager_breakout_page_left=0x7f0901a4;
    public static final int viewpager_breakout_page_right=0x7f0901a5;
    public static final int viewpager_breakout_page_up=0x7f0901a6;
    public static final int viewpager_breakout_prev_page=0x7f0901a7;
    public static final int viewpager_menu=0x7f0901a8;
    public static final int visible=0x7f0901a9;
    public static final int visible_removing_fragment_view_tag=0x7f0901aa;
    public static final int voice_commands=0x7f0901ab;
    public static final int web=0x7f0901ac;
    public static final int web_breakout_next_control=0x7f0901ad;
    public static final int web_breakout_next_list=0x7f0901ae;
    public static final int web_breakout_next_section=0x7f0901af;
    public static final int web_breakout_prev_control=0x7f0901b0;
    public static final int web_breakout_prev_list=0x7f0901b1;
    public static final int web_breakout_prev_section=0x7f0901b2;
    public static final int web_control=0x7f0901b3;
    public static final int web_heading=0x7f0901b4;
    public static final int web_landmark=0x7f0901b5;
    public static final int web_list=0x7f0901b6;
    public static final int wide=0x7f0901b7;
    public static final int window_menu=0x7f0901b8;
    public static final int withText=0x7f0901b9;
    public static final int word=0x7f0901ba;
    public static final int wrap_content=0x7f0901bb;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0a0000;
    public static final int abc_config_activityShortDur=0x7f0a0001;
    public static final int app_bar_elevation_anim_duration=0x7f0a0002;
    public static final int bottom_sheet_slide_duration=0x7f0a0003;
    public static final int cancel_button_image_alpha=0x7f0a0004;
    public static final int config_tooltipAnimTime=0x7f0a0005;
    public static final int design_snackbar_text_max_lines=0x7f0a0006;
    public static final int design_tab_indicator_anim_duration_ms=0x7f0a0007;
    public static final int google_play_services_version=0x7f0a0008;
    public static final int hide_password_duration=0x7f0a0009;
    public static final int mtrl_badge_max_character_count=0x7f0a000a;
    public static final int mtrl_btn_anim_delay_ms=0x7f0a000b;
    public static final int mtrl_btn_anim_duration_ms=0x7f0a000c;
    public static final int mtrl_calendar_header_orientation=0x7f0a000d;
    public static final int mtrl_calendar_selection_text_lines=0x7f0a000e;
    public static final int mtrl_calendar_year_selector_span=0x7f0a000f;
    public static final int mtrl_card_anim_delay_ms=0x7f0a0010;
    public static final int mtrl_card_anim_duration_ms=0x7f0a0011;
    public static final int mtrl_chip_anim_duration=0x7f0a0012;
    public static final int mtrl_tab_indicator_anim_duration_ms=0x7f0a0013;
    public static final int quick_menu_overlay_font_weight=0x7f0a0014;
    public static final int show_password_duration=0x7f0a0015;
    public static final int status_bar_notification_info_maxnum=0x7f0a0016;
  }
  public static final class interpolator {
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_0=0x7f0b0000;
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_1=0x7f0b0001;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x7f0b0002;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x7f0b0003;
    public static final int btn_radio_to_off_mtrl_animation_interpolator_0=0x7f0b0004;
    public static final int btn_radio_to_on_mtrl_animation_interpolator_0=0x7f0b0005;
    public static final int fast_out_slow_in=0x7f0b0006;
    public static final int mtrl_fast_out_linear_in=0x7f0b0007;
    public static final int mtrl_fast_out_slow_in=0x7f0b0008;
    public static final int mtrl_linear=0x7f0b0009;
    public static final int mtrl_linear_out_slow_in=0x7f0b000a;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0c0000;
    public static final int abc_action_bar_up_container=0x7f0c0001;
    public static final int abc_action_menu_item_layout=0x7f0c0002;
    public static final int abc_action_menu_layout=0x7f0c0003;
    public static final int abc_action_mode_bar=0x7f0c0004;
    public static final int abc_action_mode_close_item_material=0x7f0c0005;
    public static final int abc_activity_chooser_view=0x7f0c0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0c0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0c0008;
    public static final int abc_alert_dialog_material=0x7f0c0009;
    public static final int abc_alert_dialog_title_material=0x7f0c000a;
    public static final int abc_cascading_menu_item_layout=0x7f0c000b;
    public static final int abc_dialog_title_material=0x7f0c000c;
    public static final int abc_expanded_menu_layout=0x7f0c000d;
    public static final int abc_list_menu_item_checkbox=0x7f0c000e;
    public static final int abc_list_menu_item_icon=0x7f0c000f;
    public static final int abc_list_menu_item_layout=0x7f0c0010;
    public static final int abc_list_menu_item_radio=0x7f0c0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0c0012;
    public static final int abc_popup_menu_item_layout=0x7f0c0013;
    public static final int abc_screen_content_include=0x7f0c0014;
    public static final int abc_screen_simple=0x7f0c0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0c0016;
    public static final int abc_screen_toolbar=0x7f0c0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0c0018;
    public static final int abc_search_view=0x7f0c0019;
    public static final int abc_select_dialog_material=0x7f0c001a;
    public static final int abc_tooltip=0x7f0c001b;
    public static final int custom_dialog=0x7f0c001c;
    public static final int design_bottom_navigation_item=0x7f0c001d;
    public static final int design_bottom_sheet_dialog=0x7f0c001e;
    public static final int design_layout_snackbar=0x7f0c001f;
    public static final int design_layout_snackbar_include=0x7f0c0020;
    public static final int design_layout_tab_icon=0x7f0c0021;
    public static final int design_layout_tab_text=0x7f0c0022;
    public static final int design_menu_item_action_area=0x7f0c0023;
    public static final int design_navigation_item=0x7f0c0024;
    public static final int design_navigation_item_header=0x7f0c0025;
    public static final int design_navigation_item_separator=0x7f0c0026;
    public static final int design_navigation_item_subheader=0x7f0c0027;
    public static final int design_navigation_menu=0x7f0c0028;
    public static final int design_navigation_menu_item=0x7f0c0029;
    public static final int design_text_input_end_icon=0x7f0c002a;
    public static final int design_text_input_start_icon=0x7f0c002b;
    public static final int dim_screen_confirmation_dialog=0x7f0c002c;
    public static final int dimming_overlay_exit_instruction=0x7f0c002d;
    public static final int expand_button=0x7f0c002e;
    public static final int first_time_use_dialog=0x7f0c002f;
    public static final int image_frame=0x7f0c0030;
    public static final int keyboard_shortcut_dialog=0x7f0c0031;
    public static final int label_addedit_dialog=0x7f0c0032;
    public static final int label_manager_label_row=0x7f0c0033;
    public static final int label_manager_labels=0x7f0c0034;
    public static final int label_manager_package_row=0x7f0c0035;
    public static final int label_manager_packages=0x7f0c0036;
    public static final int list_item_category=0x7f0c0037;
    public static final int list_item_radio=0x7f0c0038;
    public static final int listitem_2texts=0x7f0c0039;
    public static final int mtrl_alert_dialog=0x7f0c003a;
    public static final int mtrl_alert_dialog_actions=0x7f0c003b;
    public static final int mtrl_alert_dialog_title=0x7f0c003c;
    public static final int mtrl_alert_select_dialog_item=0x7f0c003d;
    public static final int mtrl_alert_select_dialog_multichoice=0x7f0c003e;
    public static final int mtrl_alert_select_dialog_singlechoice=0x7f0c003f;
    public static final int mtrl_calendar_day=0x7f0c0040;
    public static final int mtrl_calendar_day_of_week=0x7f0c0041;
    public static final int mtrl_calendar_days_of_week=0x7f0c0042;
    public static final int mtrl_calendar_horizontal=0x7f0c0043;
    public static final int mtrl_calendar_month=0x7f0c0044;
    public static final int mtrl_calendar_month_labeled=0x7f0c0045;
    public static final int mtrl_calendar_month_navigation=0x7f0c0046;
    public static final int mtrl_calendar_months=0x7f0c0047;
    public static final int mtrl_calendar_vertical=0x7f0c0048;
    public static final int mtrl_calendar_year=0x7f0c0049;
    public static final int mtrl_layout_snackbar=0x7f0c004a;
    public static final int mtrl_layout_snackbar_include=0x7f0c004b;
    public static final int mtrl_picker_actions=0x7f0c004c;
    public static final int mtrl_picker_dialog=0x7f0c004d;
    public static final int mtrl_picker_fullscreen=0x7f0c004e;
    public static final int mtrl_picker_header_dialog=0x7f0c004f;
    public static final int mtrl_picker_header_fullscreen=0x7f0c0050;
    public static final int mtrl_picker_header_selection_text=0x7f0c0051;
    public static final int mtrl_picker_header_title_text=0x7f0c0052;
    public static final int mtrl_picker_header_toggle=0x7f0c0053;
    public static final int mtrl_picker_text_input_date=0x7f0c0054;
    public static final int mtrl_picker_text_input_date_range=0x7f0c0055;
    public static final int notification_action=0x7f0c0056;
    public static final int notification_action_tombstone=0x7f0c0057;
    public static final int notification_template_custom_big=0x7f0c0058;
    public static final int notification_template_icon_group=0x7f0c0059;
    public static final int notification_template_part_chronometer=0x7f0c005a;
    public static final int notification_template_part_time=0x7f0c005b;
    public static final int preference=0x7f0c005c;
    public static final int preference_category=0x7f0c005d;
    public static final int preference_category_material=0x7f0c005e;
    public static final int preference_dialog_edittext=0x7f0c005f;
    public static final int preference_dropdown=0x7f0c0060;
    public static final int preference_dropdown_material=0x7f0c0061;
    public static final int preference_information=0x7f0c0062;
    public static final int preference_information_material=0x7f0c0063;
    public static final int preference_list_fragment=0x7f0c0064;
    public static final int preference_material=0x7f0c0065;
    public static final int preference_recyclerview=0x7f0c0066;
    public static final int preference_widget_checkbox=0x7f0c0067;
    public static final int preference_widget_seekbar=0x7f0c0068;
    public static final int preference_widget_seekbar_material=0x7f0c0069;
    public static final int preference_widget_switch=0x7f0c006a;
    public static final int preference_widget_switch_compat=0x7f0c006b;
    public static final int preference_with_survey=0x7f0c006c;
    public static final int quick_menu_item_action_overlay=0x7f0c006d;
    public static final int quick_menu_item_overlay=0x7f0c006e;
    public static final int quick_menu_item_overlay_without_multifinger_gesture=0x7f0c006f;
    public static final int screen_search_dialog=0x7f0c0070;
    public static final int select_dialog_item_material=0x7f0c0071;
    public static final int select_dialog_multichoice_material=0x7f0c0072;
    public static final int select_dialog_singlechoice_material=0x7f0c0073;
    public static final int summary_list_group=0x7f0c0074;
    public static final int summary_list_item=0x7f0c0075;
    public static final int support_simple_spinner_dropdown_item=0x7f0c0076;
    public static final int test_action_chip=0x7f0c0077;
    public static final int test_design_checkbox=0x7f0c0078;
    public static final int test_reflow_chipgroup=0x7f0c0079;
    public static final int test_toolbar=0x7f0c007a;
    public static final int test_toolbar_custom_background=0x7f0c007b;
    public static final int test_toolbar_elevation=0x7f0c007c;
    public static final int test_toolbar_surface=0x7f0c007d;
    public static final int text_view_with_line_height_from_appearance=0x7f0c007e;
    public static final int text_view_with_line_height_from_layout=0x7f0c007f;
    public static final int text_view_with_line_height_from_style=0x7f0c0080;
    public static final int text_view_with_theme_line_height=0x7f0c0081;
    public static final int text_view_without_line_height=0x7f0c0082;
    public static final int training_activity=0x7f0c0083;
    public static final int training_button=0x7f0c0084;
    public static final int training_divider=0x7f0c0085;
    public static final int training_edit_text=0x7f0c0086;
    public static final int training_fragment_name=0x7f0c0087;
    public static final int training_heading=0x7f0c0088;
    public static final int training_link=0x7f0c0089;
    public static final int training_list_item=0x7f0c008a;
    public static final int training_navigation_button_bar=0x7f0c008b;
    public static final int training_note=0x7f0c008c;
    public static final int training_page_number=0x7f0c008d;
    public static final int training_text=0x7f0c008e;
    public static final int training_text_list=0x7f0c008f;
    public static final int training_text_with_icon=0x7f0c0090;
    public static final int training_text_with_number=0x7f0c0091;
    public static final int training_title=0x7f0c0092;
    public static final int tutorial_hold_six_fingers=0x7f0c0093;
    public static final int tutorial_intro=0x7f0c0094;
    public static final int tutorial_rotate_orientation=0x7f0c0095;
    public static final int url_dialog_row=0x7f0c0096;
    public static final int web_activity=0x7f0c0097;
  }
  public static final class menu {
    public static final int context_menu=0x7f0d0000;
    public static final int dump_a11y_event_menu=0x7f0d0001;
    public static final int language_menu=0x7f0d0002;
    public static final int local_context_menu=0x7f0d0003;
    public static final int web_local_context_menu=0x7f0d0004;
  }
  public static final class plurals {
    public static final int braille_dots=0x7f0e0000;
    public static final int label_import_succeeded=0x7f0e0001;
    public static final int msg_matches_found=0x7f0e0002;
    public static final int mtrl_badge_content_description=0x7f0e0003;
    public static final int template_containers=0x7f0e0004;
    public static final int template_dump_event_count=0x7f0e0005;
    public static final int template_list_column_count=0x7f0e0006;
    public static final int template_list_row_count=0x7f0e0007;
    public static final int template_list_total_count=0x7f0e0008;
    public static final int template_password_character_count=0x7f0e0009;
  }
  public static final class raw {
    public static final int calibration_done=0x7f0f0000;
    public static final int chime_down=0x7f0f0001;
    public static final int chime_up=0x7f0f0002;
    public static final int complete=0x7f0f0003;
    public static final int compositor=0x7f0f0004;
    public static final int focus=0x7f0f0005;
    public static final int focus_actionable=0x7f0f0006;
    public static final int gesture_begin=0x7f0f0007;
    public static final int gesture_end=0x7f0f0008;
    public static final int hyperlink=0x7f0f0009;
    public static final int long_clicked=0x7f0f000a;
    public static final int paused_feedback=0x7f0f000b;
    public static final int phonetic_letters=0x7f0f000c;
    public static final int radial_menu_1=0x7f0f000d;
    public static final int radial_menu_2=0x7f0f000e;
    public static final int radial_menu_3=0x7f0f000f;
    public static final int radial_menu_4=0x7f0f0010;
    public static final int radial_menu_5=0x7f0f0011;
    public static final int radial_menu_6=0x7f0f0012;
    public static final int radial_menu_7=0x7f0f0013;
    public static final int radial_menu_8=0x7f0f0014;
    public static final int scroll_tone=0x7f0f0015;
    public static final int tick=0x7f0f0016;
    public static final int tutorial=0x7f0f0017;
    public static final int view_entered=0x7f0f0018;
    public static final int volume_beep=0x7f0f0019;
    public static final int window_state=0x7f0f001a;
  }
  public static final class string {
    public static final int Reset_gesture_settings_dialog_title=0x7f100000;
    public static final int abc_action_bar_home_description=0x7f100001;
    public static final int abc_action_bar_up_description=0x7f100002;
    public static final int abc_action_menu_overflow_description=0x7f100003;
    public static final int abc_action_mode_done=0x7f100004;
    public static final int abc_activity_chooser_view_see_all=0x7f100005;
    public static final int abc_activitychooserview_choose_application=0x7f100006;
    public static final int abc_capital_off=0x7f100007;
    public static final int abc_capital_on=0x7f100008;
    public static final int abc_menu_alt_shortcut_label=0x7f100009;
    public static final int abc_menu_ctrl_shortcut_label=0x7f10000a;
    public static final int abc_menu_delete_shortcut_label=0x7f10000b;
    public static final int abc_menu_enter_shortcut_label=0x7f10000c;
    public static final int abc_menu_function_shortcut_label=0x7f10000d;
    public static final int abc_menu_meta_shortcut_label=0x7f10000e;
    public static final int abc_menu_shift_shortcut_label=0x7f10000f;
    public static final int abc_menu_space_shortcut_label=0x7f100010;
    public static final int abc_menu_sym_shortcut_label=0x7f100011;
    public static final int abc_prepend_shortcut_label=0x7f100012;
    public static final int abc_search_hint=0x7f100013;
    public static final int abc_searchview_description_clear=0x7f100014;
    public static final int abc_searchview_description_query=0x7f100015;
    public static final int abc_searchview_description_search=0x7f100016;
    public static final int abc_searchview_description_submit=0x7f100017;
    public static final int abc_searchview_description_voice=0x7f100018;
    public static final int abc_shareactionprovider_share_with=0x7f100019;
    public static final int abc_shareactionprovider_share_with_application=0x7f10001a;
    public static final int abc_toolbar_collapse_description=0x7f10001b;
    public static final int action_gesture_change_notification=0x7f10001d;
    public static final int activated_view=0x7f10001e;
    public static final int adjust_granularity_hint=0x7f10001f;
    public static final int adjust_setting_hint=0x7f100020;
    public static final int all_set_text=0x7f100021;
    public static final int all_set_title=0x7f100022;
    public static final int always_show_this_message_label=0x7f100023;
    public static final int appbar_scrolling_view_behavior=0x7f100024;
    public static final int arc_android_window=0x7f100025;
    public static final int arc_navigation_hint=0x7f100026;
    public static final int arc_open_manage_keyboard_shortcuts_hint=0x7f100027;
    public static final int arc_open_talkback_settings_hint=0x7f100028;
    public static final int arc_talkback_activation_hint=0x7f100029;
    public static final int assign_gestures=0x7f10002a;
    public static final int audio_focus_off=0x7f10002b;
    public static final int audio_focus_on=0x7f10002c;
    public static final int audio_focus_state=0x7f10002d;
    public static final int auto_detect=0x7f10002e;
    public static final int basic_navigation_link_subtext=0x7f10002f;
    public static final int basic_navigation_link_text=0x7f100030;
    public static final int bottom_sheet_behavior=0x7f100031;
    public static final int braille_ime_displayed_name=0x7f100032;
    public static final int braille_ime_hidden_announcement=0x7f100033;
    public static final int braille_ime_service_name=0x7f100034;
    public static final int braille_keyboard=0x7f100035;
    public static final int braille_keyboard_gestures=0x7f100036;
    public static final int braille_tutorial_title=0x7f100037;
    public static final int bring_ime_settings_page=0x7f100038;
    public static final int button_1=0x7f100039;
    public static final int button_2=0x7f10003a;
    public static final int button_3=0x7f10003b;
    public static final int button_4=0x7f10003c;
    public static final int button_accept_changed_gesture_mappings=0x7f10003d;
    public static final int button_customize_gesture_mappings=0x7f10003e;
    public static final int button_disable_all_events=0x7f10003f;
    public static final int button_enable_all_events=0x7f100040;
    public static final int calibration_fail_announcement=0x7f100041;
    public static final int calibration_finish_announcement=0x7f100042;
    public static final int calibration_step1_hold_left_finger_announcement=0x7f100043;
    public static final int calibration_step1_hold_right_finger_announcement=0x7f100044;
    public static final int calibration_step2_hold_left_finger_announcement=0x7f100045;
    public static final int calibration_step2_hold_right_finger_announcement=0x7f100046;
    public static final int cannot_add_label=0x7f100047;
    public static final int cannot_copy_feedback=0x7f100048;
    public static final int cannot_cut_feedback=0x7f100049;
    public static final int cannot_delete_feedback=0x7f10004a;
    public static final int cannot_paste_feedback=0x7f10004b;
    public static final int capital_letters_change_pitch=0x7f10004c;
    public static final int capital_letters_nothing=0x7f10004d;
    public static final int capital_letters_sound_feedback=0x7f10004e;
    public static final int capital_letters_speak_capital=0x7f10004f;
    public static final int capitalize_announcement=0x7f100050;
    public static final int change_typing_language_dialog_title=0x7f100051;
    public static final int character_collapse_template=0x7f100052;
    public static final int character_counter_content_description=0x7f100053;
    public static final int character_counter_overflowed_content_description=0x7f100054;
    public static final int character_counter_pattern=0x7f100055;
    public static final int chip_text=0x7f100056;
    public static final int classic_keymap_entry_value=0x7f100057;
    public static final int clear_text_end_icon_content_description=0x7f100058;
    public static final int code_user_facing_name_ar=0x7f100059;
    public static final int code_user_facing_name_es=0x7f10005a;
    public static final int code_user_facing_name_fr=0x7f10005b;
    public static final int code_user_facing_name_ueb=0x7f10005c;
    public static final int column_heading_template=0x7f10005d;
    public static final int column_index_template=0x7f10005e;
    public static final int common_google_play_services_enable_button=0x7f10005f;
    public static final int common_google_play_services_enable_text=0x7f100060;
    public static final int common_google_play_services_enable_title=0x7f100061;
    public static final int common_google_play_services_install_button=0x7f100062;
    public static final int common_google_play_services_install_text=0x7f100063;
    public static final int common_google_play_services_install_title=0x7f100064;
    public static final int common_google_play_services_notification_channel_name=0x7f100065;
    public static final int common_google_play_services_notification_ticker=0x7f100066;
    public static final int common_google_play_services_unknown_issue=0x7f100067;
    public static final int common_google_play_services_unsupported_text=0x7f100068;
    public static final int common_google_play_services_update_button=0x7f100069;
    public static final int common_google_play_services_update_text=0x7f10006a;
    public static final int common_google_play_services_update_title=0x7f10006b;
    public static final int common_google_play_services_updating_text=0x7f10006c;
    public static final int common_google_play_services_wear_update_text=0x7f10006d;
    public static final int common_open_on_phone=0x7f10006e;
    public static final int common_signin_button_text=0x7f10006f;
    public static final int common_signin_button_text_long=0x7f100070;
    public static final int content_heading=0x7f100071;
    public static final int content_text=0x7f100072;
    public static final int context_menu_category_contextual_actions=0x7f100073;
    public static final int context_menu_category_others=0x7f100074;
    public static final int context_menu_edit_options_selection=0x7f100075;
    public static final int context_menu_layout_selection=0x7f100076;
    public static final int context_menu_see_all_gestures_selection=0x7f100077;
    public static final int context_menu_settings_selection=0x7f100078;
    public static final int context_menu_switch_contracted_status_selection=0x7f100079;
    public static final int context_menu_title=0x7f10007a;
    public static final int context_menu_tutorial_finish=0x7f10007b;
    public static final int context_menu_tutorial_selection=0x7f10007c;
    public static final int context_menu_typing_language_selection=0x7f10007d;
    public static final int context_menu_typing_language_selection_summary=0x7f10007e;
    public static final int continue_tutorial_announcement=0x7f10007f;
    public static final int contracted=0x7f100080;
    public static final int copy=0x7f100081;
    public static final int copy_all=0x7f100082;
    public static final int copy_cut_paste_title=0x7f100083;
    public static final int copy_text=0x7f100084;
    public static final int copy_text_pre_r=0x7f100085;
    public static final int customize_setting_selector_text=0x7f100086;
    public static final int customize_setting_selector_text_pre_r=0x7f100087;
    public static final int cut_all=0x7f100088;
    public static final int cut_paste_text=0x7f100089;
    public static final int cut_paste_text_pre_r=0x7f10008a;
    public static final int default_keymap_entry_value=0x7f10008b;
    public static final int dialog_message_continuous_reading_mode=0x7f10008c;
    public static final int dialog_message_dim_screen=0x7f10008d;
    public static final int dialog_message_disable_exploration=0x7f10008e;
    public static final int dialog_message_enable_performance_stats=0x7f10008f;
    public static final int dialog_message_enable_tree_debug=0x7f100090;
    public static final int dialog_message_pass_through_mode=0x7f100091;
    public static final int dialog_message_suspend_talkback=0x7f100092;
    public static final int dialog_message_voice_commands=0x7f100093;
    public static final int dialog_title_continuous_reading_mode=0x7f100094;
    public static final int dialog_title_dim_screen=0x7f100095;
    public static final int dialog_title_disable_exploration=0x7f100096;
    public static final int dialog_title_enable_performance_stats=0x7f100097;
    public static final int dialog_title_enable_tree_debug=0x7f100098;
    public static final int dialog_title_pass_through_mode=0x7f100099;
    public static final int dialog_title_suspend_talkback=0x7f10009a;
    public static final int dialog_title_voice_commands=0x7f10009b;
    public static final int dim_screen_timer=0x7f10009c;
    public static final int display_name_aria_landmark=0x7f10009d;
    public static final int display_name_button=0x7f10009e;
    public static final int display_name_checkbox=0x7f10009f;
    public static final int display_name_combobox=0x7f1000a0;
    public static final int display_name_control=0x7f1000a1;
    public static final int display_name_edit_field=0x7f1000a2;
    public static final int display_name_focusable_item=0x7f1000a3;
    public static final int display_name_graphic=0x7f1000a4;
    public static final int display_name_heading=0x7f1000a5;
    public static final int display_name_heading_1=0x7f1000a6;
    public static final int display_name_heading_2=0x7f1000a7;
    public static final int display_name_heading_3=0x7f1000a8;
    public static final int display_name_heading_4=0x7f1000a9;
    public static final int display_name_heading_5=0x7f1000aa;
    public static final int display_name_heading_6=0x7f1000ab;
    public static final int display_name_link=0x7f1000ac;
    public static final int display_name_list=0x7f1000ad;
    public static final int display_name_list_item=0x7f1000ae;
    public static final int display_name_table=0x7f1000af;
    public static final int display_name_window=0x7f1000b0;
    public static final int done=0x7f1000b1;
    public static final int dump_node_tree_description=0x7f1000b2;
    public static final int edit_box_hint=0x7f1000b3;
    public static final int edit_box_text=0x7f1000b4;
    public static final int end_of_page=0x7f1000b5;
    public static final int end_of_text=0x7f1000b6;
    public static final int enter_text_here=0x7f1000b7;
    public static final int error_icon_content_description=0x7f1000b8;
    public static final int exit_scrim=0x7f1000b9;
    public static final int exit_tutorial_content=0x7f1000ba;
    public static final int exit_tutorial_title=0x7f1000bb;
    public static final int expand_button_title=0x7f1000bc;
    public static final int explore_by_touch_text=0x7f1000bd;
    public static final int explore_by_touch_title=0x7f1000be;
    public static final int exposed_dropdown_menu_content_description=0x7f1000bf;
    public static final int fab_transformation_scrim_behavior=0x7f1000c0;
    public static final int fab_transformation_sheet_behavior=0x7f1000c1;
    public static final int find_finish_button_text=0x7f1000c2;
    public static final int finish_tutorial_announcement=0x7f1000c3;
    public static final int four_finger_gestures_title=0x7f1000c4;
    public static final int function_off=0x7f1000c5;
    public static final int function_on=0x7f1000c6;
    public static final int gboard_name=0x7f1000c7;
    public static final int gesture_1_or_2=0x7f1000c8;
    public static final int gesture_add_space=0x7f1000c9;
    public static final int gesture_delete=0x7f1000ca;
    public static final int gesture_delete_word=0x7f1000cb;
    public static final int gesture_hide_keyboard=0x7f1000cc;
    public static final int gesture_name_2finger_tap_hold=0x7f1000cd;
    public static final int gesture_name_3finger_3tap_hold=0x7f1000ce;
    public static final int gesture_name_3finger_tap_hold=0x7f1000cf;
    public static final int gesture_name_double_tap=0x7f1000d0;
    public static final int gesture_name_double_tap_and_hold=0x7f1000d1;
    public static final int gesture_name_pass_through=0x7f1000d2;
    public static final int gesture_name_touch_explore=0x7f1000d3;
    public static final int gesture_name_unknown=0x7f1000d4;
    public static final int gesture_new_line=0x7f1000d5;
    public static final int gesture_next_keyboard=0x7f1000d6;
    public static final int gesture_open_context_menu=0x7f1000d7;
    public static final int gesture_submit_text=0x7f1000d8;
    public static final int gestures_accessibility_shortcut_text=0x7f1000d9;
    public static final int gestures_announce_reset_gesture_settings=0x7f1000da;
    public static final int gestures_back_text=0x7f1000db;
    public static final int gestures_home_text=0x7f1000dc;
    public static final int gestures_open_notifications_text_for_3_button_navigation=0x7f1000dd;
    public static final int gestures_open_notifications_text_for_gesture_navigation=0x7f1000de;
    public static final int gestures_overview_screen_text=0x7f1000df;
    public static final int gestures_text=0x7f1000e0;
    public static final int gestures_title=0x7f1000e1;
    public static final int global_context_menu_title=0x7f1000e2;
    public static final int granularity_character=0x7f1000e3;
    public static final int granularity_default=0x7f1000e4;
    public static final int granularity_line=0x7f1000e5;
    public static final int granularity_native_control=0x7f1000e6;
    public static final int granularity_native_heading=0x7f1000e7;
    public static final int granularity_native_link=0x7f1000e8;
    public static final int granularity_page=0x7f1000e9;
    public static final int granularity_paragraph=0x7f1000ea;
    public static final int granularity_pseudo_web_special_content=0x7f1000eb;
    public static final int granularity_web_control=0x7f1000ec;
    public static final int granularity_web_heading=0x7f1000ed;
    public static final int granularity_web_landmark=0x7f1000ee;
    public static final int granularity_web_link=0x7f1000ef;
    public static final int granularity_web_list=0x7f1000f0;
    public static final int granularity_word=0x7f1000f1;
    public static final int heading_template=0x7f1000f2;
    public static final int hide_bottom_view_on_scroll_behavior=0x7f1000f3;
    public static final int hide_keyboard_window=0x7f1000f4;
    public static final int hint_radial_menu=0x7f1000f5;
    public static final int hint_summary_jog_dial=0x7f1000f6;
    public static final int hint_type_search_term=0x7f1000f7;
    public static final int hold_six_fingers_announcement=0x7f1000f8;
    public static final int hold_six_fingers_description=0x7f1000f9;
    public static final int hold_six_fingers_inactive_announcement=0x7f1000fa;
    public static final int how_to_use_braille_keyboard=0x7f1000fb;
    public static final int icon_content_description=0x7f1000fc;
    public static final int imported_labels_reverted=0x7f1000fd;
    public static final int in_collection_role_description=0x7f1000fe;
    public static final int in_collection_role_description_with_name=0x7f1000ff;
    public static final int in_grid=0x7f100100;
    public static final int in_grid_pager=0x7f100101;
    public static final int in_grid_pager_with_name=0x7f100102;
    public static final int in_grid_with_name=0x7f100103;
    public static final int in_horizontal_pager=0x7f100104;
    public static final int in_horizontal_pager_with_name=0x7f100105;
    public static final int in_list=0x7f100106;
    public static final int in_list_with_name=0x7f100107;
    public static final int in_pager=0x7f100108;
    public static final int in_pager_with_name=0x7f100109;
    public static final int in_vertical_pager=0x7f10010a;
    public static final int in_vertical_pager_with_name=0x7f10010b;
    public static final int input_view_caption=0x7f10010c;
    public static final int instruction_put_phone_flat=0x7f10010d;
    public static final int instruction_swipe_down_2_fingers=0x7f10010e;
    public static final int instruction_swipe_down_3_fingers=0x7f10010f;
    public static final int instruction_swipe_left=0x7f100110;
    public static final int instruction_swipe_right=0x7f100111;
    public static final int instruction_swipe_up_3_fingers=0x7f100112;
    public static final int instruction_type_letter_a=0x7f100113;
    public static final int instruction_type_letter_a_left_index_finger=0x7f100114;
    public static final int instruction_type_letter_a_right_index_finger=0x7f100115;
    public static final int instruction_type_letter_bcd=0x7f100116;
    public static final int item_index_template=0x7f100117;
    public static final int jump_between_controls_text=0x7f100118;
    public static final int jump_between_controls_text_pre_r=0x7f100119;
    public static final int jump_between_controls_title=0x7f10011a;
    public static final int jump_between_headings_text=0x7f10011b;
    public static final int jump_between_headings_text_pre_r=0x7f10011c;
    public static final int jump_between_headings_title=0x7f10011d;
    public static final int jump_between_links_text=0x7f10011e;
    public static final int jump_between_links_text_pre_r=0x7f10011f;
    public static final int jump_between_links_title=0x7f100120;
    public static final int keycombo_announce_shortcut_not_supported=0x7f100121;
    public static final int keycombo_assign_dialog_clear=0x7f100122;
    public static final int keycombo_assign_dialog_default_keymap_instruction=0x7f100123;
    public static final int keycombo_assign_dialog_instruction=0x7f100124;
    public static final int keycombo_assign_dialog_message=0x7f100125;
    public static final int keycombo_assign_dialog_navigation_reminder=0x7f100126;
    public static final int keycombo_key_arrow_down=0x7f100127;
    public static final int keycombo_key_arrow_left=0x7f100128;
    public static final int keycombo_key_arrow_right=0x7f100129;
    public static final int keycombo_key_arrow_up=0x7f10012a;
    public static final int keycombo_key_modifier_alt=0x7f10012b;
    public static final int keycombo_key_modifier_ctrl=0x7f10012c;
    public static final int keycombo_key_modifier_meta=0x7f10012d;
    public static final int keycombo_key_modifier_shift=0x7f10012e;
    public static final int keycombo_menu_alert_message_trigger_modifier=0x7f10012f;
    public static final int keycombo_menu_alert_title_trigger_modifier=0x7f100130;
    public static final int keycombo_menu_announce_active_keymap=0x7f100131;
    public static final int keycombo_menu_announce_new_trigger_modifier=0x7f100132;
    public static final int keycombo_menu_announce_reset_keymap=0x7f100133;
    public static final int keycombo_menu_category_global=0x7f100134;
    public static final int keycombo_menu_category_granularity=0x7f100135;
    public static final int keycombo_menu_category_navigation=0x7f100136;
    public static final int keycombo_menu_category_other=0x7f100137;
    public static final int keycombo_menu_category_select_keymap=0x7f100138;
    public static final int keycombo_menu_category_web=0x7f100139;
    public static final int keycombo_menu_choose_trigger_modifier=0x7f10013a;
    public static final int keycombo_menu_global_back=0x7f10013b;
    public static final int keycombo_menu_global_home=0x7f10013c;
    public static final int keycombo_menu_global_notifications=0x7f10013d;
    public static final int keycombo_menu_global_recent=0x7f10013e;
    public static final int keycombo_menu_global_suspend=0x7f10013f;
    public static final int keycombo_menu_granularity_decrease=0x7f100140;
    public static final int keycombo_menu_granularity_increase=0x7f100141;
    public static final int keycombo_menu_navigate_down=0x7f100142;
    public static final int keycombo_menu_navigate_first=0x7f100143;
    public static final int keycombo_menu_navigate_last=0x7f100144;
    public static final int keycombo_menu_navigate_next=0x7f100145;
    public static final int keycombo_menu_navigate_next_character=0x7f100146;
    public static final int keycombo_menu_navigate_next_window=0x7f100147;
    public static final int keycombo_menu_navigate_next_word=0x7f100148;
    public static final int keycombo_menu_navigate_previous=0x7f100149;
    public static final int keycombo_menu_navigate_previous_character=0x7f10014a;
    public static final int keycombo_menu_navigate_previous_window=0x7f10014b;
    public static final int keycombo_menu_navigate_previous_word=0x7f10014c;
    public static final int keycombo_menu_navigate_up=0x7f10014d;
    public static final int keycombo_menu_other_custom_actions=0x7f10014e;
    public static final int keycombo_menu_other_language_options=0x7f10014f;
    public static final int keycombo_menu_other_open_manage_keyboard_shortcuts=0x7f100150;
    public static final int keycombo_menu_other_open_talkback_settings=0x7f100151;
    public static final int keycombo_menu_other_read_from_next_item=0x7f100152;
    public static final int keycombo_menu_other_read_from_top=0x7f100153;
    public static final int keycombo_menu_other_talkback_context_menu=0x7f100154;
    public static final int keycombo_menu_other_toggle_search=0x7f100155;
    public static final int keycombo_menu_perform_click=0x7f100156;
    public static final int keycombo_menu_perform_long_click=0x7f100157;
    public static final int keycombo_menu_reset_keymap=0x7f100158;
    public static final int keycombo_menu_select_keymap=0x7f100159;
    public static final int keycombo_menu_web_navigate_to_next_aria_landmark=0x7f10015a;
    public static final int keycombo_menu_web_navigate_to_next_button=0x7f10015b;
    public static final int keycombo_menu_web_navigate_to_next_checkbox=0x7f10015c;
    public static final int keycombo_menu_web_navigate_to_next_combobox=0x7f10015d;
    public static final int keycombo_menu_web_navigate_to_next_control=0x7f10015e;
    public static final int keycombo_menu_web_navigate_to_next_edit_field=0x7f10015f;
    public static final int keycombo_menu_web_navigate_to_next_focusable_item=0x7f100160;
    public static final int keycombo_menu_web_navigate_to_next_graphic=0x7f100161;
    public static final int keycombo_menu_web_navigate_to_next_heading=0x7f100162;
    public static final int keycombo_menu_web_navigate_to_next_heading_1=0x7f100163;
    public static final int keycombo_menu_web_navigate_to_next_heading_2=0x7f100164;
    public static final int keycombo_menu_web_navigate_to_next_heading_3=0x7f100165;
    public static final int keycombo_menu_web_navigate_to_next_heading_4=0x7f100166;
    public static final int keycombo_menu_web_navigate_to_next_heading_5=0x7f100167;
    public static final int keycombo_menu_web_navigate_to_next_heading_6=0x7f100168;
    public static final int keycombo_menu_web_navigate_to_next_link=0x7f100169;
    public static final int keycombo_menu_web_navigate_to_next_list=0x7f10016a;
    public static final int keycombo_menu_web_navigate_to_next_list_item=0x7f10016b;
    public static final int keycombo_menu_web_navigate_to_next_table=0x7f10016c;
    public static final int keycombo_menu_web_navigate_to_previous_aria_landmark=0x7f10016d;
    public static final int keycombo_menu_web_navigate_to_previous_button=0x7f10016e;
    public static final int keycombo_menu_web_navigate_to_previous_checkbox=0x7f10016f;
    public static final int keycombo_menu_web_navigate_to_previous_combobox=0x7f100170;
    public static final int keycombo_menu_web_navigate_to_previous_control=0x7f100171;
    public static final int keycombo_menu_web_navigate_to_previous_edit_field=0x7f100172;
    public static final int keycombo_menu_web_navigate_to_previous_focusable_item=0x7f100173;
    public static final int keycombo_menu_web_navigate_to_previous_graphic=0x7f100174;
    public static final int keycombo_menu_web_navigate_to_previous_heading=0x7f100175;
    public static final int keycombo_menu_web_navigate_to_previous_heading_1=0x7f100176;
    public static final int keycombo_menu_web_navigate_to_previous_heading_2=0x7f100177;
    public static final int keycombo_menu_web_navigate_to_previous_heading_3=0x7f100178;
    public static final int keycombo_menu_web_navigate_to_previous_heading_4=0x7f100179;
    public static final int keycombo_menu_web_navigate_to_previous_heading_5=0x7f10017a;
    public static final int keycombo_menu_web_navigate_to_previous_heading_6=0x7f10017b;
    public static final int keycombo_menu_web_navigate_to_previous_link=0x7f10017c;
    public static final int keycombo_menu_web_navigate_to_previous_list=0x7f10017d;
    public static final int keycombo_menu_web_navigate_to_previous_list_item=0x7f10017e;
    public static final int keycombo_menu_web_navigate_to_previous_table=0x7f10017f;
    public static final int keycombo_shortcut_global_back=0x7f100180;
    public static final int keycombo_shortcut_global_home=0x7f100181;
    public static final int keycombo_shortcut_global_notifications=0x7f100182;
    public static final int keycombo_shortcut_global_recents=0x7f100183;
    public static final int keycombo_shortcut_global_suspend=0x7f100184;
    public static final int keycombo_shortcut_granularity_decrease=0x7f100185;
    public static final int keycombo_shortcut_granularity_increase=0x7f100186;
    public static final int keycombo_shortcut_navigate_down=0x7f100187;
    public static final int keycombo_shortcut_navigate_first=0x7f100188;
    public static final int keycombo_shortcut_navigate_last=0x7f100189;
    public static final int keycombo_shortcut_navigate_next=0x7f10018a;
    public static final int keycombo_shortcut_navigate_next_aria_landmark=0x7f10018b;
    public static final int keycombo_shortcut_navigate_next_button=0x7f10018c;
    public static final int keycombo_shortcut_navigate_next_character=0x7f10018d;
    public static final int keycombo_shortcut_navigate_next_checkbox=0x7f10018e;
    public static final int keycombo_shortcut_navigate_next_combobox=0x7f10018f;
    public static final int keycombo_shortcut_navigate_next_control=0x7f100190;
    public static final int keycombo_shortcut_navigate_next_default=0x7f100191;
    public static final int keycombo_shortcut_navigate_next_edit_field=0x7f100192;
    public static final int keycombo_shortcut_navigate_next_focusable_item=0x7f100193;
    public static final int keycombo_shortcut_navigate_next_graphic=0x7f100194;
    public static final int keycombo_shortcut_navigate_next_heading=0x7f100195;
    public static final int keycombo_shortcut_navigate_next_heading_1=0x7f100196;
    public static final int keycombo_shortcut_navigate_next_heading_2=0x7f100197;
    public static final int keycombo_shortcut_navigate_next_heading_3=0x7f100198;
    public static final int keycombo_shortcut_navigate_next_heading_4=0x7f100199;
    public static final int keycombo_shortcut_navigate_next_heading_5=0x7f10019a;
    public static final int keycombo_shortcut_navigate_next_heading_6=0x7f10019b;
    public static final int keycombo_shortcut_navigate_next_link=0x7f10019c;
    public static final int keycombo_shortcut_navigate_next_list=0x7f10019d;
    public static final int keycombo_shortcut_navigate_next_list_item=0x7f10019e;
    public static final int keycombo_shortcut_navigate_next_table=0x7f10019f;
    public static final int keycombo_shortcut_navigate_next_window=0x7f1001a0;
    public static final int keycombo_shortcut_navigate_next_word=0x7f1001a1;
    public static final int keycombo_shortcut_navigate_previous=0x7f1001a2;
    public static final int keycombo_shortcut_navigate_previous_aria_landmark=0x7f1001a3;
    public static final int keycombo_shortcut_navigate_previous_button=0x7f1001a4;
    public static final int keycombo_shortcut_navigate_previous_character=0x7f1001a5;
    public static final int keycombo_shortcut_navigate_previous_checkbox=0x7f1001a6;
    public static final int keycombo_shortcut_navigate_previous_combobox=0x7f1001a7;
    public static final int keycombo_shortcut_navigate_previous_control=0x7f1001a8;
    public static final int keycombo_shortcut_navigate_previous_default=0x7f1001a9;
    public static final int keycombo_shortcut_navigate_previous_edit_field=0x7f1001aa;
    public static final int keycombo_shortcut_navigate_previous_focusable_item=0x7f1001ab;
    public static final int keycombo_shortcut_navigate_previous_graphic=0x7f1001ac;
    public static final int keycombo_shortcut_navigate_previous_heading=0x7f1001ad;
    public static final int keycombo_shortcut_navigate_previous_heading_1=0x7f1001ae;
    public static final int keycombo_shortcut_navigate_previous_heading_2=0x7f1001af;
    public static final int keycombo_shortcut_navigate_previous_heading_3=0x7f1001b0;
    public static final int keycombo_shortcut_navigate_previous_heading_4=0x7f1001b1;
    public static final int keycombo_shortcut_navigate_previous_heading_5=0x7f1001b2;
    public static final int keycombo_shortcut_navigate_previous_heading_6=0x7f1001b3;
    public static final int keycombo_shortcut_navigate_previous_link=0x7f1001b4;
    public static final int keycombo_shortcut_navigate_previous_list=0x7f1001b5;
    public static final int keycombo_shortcut_navigate_previous_list_item=0x7f1001b6;
    public static final int keycombo_shortcut_navigate_previous_table=0x7f1001b7;
    public static final int keycombo_shortcut_navigate_previous_window=0x7f1001b8;
    public static final int keycombo_shortcut_navigate_previous_word=0x7f1001b9;
    public static final int keycombo_shortcut_navigate_up=0x7f1001ba;
    public static final int keycombo_shortcut_open_manage_keyboard_shortcuts=0x7f1001bb;
    public static final int keycombo_shortcut_open_talkback_settings=0x7f1001bc;
    public static final int keycombo_shortcut_other_custom_actions=0x7f1001bd;
    public static final int keycombo_shortcut_other_language_options=0x7f1001be;
    public static final int keycombo_shortcut_other_read_from_next_item=0x7f1001bf;
    public static final int keycombo_shortcut_other_read_from_top=0x7f1001c0;
    public static final int keycombo_shortcut_other_talkback_context_menu=0x7f1001c1;
    public static final int keycombo_shortcut_other_toggle_search=0x7f1001c2;
    public static final int keycombo_shortcut_perform_click=0x7f1001c3;
    public static final int keycombo_shortcut_perform_long_click=0x7f1001c4;
    public static final int keycombo_unassigned=0x7f1001c5;
    public static final int label_choose_app_to_export=0x7f1001c6;
    public static final int label_choose_app_to_import=0x7f1001c7;
    public static final int label_dialog_confirm_label_remove=0x7f1001c8;
    public static final int label_dialog_edit_hint=0x7f1001c9;
    public static final int label_dialog_text=0x7f1001ca;
    public static final int label_dialog_title_add=0x7f1001cb;
    public static final int label_dialog_title_edit=0x7f1001cc;
    public static final int label_dialog_title_remove=0x7f1001cd;
    public static final int label_export_empty=0x7f1001ce;
    public static final int label_export_failed=0x7f1001cf;
    public static final int label_import=0x7f1001d0;
    public static final int label_import_dialog_message=0x7f1001d1;
    public static final int label_import_dialog_override=0x7f1001d2;
    public static final int label_import_dialog_skip=0x7f1001d3;
    public static final int label_import_dialog_title=0x7f1001d4;
    public static final int label_import_failed=0x7f1001d5;
    public static final int label_manager_no_packages_message=0x7f1001d6;
    public static final int label_manager_package_title=0x7f1001d7;
    public static final int label_manager_summary_title=0x7f1001d8;
    public static final int label_manager_timestamp_text=0x7f1001d9;
    public static final int label_remove_dialog_text=0x7f1001da;
    public static final int label_remove_dialog_text_app_name=0x7f1001db;
    public static final int label_screen_search_result=0x7f1001dc;
    public static final int label_talkback_context_menu=0x7f1001dd;
    public static final int language_list_preference_title=0x7f1001de;
    public static final int language_options=0x7f1001df;
    public static final int leave_keyboard=0x7f1001e0;
    public static final int link1_text=0x7f1001e1;
    public static final int link2_text=0x7f1001e2;
    public static final int link3_text=0x7f1001e3;
    public static final int link4_text=0x7f1001e4;
    public static final int links=0x7f1001e5;
    public static final int list_index_template=0x7f1001e6;
    public static final int menu_category_reading_controls=0x7f1001e8;
    public static final int menu_category_special_features=0x7f1001e9;
    public static final int menus_selector_text=0x7f1001ea;
    public static final int menus_selector_text_pre_r=0x7f1001eb;
    public static final int menus_talkback_menu_text=0x7f1001ec;
    public static final int menus_talkback_menu_text_pre_r=0x7f1001ed;
    public static final int menus_title=0x7f1001ee;
    public static final int message_in_reset_keymap_confirm_dialog=0x7f1001ef;
    public static final int message_reset_gesture_settings_confirm_dialog=0x7f1001f0;
    public static final int message_resume_keyguard=0x7f1001f1;
    public static final int message_resume_manual=0x7f1001f2;
    public static final int message_resume_screen_on=0x7f1001f3;
    public static final int more_new_feature_braille_keyboard_text=0x7f1001f4;
    public static final int more_new_feature_context_menu_text=0x7f1001f5;
    public static final int more_new_feature_context_menu_text_pre_r=0x7f1001f6;
    public static final int more_new_feature_title=0x7f1001f7;
    public static final int more_new_feature_voice_command_default_text=0x7f1001f8;
    public static final int more_new_feature_voice_command_text_with_actual_gesture=0x7f1001f9;
    public static final int moving_cursor_text=0x7f1001fa;
    public static final int moving_cursor_title=0x7f1001fb;
    public static final int msg_no_matches=0x7f1001fc;
    public static final int mtrl_badge_numberless_content_description=0x7f1001fd;
    public static final int mtrl_chip_close_icon_content_description=0x7f1001fe;
    public static final int mtrl_exceed_max_badge_number_suffix=0x7f1001ff;
    public static final int mtrl_picker_a11y_next_month=0x7f100200;
    public static final int mtrl_picker_a11y_prev_month=0x7f100201;
    public static final int mtrl_picker_announce_current_selection=0x7f100202;
    public static final int mtrl_picker_cancel=0x7f100203;
    public static final int mtrl_picker_confirm=0x7f100204;
    public static final int mtrl_picker_date_header_selected=0x7f100205;
    public static final int mtrl_picker_date_header_title=0x7f100206;
    public static final int mtrl_picker_date_header_unselected=0x7f100207;
    public static final int mtrl_picker_day_of_week_column_header=0x7f100208;
    public static final int mtrl_picker_invalid_format=0x7f100209;
    public static final int mtrl_picker_invalid_format_example=0x7f10020a;
    public static final int mtrl_picker_invalid_format_use=0x7f10020b;
    public static final int mtrl_picker_invalid_range=0x7f10020c;
    public static final int mtrl_picker_navigate_to_year_description=0x7f10020d;
    public static final int mtrl_picker_out_of_range=0x7f10020e;
    public static final int mtrl_picker_range_header_only_end_selected=0x7f10020f;
    public static final int mtrl_picker_range_header_only_start_selected=0x7f100210;
    public static final int mtrl_picker_range_header_selected=0x7f100211;
    public static final int mtrl_picker_range_header_title=0x7f100212;
    public static final int mtrl_picker_range_header_unselected=0x7f100213;
    public static final int mtrl_picker_save=0x7f100214;
    public static final int mtrl_picker_text_input_date_hint=0x7f100215;
    public static final int mtrl_picker_text_input_date_range_end_hint=0x7f100216;
    public static final int mtrl_picker_text_input_date_range_start_hint=0x7f100217;
    public static final int mtrl_picker_text_input_day_abbr=0x7f100218;
    public static final int mtrl_picker_text_input_month_abbr=0x7f100219;
    public static final int mtrl_picker_text_input_year_abbr=0x7f10021a;
    public static final int mtrl_picker_toggle_to_calendar_input_mode=0x7f10021b;
    public static final int mtrl_picker_toggle_to_day_selection=0x7f10021c;
    public static final int mtrl_picker_toggle_to_text_input_mode=0x7f10021d;
    public static final int mtrl_picker_toggle_to_year_selection=0x7f10021e;
    public static final int multiple_languages_braille_ime_displayed_name=0x7f10021f;
    public static final int navigation_bar=0x7f100220;
    public static final int navigation_heading=0x7f100221;
    public static final int new_feature_talkback_91_title=0x7f100222;
    public static final int new_gesture_notification_content=0x7f100223;
    public static final int new_gesture_notification_title=0x7f100224;
    public static final int new_shortcut_gesture_copy_text_announcement=0x7f100225;
    public static final int new_shortcut_gesture_copy_text_text=0x7f100226;
    public static final int new_shortcut_gesture_cut_text_announcement=0x7f100227;
    public static final int new_shortcut_gesture_cut_text_text=0x7f100228;
    public static final int new_shortcut_gesture_note=0x7f100229;
    public static final int new_shortcut_gesture_paste_text_announcement=0x7f10022a;
    public static final int new_shortcut_gesture_paste_text_text=0x7f10022b;
    public static final int new_shortcut_gesture_pause_media_announcement=0x7f10022c;
    public static final int new_shortcut_gesture_pause_or_play_media_subtext=0x7f10022d;
    public static final int new_shortcut_gesture_pause_or_play_media_text=0x7f10022e;
    public static final int new_shortcut_gesture_play_media_announcement=0x7f10022f;
    public static final int new_shortcut_gesture_reading_menu_text=0x7f100230;
    public static final int new_shortcut_gesture_selection_mode_off_announcement=0x7f100231;
    public static final int new_shortcut_gesture_selection_mode_on_announcement=0x7f100232;
    public static final int new_shortcut_gesture_selection_mode_text=0x7f100233;
    public static final int new_shortcut_gesture_stop_speech_announcement=0x7f100234;
    public static final int new_shortcut_gesture_stop_speech_text=0x7f100235;
    public static final int new_shortcut_gesture_text=0x7f100236;
    public static final int new_shortcut_gesture_title=0x7f100237;
    public static final int next_keyboard=0x7f100238;
    public static final int next_step=0x7f100239;
    public static final int no_adjust_setting_gesture=0x7f10023a;
    public static final int no_apps_to_export_labels=0x7f10023b;
    public static final int no_apps_to_import_labels=0x7f10023c;
    public static final int not_editable=0x7f10023d;
    public static final int not_enough_touch_points_dialog_message=0x7f10023e;
    public static final int not_enough_touch_points_dialog_title=0x7f10023f;
    public static final int not_set=0x7f100240;
    public static final int notification_category_alarm=0x7f100241;
    public static final int notification_category_call=0x7f100242;
    public static final int notification_category_email=0x7f100243;
    public static final int notification_category_err=0x7f100244;
    public static final int notification_category_event=0x7f100245;
    public static final int notification_category_msg=0x7f100246;
    public static final int notification_category_progress=0x7f100247;
    public static final int notification_category_promo=0x7f100248;
    public static final int notification_category_service=0x7f100249;
    public static final int notification_category_social=0x7f10024a;
    public static final int notification_category_sys=0x7f10024b;
    public static final int notification_category_transport=0x7f10024c;
    public static final int notification_message_talkback_gestures_changed=0x7f10024d;
    public static final int notification_message_talkback_suspended=0x7f10024e;
    public static final int notification_status_sync=0x7f10024f;
    public static final int notification_title_talkback_gestures_changed=0x7f100250;
    public static final int notification_title_talkback_suspended=0x7f100251;
    public static final int notification_tutorial_navigate_to_lession_1=0x7f100252;
    public static final int notification_type_beginning_of_field=0x7f100253;
    public static final int notification_type_end_of_field=0x7f100254;
    public static final int notification_type_missed_call=0x7f100255;
    public static final int notification_type_selection_cleared=0x7f100256;
    public static final int notification_type_selection_mode_off=0x7f100257;
    public static final int notification_type_selection_mode_on=0x7f100258;
    public static final int notification_type_status_chat=0x7f100259;
    public static final int notification_type_status_error=0x7f10025a;
    public static final int notification_type_status_more=0x7f10025b;
    public static final int notification_type_status_mute=0x7f10025c;
    public static final int notification_type_status_sdcard=0x7f10025d;
    public static final int notification_type_status_sdcard_usb=0x7f10025e;
    public static final int notification_type_status_started=0x7f10025f;
    public static final int notification_type_status_stopped=0x7f100260;
    public static final int notification_type_status_sync_noanim=0x7f100261;
    public static final int notification_type_status_voicemail=0x7f100262;
    public static final int number_announcement=0x7f100263;
    public static final int one_finger_angle_gestures_title=0x7f100264;
    public static final int one_finger_back_forth_gestures_title=0x7f100265;
    public static final int one_finger_gestures_title=0x7f100266;
    public static final int open_context_menu_announcement=0x7f100267;
    public static final int orientation_landscape=0x7f100268;
    public static final int orientation_portrait=0x7f100269;
    public static final int out_of_grid=0x7f10026a;
    public static final int out_of_grid_pager=0x7f10026b;
    public static final int out_of_grid_pager_with_name=0x7f10026c;
    public static final int out_of_grid_with_name=0x7f10026d;
    public static final int out_of_horizontal_pager=0x7f10026e;
    public static final int out_of_horizontal_pager_with_name=0x7f10026f;
    public static final int out_of_list=0x7f100270;
    public static final int out_of_list_with_name=0x7f100271;
    public static final int out_of_pager=0x7f100272;
    public static final int out_of_pager_with_name=0x7f100273;
    public static final int out_of_role_description=0x7f100274;
    public static final int out_of_role_description_with_name=0x7f100275;
    public static final int out_of_vertical_pager=0x7f100276;
    public static final int out_of_vertical_pager_with_name=0x7f100277;
    public static final int override_keycombo=0x7f100278;
    public static final int override_keycombo_message_two_params=0x7f100279;
    public static final int paragraph1_text=0x7f10027a;
    public static final int paragraph2_text=0x7f10027b;
    public static final int paragraph3_text=0x7f10027c;
    public static final int paragraph4_text=0x7f10027d;
    public static final int password_toggle_content_description=0x7f10027e;
    public static final int paste_all=0x7f10027f;
    public static final int path_password_eye=0x7f100280;
    public static final int path_password_eye_mask_strike_through=0x7f100281;
    public static final int path_password_eye_mask_visible=0x7f100282;
    public static final int path_password_strike_through=0x7f100283;
    public static final int perform_action_next=0x7f100284;
    public static final int perform_action_submitting=0x7f100285;
    public static final int perform_add_new_line_announcement=0x7f100286;
    public static final int perform_add_space_announcement=0x7f100287;
    public static final int perform_delete_letter_announcement=0x7f100288;
    public static final int perform_delete_word_announcement=0x7f100289;
    public static final int perform_hide_keyboard_announcement=0x7f10028a;
    public static final int perform_submit_text_announcement=0x7f10028b;
    public static final int perform_switch_keyboard_announcement=0x7f10028c;
    public static final int permission_labeling_desc=0x7f10028d;
    public static final int permission_labeling_label=0x7f10028e;
    public static final int permission_talkback_desc=0x7f10028f;
    public static final int permission_talkback_label=0x7f100290;
    public static final int practice_gestures_link_subtext=0x7f100291;
    public static final int practice_gestures_link_text=0x7f100292;
    public static final int practice_gestures_text=0x7f100293;
    public static final int practice_gestures_text_pre_r=0x7f100294;
    public static final int practice_gestures_title=0x7f100295;
    public static final int pref_a11y_hints_key=0x7f100296;
    public static final int pref_advanced_settings_key=0x7f100297;
    public static final int pref_brailleime_accumulate_mode=0x7f100298;
    public static final int pref_brailleime_auto_launch_tutorial=0x7f100299;
    public static final int pref_brailleime_calibration_points_phone_screenaway=0x7f10029a;
    public static final int pref_brailleime_calibration_points_phone_tabletop=0x7f10029b;
    public static final int pref_brailleime_calibration_points_tablet_tabletop_landscape=0x7f10029c;
    public static final int pref_brailleime_calibration_points_tablet_tabletop_portrait=0x7f10029d;
    public static final int pref_brailleime_contracted_mode=0x7f10029e;
    public static final int pref_brailleime_exit_keyboard_count=0x7f10029f;
    public static final int pref_brailleime_key=0x7f1002a0;
    public static final int pref_brailleime_layout_mode=0x7f1002a1;
    public static final int pref_brailleime_reverse_dots_mode=0x7f1002a2;
    public static final int pref_brailleime_see_all_actions=0x7f1002a3;
    public static final int pref_brailleime_show_option_dialog_count=0x7f1002a4;
    public static final int pref_brailleime_translator_code=0x7f1002a5;
    public static final int pref_brailleime_translator_codes_preferred=0x7f1002a6;
    public static final int pref_brailleime_turn_on_braille_keyboard=0x7f1002a7;
    public static final int pref_brailleime_typing_echo=0x7f1002a8;
    public static final int pref_capital_letters_default=0x7f1002a9;
    public static final int pref_capital_letters_key=0x7f1002aa;
    public static final int pref_category_1finger_angle_shortcuts_key=0x7f1002ab;
    public static final int pref_category_1finger_back_forth_shortcuts_key=0x7f1002ac;
    public static final int pref_category_1finger_shortcuts_key=0x7f1002ad;
    public static final int pref_category_2finger_shortcuts_key=0x7f1002ae;
    public static final int pref_category_3finger_shortcuts_key=0x7f1002af;
    public static final int pref_category_4finger_shortcuts_key=0x7f1002b0;
    public static final int pref_category_advanced_key=0x7f1002b1;
    public static final int pref_category_audio_key=0x7f1002b2;
    public static final int pref_category_built_in_gestures_key=0x7f1002b3;
    public static final int pref_category_context_menu_summary=0x7f1002b4;
    public static final int pref_category_context_menu_summary_single_finger=0x7f1002b5;
    public static final int pref_category_controls_key=0x7f1002b6;
    public static final int pref_category_developer_key=0x7f1002b7;
    public static final int pref_category_export_custom_labels_key=0x7f1002b8;
    public static final int pref_category_fingerprint_touch_shortcuts_key=0x7f1002b9;
    public static final int pref_category_help_and_feedback_key=0x7f1002ba;
    public static final int pref_category_legal_and_privacy_key=0x7f1002bb;
    public static final int pref_category_manage_context_menu_key=0x7f1002bc;
    public static final int pref_category_manage_gestures_key=0x7f1002bd;
    public static final int pref_category_manage_keyboard_shortcut_key=0x7f1002be;
    public static final int pref_category_manage_selector_menu_key=0x7f1002bf;
    public static final int pref_category_multi_finger_shortcuts=0x7f1002c0;
    public static final int pref_category_navigation_options_menu_key=0x7f1002c1;
    public static final int pref_category_selector_granularity_configuration_key=0x7f1002c2;
    public static final int pref_category_selector_menu_summary=0x7f1002c3;
    public static final int pref_category_selector_menu_summary_single_finger=0x7f1002c4;
    public static final int pref_category_selector_settings_activation_key=0x7f1002c5;
    public static final int pref_category_selector_settings_configuration_key=0x7f1002c6;
    public static final int pref_current_selector_setting_key=0x7f1002c7;
    public static final int pref_default_keymap_trigger_modifier_key=0x7f1002c8;
    public static final int pref_deprecated_shortcut_down=0x7f1002c9;
    public static final int pref_deprecated_shortcut_down_and_left_default=0x7f1002ca;
    public static final int pref_deprecated_shortcut_down_and_right_default=0x7f1002cb;
    public static final int pref_deprecated_shortcut_up=0x7f1002cc;
    public static final int pref_deprecated_shortcut_up_and_left_default=0x7f1002cd;
    public static final int pref_deprecated_shortcut_up_and_right_default=0x7f1002ce;
    public static final int pref_dim_volume_three_clicks_key=0x7f1002cf;
    public static final int pref_dim_when_talkback_enabled_key=0x7f1002d0;
    public static final int pref_dump_a11y_event_key=0x7f1002d1;
    public static final int pref_dump_event_key_prefix=0x7f1002d2;
    public static final int pref_dump_event_mask_key=0x7f1002d3;
    public static final int pref_echo_recognized_text_speech_key=0x7f1002d4;
    public static final int pref_explore_by_touch_key=0x7f1002d5;
    public static final int pref_explore_by_touch_reflect_key=0x7f1002d6;
    public static final int pref_help_and_feedback_key=0x7f1002d7;
    public static final int pref_intonation_key=0x7f1002d8;
    public static final int pref_item_licenses=0x7f1002d9;
    public static final int pref_key_last_log_attempt_key=0x7f1002da;
    public static final int pref_key_last_log_time_key=0x7f1002db;
    public static final int pref_key_selector_changed_key=0x7f1002dc;
    public static final int pref_keyboard_echo_default=0x7f1002dd;
    public static final int pref_keyboard_echo_key=0x7f1002de;
    public static final int pref_keymap_category_key=0x7f1002df;
    public static final int pref_log_level_default=0x7f1002e0;
    public static final int pref_log_level_key=0x7f1002e1;
    public static final int pref_manage_customize_menus_key=0x7f1002e2;
    public static final int pref_manage_keyboard_shortcuts=0x7f1002e3;
    public static final int pref_manage_labels_key=0x7f1002e4;
    public static final int pref_must_accept_gesture_change_notification=0x7f1002e5;
    public static final int pref_new_feature_talkback91_entry_point_key=0x7f1002e6;
    public static final int pref_node_desc_order_default=0x7f1002e7;
    public static final int pref_node_desc_order_entry_name_role_state_pos=0x7f1002e8;
    public static final int pref_node_desc_order_entry_role_name_state_pos=0x7f1002e9;
    public static final int pref_node_desc_order_entry_state_name_role_pos=0x7f1002ea;
    public static final int pref_node_desc_order_key=0x7f1002eb;
    public static final int pref_node_desc_order_title=0x7f1002ec;
    public static final int pref_node_desc_order_value_name_role_state_pos=0x7f1002ed;
    public static final int pref_node_desc_order_value_role_name_state_pos=0x7f1002ee;
    public static final int pref_node_desc_order_value_state_name_role_pos=0x7f1002ef;
    public static final int pref_not_selector_saved_gesture_suffix=0x7f1002f0;
    public static final int pref_performance_stats_key=0x7f1002f1;
    public static final int pref_performance_stats_reflect_key=0x7f1002f2;
    public static final int pref_phonetic_letters_key=0x7f1002f3;
    public static final int pref_play_store_key=0x7f1002f4;
    public static final int pref_policy_key=0x7f1002f5;
    public static final int pref_practice_gestures_entry_point_key=0x7f1002f6;
    public static final int pref_proximity_key=0x7f1002f7;
    public static final int pref_punctuation_key=0x7f1002f8;
    public static final int pref_punctuation_summary_off=0x7f1002f9;
    public static final int pref_punctuation_summary_on=0x7f1002fa;
    public static final int pref_punctuation_title=0x7f1002fb;
    public static final int pref_reduce_window_delay_key=0x7f1002fc;
    public static final int pref_reduce_window_delay_title=0x7f1002fd;
    public static final int pref_reset_gesture_settings_key=0x7f1002fe;
    public static final int pref_reset_keymap_key=0x7f1002ff;
    public static final int pref_resume_talkback_default=0x7f100300;
    public static final int pref_resume_talkback_key=0x7f100301;
    public static final int pref_screenoff_key=0x7f100302;
    public static final int pref_select_keymap_key=0x7f100303;
    public static final int pref_selector_activation_key=0x7f100304;
    public static final int pref_selector_audio_focus_key=0x7f100305;
    public static final int pref_selector_category_settings_key=0x7f100306;
    public static final int pref_selector_change_a11y_volume_key=0x7f100307;
    public static final int pref_selector_first_time_activation_key=0x7f100308;
    public static final int pref_selector_granularity_characters_key=0x7f100309;
    public static final int pref_selector_granularity_controls_key=0x7f10030a;
    public static final int pref_selector_granularity_headings_key=0x7f10030b;
    public static final int pref_selector_granularity_key=0x7f10030c;
    public static final int pref_selector_granularity_landmarks_key=0x7f10030d;
    public static final int pref_selector_granularity_lines_key=0x7f10030e;
    public static final int pref_selector_granularity_links_key=0x7f10030f;
    public static final int pref_selector_granularity_paragraphs_key=0x7f100310;
    public static final int pref_selector_granularity_words_key=0x7f100311;
    public static final int pref_selector_hide_screen_key=0x7f100312;
    public static final int pref_selector_language_key=0x7f100313;
    public static final int pref_selector_punctuation_key=0x7f100314;
    public static final int pref_selector_saved_gesture_suffix=0x7f100315;
    public static final int pref_selector_scroll_seq_key=0x7f100316;
    public static final int pref_selector_setting_default=0x7f100317;
    public static final int pref_selector_special_widget_index_key=0x7f100318;
    public static final int pref_selector_special_widget_key=0x7f100319;
    public static final int pref_selector_speech_rate_key=0x7f10031a;
    public static final int pref_selector_summary=0x7f10031b;
    public static final int pref_selector_summary_key=0x7f10031c;
    public static final int pref_selector_summary_two_select_gesture=0x7f10031d;
    public static final int pref_selector_verbosity_key=0x7f10031e;
    public static final int pref_shake_to_read_key=0x7f10031f;
    public static final int pref_shake_to_read_threshold_conversion_default=0x7f100320;
    public static final int pref_shake_to_read_threshold_default=0x7f100321;
    public static final int pref_shake_to_read_threshold_key=0x7f100322;
    public static final int pref_shortcut_2finger_1tap_default=0x7f100323;
    public static final int pref_shortcut_2finger_1tap_key=0x7f100324;
    public static final int pref_shortcut_2finger_2tap_default=0x7f100325;
    public static final int pref_shortcut_2finger_2tap_hold_default=0x7f100326;
    public static final int pref_shortcut_2finger_2tap_hold_key=0x7f100327;
    public static final int pref_shortcut_2finger_2tap_key=0x7f100328;
    public static final int pref_shortcut_2finger_3tap_default=0x7f100329;
    public static final int pref_shortcut_2finger_3tap_key=0x7f10032a;
    public static final int pref_shortcut_2finger_swipe_down_default=0x7f10032b;
    public static final int pref_shortcut_2finger_swipe_down_key=0x7f10032c;
    public static final int pref_shortcut_2finger_swipe_left_default=0x7f10032d;
    public static final int pref_shortcut_2finger_swipe_left_key=0x7f10032e;
    public static final int pref_shortcut_2finger_swipe_right_default=0x7f10032f;
    public static final int pref_shortcut_2finger_swipe_right_key=0x7f100330;
    public static final int pref_shortcut_2finger_swipe_up_default=0x7f100331;
    public static final int pref_shortcut_2finger_swipe_up_key=0x7f100332;
    public static final int pref_shortcut_3finger_1tap_default=0x7f100333;
    public static final int pref_shortcut_3finger_1tap_key=0x7f100334;
    public static final int pref_shortcut_3finger_2tap_default=0x7f100335;
    public static final int pref_shortcut_3finger_2tap_hold_default=0x7f100336;
    public static final int pref_shortcut_3finger_2tap_hold_key=0x7f100337;
    public static final int pref_shortcut_3finger_2tap_key=0x7f100338;
    public static final int pref_shortcut_3finger_3tap_default=0x7f100339;
    public static final int pref_shortcut_3finger_3tap_key=0x7f10033a;
    public static final int pref_shortcut_3finger_swipe_down_default=0x7f10033b;
    public static final int pref_shortcut_3finger_swipe_down_key=0x7f10033c;
    public static final int pref_shortcut_3finger_swipe_left_default=0x7f10033d;
    public static final int pref_shortcut_3finger_swipe_left_key=0x7f10033e;
    public static final int pref_shortcut_3finger_swipe_right_default=0x7f10033f;
    public static final int pref_shortcut_3finger_swipe_right_key=0x7f100340;
    public static final int pref_shortcut_3finger_swipe_up_default=0x7f100341;
    public static final int pref_shortcut_3finger_swipe_up_key=0x7f100342;
    public static final int pref_shortcut_4finger_1tap_default=0x7f100343;
    public static final int pref_shortcut_4finger_1tap_key=0x7f100344;
    public static final int pref_shortcut_4finger_2tap_default=0x7f100345;
    public static final int pref_shortcut_4finger_2tap_hold_default=0x7f100346;
    public static final int pref_shortcut_4finger_2tap_hold_key=0x7f100347;
    public static final int pref_shortcut_4finger_2tap_key=0x7f100348;
    public static final int pref_shortcut_4finger_3tap_default=0x7f100349;
    public static final int pref_shortcut_4finger_3tap_key=0x7f10034a;
    public static final int pref_shortcut_4finger_swipe_down_default=0x7f10034b;
    public static final int pref_shortcut_4finger_swipe_down_key=0x7f10034c;
    public static final int pref_shortcut_4finger_swipe_left_default=0x7f10034d;
    public static final int pref_shortcut_4finger_swipe_left_key=0x7f10034e;
    public static final int pref_shortcut_4finger_swipe_right_default=0x7f10034f;
    public static final int pref_shortcut_4finger_swipe_right_key=0x7f100350;
    public static final int pref_shortcut_4finger_swipe_up_default=0x7f100351;
    public static final int pref_shortcut_4finger_swipe_up_key=0x7f100352;
    public static final int pref_shortcut_double_tap_default=0x7f100353;
    public static final int pref_shortcut_double_tap_key=0x7f100354;
    public static final int pref_shortcut_down_and_left_default=0x7f100355;
    public static final int pref_shortcut_down_and_left_key=0x7f100356;
    public static final int pref_shortcut_down_and_right_default=0x7f100357;
    public static final int pref_shortcut_down_and_right_key=0x7f100358;
    public static final int pref_shortcut_down_and_up_default=0x7f100359;
    public static final int pref_shortcut_down_and_up_key=0x7f10035a;
    public static final int pref_shortcut_down_default=0x7f10035b;
    public static final int pref_shortcut_down_key=0x7f10035c;
    public static final int pref_shortcut_fingerprint_down_default=0x7f10035d;
    public static final int pref_shortcut_fingerprint_down_key=0x7f10035e;
    public static final int pref_shortcut_fingerprint_left_default=0x7f10035f;
    public static final int pref_shortcut_fingerprint_left_key=0x7f100360;
    public static final int pref_shortcut_fingerprint_right_default=0x7f100361;
    public static final int pref_shortcut_fingerprint_right_key=0x7f100362;
    public static final int pref_shortcut_fingerprint_up_default=0x7f100363;
    public static final int pref_shortcut_fingerprint_up_key=0x7f100364;
    public static final int pref_shortcut_left_and_down_default=0x7f100365;
    public static final int pref_shortcut_left_and_down_key=0x7f100366;
    public static final int pref_shortcut_left_and_right_default=0x7f100367;
    public static final int pref_shortcut_left_and_right_key=0x7f100368;
    public static final int pref_shortcut_left_and_up_default=0x7f100369;
    public static final int pref_shortcut_left_and_up_key=0x7f10036a;
    public static final int pref_shortcut_left_default=0x7f10036b;
    public static final int pref_shortcut_left_key=0x7f10036c;
    public static final int pref_shortcut_right_and_down_default=0x7f10036d;
    public static final int pref_shortcut_right_and_down_key=0x7f10036e;
    public static final int pref_shortcut_right_and_left_default=0x7f10036f;
    public static final int pref_shortcut_right_and_left_key=0x7f100370;
    public static final int pref_shortcut_right_and_up_default=0x7f100371;
    public static final int pref_shortcut_right_and_up_key=0x7f100372;
    public static final int pref_shortcut_right_default=0x7f100373;
    public static final int pref_shortcut_right_key=0x7f100374;
    public static final int pref_shortcut_single_tap_default=0x7f100375;
    public static final int pref_shortcut_single_tap_key=0x7f100376;
    public static final int pref_shortcut_up_and_down_default=0x7f100377;
    public static final int pref_shortcut_up_and_down_key=0x7f100378;
    public static final int pref_shortcut_up_and_left_default=0x7f100379;
    public static final int pref_shortcut_up_and_left_key=0x7f10037a;
    public static final int pref_shortcut_up_and_right_default=0x7f10037b;
    public static final int pref_shortcut_up_and_right_key=0x7f10037c;
    public static final int pref_shortcut_up_default=0x7f10037d;
    public static final int pref_shortcut_up_key=0x7f10037e;
    public static final int pref_show_context_menu_audio_ducking_setting_key=0x7f10037f;
    public static final int pref_show_context_menu_contextual_actions_category_key=0x7f100380;
    public static final int pref_show_context_menu_copy_last_spoken_phrase_setting_key=0x7f100381;
    public static final int pref_show_context_menu_custom_action_setting_key=0x7f100382;
    public static final int pref_show_context_menu_dim_or_brighten_setting_key=0x7f100383;
    public static final int pref_show_context_menu_editing_setting_key=0x7f100384;
    public static final int pref_show_context_menu_find_on_screen_setting_key=0x7f100385;
    public static final int pref_show_context_menu_granularity_detail_setting_key=0x7f100386;
    public static final int pref_show_context_menu_granularity_setting_key=0x7f100387;
    public static final int pref_show_context_menu_labeling_setting_key=0x7f100388;
    public static final int pref_show_context_menu_language_setting_key=0x7f100389;
    public static final int pref_show_context_menu_links_setting_key=0x7f10038a;
    public static final int pref_show_context_menu_navigation_category_key=0x7f10038b;
    public static final int pref_show_context_menu_others_category_key=0x7f10038c;
    public static final int pref_show_context_menu_page_navigation_setting_key=0x7f10038d;
    public static final int pref_show_context_menu_pause_feedback_setting_key=0x7f10038e;
    public static final int pref_show_context_menu_read_from_current_setting_key=0x7f10038f;
    public static final int pref_show_context_menu_read_from_top_setting_key=0x7f100390;
    public static final int pref_show_context_menu_reading_control_category_key=0x7f100391;
    public static final int pref_show_context_menu_repeat_last_spoken_phrase_setting_key=0x7f100392;
    public static final int pref_show_context_menu_sound_feedback_setting_key=0x7f100393;
    public static final int pref_show_context_menu_special_features_category_key=0x7f100394;
    public static final int pref_show_context_menu_spell_last_spoken_phrase_setting_key=0x7f100395;
    public static final int pref_show_context_menu_system_action_setting_key=0x7f100396;
    public static final int pref_show_context_menu_talkback_settings_setting_key=0x7f100397;
    public static final int pref_show_context_menu_tts_settings_setting_key=0x7f100398;
    public static final int pref_show_context_menu_verbosity_setting_key=0x7f100399;
    public static final int pref_show_context_menu_vibration_feedback_setting_key=0x7f10039a;
    public static final int pref_show_context_menu_voice_commands_setting_key=0x7f10039b;
    public static final int pref_show_continuous_reading_mode_dialog=0x7f10039c;
    public static final int pref_show_dim_screen_confirmation_dialog=0x7f10039d;
    public static final int pref_show_navigation_menu_characters_setting_key=0x7f10039e;
    public static final int pref_show_navigation_menu_controls_setting_key=0x7f10039f;
    public static final int pref_show_navigation_menu_granularity_default_setting_key=0x7f1003a0;
    public static final int pref_show_navigation_menu_headings_setting_key=0x7f1003a1;
    public static final int pref_show_navigation_menu_landmarks_setting_key=0x7f1003a2;
    public static final int pref_show_navigation_menu_lines_setting_key=0x7f1003a3;
    public static final int pref_show_navigation_menu_links_setting_key=0x7f1003a4;
    public static final int pref_show_navigation_menu_other_web_navigation_setting_key=0x7f1003a5;
    public static final int pref_show_navigation_menu_paragraphs_setting_key=0x7f1003a6;
    public static final int pref_show_navigation_menu_special_content_setting_key=0x7f1003a7;
    public static final int pref_show_navigation_menu_words_setting_key=0x7f1003a8;
    public static final int pref_show_pass_through_mode_dialog=0x7f1003a9;
    public static final int pref_show_selector_menu_reading_control_category_key=0x7f1003aa;
    public static final int pref_show_selector_menu_special_features_category_key=0x7f1003ab;
    public static final int pref_show_suspension_confirmation_dialog=0x7f1003ac;
    public static final int pref_show_tos_key=0x7f1003ad;
    public static final int pref_show_voice_command_dialog=0x7f1003ae;
    public static final int pref_single_tap_key=0x7f1003af;
    public static final int pref_sound_and_vibration_key=0x7f1003b0;
    public static final int pref_soundback_key=0x7f1003b1;
    public static final int pref_soundback_volume_default=0x7f1003b2;
    public static final int pref_soundback_volume_key=0x7f1003b3;
    public static final int pref_speak_container_element_positions_key=0x7f1003b4;
    public static final int pref_speak_container_element_positions_summaryOff=0x7f1003b5;
    public static final int pref_speak_container_element_positions_summaryOn=0x7f1003b6;
    public static final int pref_speak_container_element_positions_title=0x7f1003b7;
    public static final int pref_speak_element_ids_key=0x7f1003b8;
    public static final int pref_speak_passwords_without_headphones=0x7f1003b9;
    public static final int pref_speak_roles_key=0x7f1003ba;
    public static final int pref_speak_roles_summary_off=0x7f1003bb;
    public static final int pref_speak_roles_summary_on=0x7f1003bc;
    public static final int pref_speak_roles_title=0x7f1003bd;
    public static final int pref_speech_pitch_default=0x7f1003be;
    public static final int pref_speech_pitch_key=0x7f1003bf;
    public static final int pref_speech_rate_default=0x7f1003c0;
    public static final int pref_speech_rate_key=0x7f1003c1;
    public static final int pref_speech_volume_default=0x7f1003c2;
    public static final int pref_speech_volume_key=0x7f1003c3;
    public static final int pref_suspended=0x7f1003c4;
    public static final int pref_tree_debug_key=0x7f1003c5;
    public static final int pref_tree_debug_reflect_key=0x7f1003c6;
    public static final int pref_tts_overlay_key=0x7f1003c7;
    public static final int pref_tts_settings_key=0x7f1003c8;
    public static final int pref_tutorial_entry_point_key=0x7f1003c9;
    public static final int pref_tutorial_key=0x7f1003ca;
    public static final int pref_two_part_vertical_gestures_key=0x7f1003cb;
    public static final int pref_two_volume_long_press_key=0x7f1003cc;
    public static final int pref_update_multi_finger_gestures_shown_key=0x7f1003cd;
    public static final int pref_update_talkback91_shown_key=0x7f1003ce;
    public static final int pref_use_audio_focus_key=0x7f1003cf;
    public static final int pref_vendor_overrides_processed=0x7f1003d0;
    public static final int pref_verbose_scroll_announcement_key=0x7f1003d1;
    public static final int pref_verbosity_category_misc_settings_title=0x7f1003d2;
    public static final int pref_verbosity_category_preset_settings_key=0x7f1003d3;
    public static final int pref_verbosity_category_preset_settings_title=0x7f1003d4;
    public static final int pref_verbosity_key=0x7f1003d5;
    public static final int pref_verbosity_preset_change=0x7f1003d6;
    public static final int pref_verbosity_preset_entry_custom=0x7f1003d7;
    public static final int pref_verbosity_preset_entry_high=0x7f1003d8;
    public static final int pref_verbosity_preset_entry_low=0x7f1003d9;
    public static final int pref_verbosity_preset_key=0x7f1003da;
    public static final int pref_verbosity_preset_title=0x7f1003db;
    public static final int pref_verbosity_preset_value_custom=0x7f1003dc;
    public static final int pref_verbosity_preset_value_default=0x7f1003dd;
    public static final int pref_verbosity_preset_value_high=0x7f1003de;
    public static final int pref_verbosity_preset_value_low=0x7f1003df;
    public static final int pref_verbosity_title=0x7f1003e0;
    public static final int pref_version_code_key=0x7f1003e1;
    public static final int pref_vibration_key=0x7f1003e2;
    public static final int pref_web_scripts_key=0x7f1003e3;
    public static final int preference_copied=0x7f1003e4;
    public static final int punctuation_state=0x7f1003e5;
    public static final int read_by_character_text=0x7f1003e6;
    public static final int read_by_character_text_pre_r=0x7f1003e7;
    public static final int read_by_character_title=0x7f1003e8;
    public static final int read_out_deleted=0x7f1003e9;
    public static final int reading_navigation_link_subtext=0x7f1003ea;
    public static final int reading_navigation_link_text=0x7f1003eb;
    public static final int remaining_calibration_finish_announcement=0x7f1003ec;
    public static final int reminder_announcement=0x7f1003ed;
    public static final int report_gesture_description=0x7f1003ee;
    public static final int reset_button_in_reset_gesture_settings_confirm_dialog=0x7f1003ef;
    public static final int reset_button_in_reset_keymap_confirm_dialog=0x7f1003f0;
    public static final int reset_gesture_settings_title=0x7f1003f1;
    public static final int reset_user_language_preference=0x7f1003f2;
    public static final int result_swipe_down_2_fingers=0x7f1003f3;
    public static final int result_swipe_down_3_fingers=0x7f1003f4;
    public static final int result_swipe_left=0x7f1003f5;
    public static final int result_swipe_right=0x7f1003f6;
    public static final int resume_screen_keyguard=0x7f1003f7;
    public static final int resume_screen_manual=0x7f1003f8;
    public static final int resume_screen_on=0x7f1003f9;
    public static final int revert_imported_labels=0x7f1003fa;
    public static final int rotate_orientation_announcement=0x7f1003fb;
    public static final int rotate_orientation_continue_announcement=0x7f1003fc;
    public static final int rotate_orientation_description_1=0x7f1003fd;
    public static final int rotate_orientation_description_2=0x7f1003fe;
    public static final int rotate_orientation_inactive_announcement=0x7f1003ff;
    public static final int row_heading_template=0x7f100400;
    public static final int row_index_template=0x7f100401;
    public static final int screen_away=0x7f100402;
    public static final int screen_away_detail=0x7f100403;
    public static final int screen_brightness_restored=0x7f100404;
    public static final int screen_dimmed=0x7f100405;
    public static final int screen_dimming_exit_instruction_line1=0x7f100406;
    public static final int screen_dimming_exit_instruction_line2=0x7f100407;
    public static final int screen_magnification_off=0x7f100408;
    public static final int scrolling_text=0x7f100409;
    public static final int scrolling_title=0x7f10040a;
    public static final int search_dialog_label=0x7f10040b;
    public static final int search_menu_title=0x7f10040c;
    public static final int search_mode_cancel=0x7f10040d;
    public static final int search_mode_hint_no_query=0x7f10040e;
    public static final int search_mode_hint_no_selection=0x7f10040f;
    public static final int search_mode_hint_query=0x7f100410;
    public static final int search_mode_hint_selection=0x7f100411;
    public static final int select_setting_hint=0x7f100412;
    public static final int selecting_text_text=0x7f100413;
    public static final int selecting_text_text_pre_r=0x7f100414;
    public static final int selecting_text_title=0x7f100415;
    public static final int selecting_text_with_talkback_menu=0x7f100416;
    public static final int selecting_text_with_talkback_menu_pre_r=0x7f100417;
    public static final int selector_a11y_volume_change=0x7f100418;
    public static final int selector_audio_focus=0x7f100419;
    public static final int selector_audio_focus_output=0x7f10041a;
    public static final int selector_granularity=0x7f10041b;
    public static final int selector_granularity_characters=0x7f10041c;
    public static final int selector_granularity_controls=0x7f10041d;
    public static final int selector_granularity_headings=0x7f10041e;
    public static final int selector_granularity_landmarks=0x7f10041f;
    public static final int selector_granularity_lines=0x7f100420;
    public static final int selector_granularity_links=0x7f100421;
    public static final int selector_granularity_output=0x7f100422;
    public static final int selector_granularity_paragraphs=0x7f100423;
    public static final int selector_granularity_words=0x7f100424;
    public static final int selector_hide_screen=0x7f100425;
    public static final int selector_language=0x7f100426;
    public static final int selector_punctuation=0x7f100427;
    public static final int selector_scroll_seq=0x7f100428;
    public static final int selector_special_widget=0x7f100429;
    public static final int selector_speech_rate=0x7f10042a;
    public static final int selector_speech_rate_output=0x7f10042b;
    public static final int selector_verbosity=0x7f10042c;
    public static final int selector_verbosity_output=0x7f10042d;
    public static final int set_granularity_fail=0x7f10042e;
    public static final int set_up_braille_keyboard=0x7f10042f;
    public static final int setting_selector_heading=0x7f100430;
    public static final int setting_selector_text=0x7f100431;
    public static final int setting_selector_text_pre_r=0x7f100432;
    public static final int settings_manager_market_uri=0x7f100433;
    public static final int shortcut_2finger_passthrough=0x7f100434;
    public static final int shortcut_a11y_button=0x7f100435;
    public static final int shortcut_a11y_button_long_press=0x7f100436;
    public static final int shortcut_all_apps=0x7f100437;
    public static final int shortcut_back=0x7f100438;
    public static final int shortcut_braille_keyboard=0x7f100439;
    public static final int shortcut_copy_last_utterance_to_clipboard=0x7f10043a;
    public static final int shortcut_disable_dimming=0x7f10043b;
    public static final int shortcut_editing=0x7f10043c;
    public static final int shortcut_enable_dimming=0x7f10043d;
    public static final int shortcut_first_in_screen=0x7f10043e;
    public static final int shortcut_home=0x7f100440;
    public static final int shortcut_last_in_screen=0x7f100441;
    public static final int shortcut_media_control=0x7f100442;
    public static final int shortcut_next=0x7f100443;
    public static final int shortcut_next_granularity=0x7f100444;
    public static final int shortcut_not_customizable=0x7f100445;
    public static final int shortcut_notifications=0x7f100446;
    public static final int shortcut_overview=0x7f100447;
    public static final int shortcut_pass_through_next=0x7f100448;
    public static final int shortcut_pause_feedback=0x7f100449;
    public static final int shortcut_pause_or_resume_feedback=0x7f10044a;
    public static final int shortcut_perform_click_action=0x7f10044b;
    public static final int shortcut_perform_long_click_action=0x7f10044c;
    public static final int shortcut_perform_screen_search=0x7f10044d;
    public static final int shortcut_practice_gestures=0x7f10044e;
    public static final int shortcut_previous=0x7f10044f;
    public static final int shortcut_previous_granularity=0x7f100450;
    public static final int shortcut_print_node_tree=0x7f100451;
    public static final int shortcut_print_performance_stats=0x7f100452;
    public static final int shortcut_quick_settings=0x7f100453;
    public static final int shortcut_read_from_current=0x7f100454;
    public static final int shortcut_read_from_top=0x7f100455;
    public static final int shortcut_repeat_last_utterance=0x7f100456;
    public static final int shortcut_report_gesture=0x7f100457;
    public static final int shortcut_scroll_back=0x7f100458;
    public static final int shortcut_scroll_down=0x7f100459;
    public static final int shortcut_scroll_forward=0x7f10045a;
    public static final int shortcut_scroll_left=0x7f10045b;
    public static final int shortcut_scroll_right=0x7f10045c;
    public static final int shortcut_scroll_up=0x7f10045d;
    public static final int shortcut_select_next_setting=0x7f10045e;
    public static final int shortcut_select_previous_setting=0x7f10045f;
    public static final int shortcut_selected_setting_next_action=0x7f100460;
    public static final int shortcut_selected_setting_previous_action=0x7f100461;
    public static final int shortcut_show_custom_actions=0x7f100462;
    public static final int shortcut_show_language_options=0x7f100463;
    public static final int shortcut_spell_last_utterance=0x7f100464;
    public static final int shortcut_summary=0x7f100465;
    public static final int shortcut_talkback_breakout=0x7f100466;
    public static final int shortcut_title_basic_navigation=0x7f100467;
    public static final int shortcut_title_menu_control=0x7f100468;
    public static final int shortcut_title_reading_control=0x7f100469;
    public static final int shortcut_title_special_features=0x7f10046a;
    public static final int shortcut_title_system_actions=0x7f10046b;
    public static final int shortcut_title_text_editing=0x7f10046c;
    public static final int shortcut_toggle_headphone_navigation=0x7f10046d;
    public static final int shortcut_toggle_voice_feedback=0x7f10046e;
    public static final int shortcut_tutorial=0x7f10046f;
    public static final int shortcut_unassigned=0x7f100470;
    public static final int shortcut_value_a11y_button=0x7f100471;
    public static final int shortcut_value_a11y_button_long_press=0x7f100472;
    public static final int shortcut_value_all_apps=0x7f100473;
    public static final int shortcut_value_back=0x7f100474;
    public static final int shortcut_value_braille_keyboard=0x7f100475;
    public static final int shortcut_value_copy=0x7f100476;
    public static final int shortcut_value_cut=0x7f100477;
    public static final int shortcut_value_editing=0x7f100478;
    public static final int shortcut_value_first_in_screen=0x7f100479;
    public static final int shortcut_value_headphone_navigation=0x7f10047a;
    public static final int shortcut_value_home=0x7f10047b;
    public static final int shortcut_value_last_in_screen=0x7f10047c;
    public static final int shortcut_value_local_breakout=0x7f10047d;
    public static final int shortcut_value_media_control=0x7f10047e;
    public static final int shortcut_value_next=0x7f10047f;
    public static final int shortcut_value_next_granularity=0x7f100480;
    public static final int shortcut_value_notifications=0x7f100481;
    public static final int shortcut_value_overview=0x7f100482;
    public static final int shortcut_value_pass_through_next_gesture=0x7f100483;
    public static final int shortcut_value_paste=0x7f100484;
    public static final int shortcut_value_pause_or_resume_feedback=0x7f100485;
    public static final int shortcut_value_perform_click_action=0x7f100486;
    public static final int shortcut_value_perform_long_click_action=0x7f100487;
    public static final int shortcut_value_practice_gestures=0x7f100488;
    public static final int shortcut_value_previous=0x7f100489;
    public static final int shortcut_value_previous_granularity=0x7f10048a;
    public static final int shortcut_value_print_node_tree=0x7f10048b;
    public static final int shortcut_value_print_performance_stats=0x7f10048c;
    public static final int shortcut_value_quick_settings=0x7f10048d;
    public static final int shortcut_value_read_from_current=0x7f10048e;
    public static final int shortcut_value_read_from_top=0x7f10048f;
    public static final int shortcut_value_report_gesture=0x7f100490;
    public static final int shortcut_value_screen_search=0x7f100491;
    public static final int shortcut_value_scroll_back=0x7f100492;
    public static final int shortcut_value_scroll_down=0x7f100493;
    public static final int shortcut_value_scroll_forward=0x7f100494;
    public static final int shortcut_value_scroll_left=0x7f100495;
    public static final int shortcut_value_scroll_right=0x7f100496;
    public static final int shortcut_value_scroll_up=0x7f100497;
    public static final int shortcut_value_select_next_setting=0x7f100498;
    public static final int shortcut_value_select_previous_setting=0x7f100499;
    public static final int shortcut_value_selected_setting_next_action=0x7f10049a;
    public static final int shortcut_value_selected_setting_previous_action=0x7f10049b;
    public static final int shortcut_value_show_custom_actions=0x7f10049c;
    public static final int shortcut_value_show_language_options=0x7f10049d;
    public static final int shortcut_value_start_selection_mode=0x7f10049e;
    public static final int shortcut_value_summary=0x7f10049f;
    public static final int shortcut_value_talkback_breakout=0x7f1004a0;
    public static final int shortcut_value_toggle_voice_feedback=0x7f1004a1;
    public static final int shortcut_value_tutorial=0x7f1004a2;
    public static final int shortcut_value_unassigned=0x7f1004a3;
    public static final int shortcut_value_voice_commands=0x7f1004a4;
    public static final int shortcut_voice_commands=0x7f1004a5;
    public static final int show_keyboard_window=0x7f1004a6;
    public static final int show_suspend_warning_label=0x7f1004a7;
    public static final int side_tap_shortcuts_removed_details=0x7f1004a8;
    public static final int six_hold_announcement=0x7f1004a9;
    public static final int sound_feedback_state=0x7f1004aa;
    public static final int speech_rate_change=0x7f1004ab;
    public static final int spoken_language=0x7f1004ac;
    public static final int spokenfeedback_disabled=0x7f1004ad;
    public static final int spokenfeedback_on=0x7f1004ae;
    public static final int spokenfeedback_resumed=0x7f1004af;
    public static final int spokenfeedback_suspended=0x7f1004b0;
    public static final int start_of_page=0x7f1004b1;
    public static final int start_voice_command=0x7f1004b2;
    public static final int status_bar=0x7f1004b3;
    public static final int status_bar_notification_info_overflow=0x7f1004b4;
    public static final int stay_in_tutorial_button=0x7f1004b5;
    public static final int summaryOff_pref_a11y_hints=0x7f1004b6;
    public static final int summaryOff_pref_intonation=0x7f1004b7;
    public static final int summaryOff_pref_phonetic_letters=0x7f1004b8;
    public static final int summaryOff_pref_proximity=0x7f1004b9;
    public static final int summaryOff_pref_speak_element_ids=0x7f1004ba;
    public static final int summaryOff_pref_speak_passwords_without_headphones=0x7f1004bb;
    public static final int summaryOff_pref_speak_screenoff=0x7f1004bc;
    public static final int summaryOff_pref_verbose_scroll_announcement=0x7f1004bd;
    public static final int summaryOn_pref_a11y_hints=0x7f1004be;
    public static final int summaryOn_pref_intonation=0x7f1004bf;
    public static final int summaryOn_pref_phonetic_letters=0x7f1004c0;
    public static final int summaryOn_pref_proximity=0x7f1004c1;
    public static final int summaryOn_pref_speak_element_ids=0x7f1004c2;
    public static final int summaryOn_pref_speak_passwords_without_headphones=0x7f1004c3;
    public static final int summaryOn_pref_speak_screenoff=0x7f1004c4;
    public static final int summaryOn_pref_verbose_scroll_announcement=0x7f1004c5;
    public static final int summary_adjust_slider=0x7f1004c6;
    public static final int summary_audio_ducking=0x7f1004c7;
    public static final int summary_characters=0x7f1004c8;
    public static final int summary_collapsed_preference_list=0x7f1004c9;
    public static final int summary_context_menu_links=0x7f1004ca;
    public static final int summary_controls=0x7f1004cb;
    public static final int summary_copy_last_spoken_phrase=0x7f1004cc;
    public static final int summary_custom_action=0x7f1004cd;
    public static final int summary_edittext_controls=0x7f1004ce;
    public static final int summary_granularity=0x7f1004cf;
    public static final int summary_granularity_default=0x7f1004d0;
    public static final int summary_headings=0x7f1004d1;
    public static final int summary_hide_screen=0x7f1004d2;
    public static final int summary_labeling_controls=0x7f1004d3;
    public static final int summary_landmarks=0x7f1004d4;
    public static final int summary_language=0x7f1004d5;
    public static final int summary_lines=0x7f1004d6;
    public static final int summary_links=0x7f1004d7;
    public static final int summary_other_web_navigation=0x7f1004d8;
    public static final int summary_paragraphs=0x7f1004d9;
    public static final int summary_pause_feedback=0x7f1004da;
    public static final int summary_perform_screen_search=0x7f1004db;
    public static final int summary_pref_accumulate_presses=0x7f1004dc;
    public static final int summary_pref_play_store=0x7f1004dd;
    public static final int summary_pref_reverse_dots=0x7f1004de;
    public static final int summary_pref_single_tap=0x7f1004df;
    public static final int summary_pref_tree_debug_tv=0x7f1004e0;
    public static final int summary_pref_use_audio_focus=0x7f1004e1;
    public static final int summary_read_from_current=0x7f1004e2;
    public static final int summary_read_from_top=0x7f1004e3;
    public static final int summary_repeat_last_spoken_phrase=0x7f1004e4;
    public static final int summary_selector_menu_punctuation=0x7f1004e5;
    public static final int summary_selector_menu_verbosity=0x7f1004e6;
    public static final int summary_show_hide_screen=0x7f1004e7;
    public static final int summary_sound_feedback=0x7f1004e8;
    public static final int summary_special_content=0x7f1004e9;
    public static final int summary_speech_rate=0x7f1004ea;
    public static final int summary_spell_last_spoken_phrase=0x7f1004eb;
    public static final int summary_support_change_a11y_volume=0x7f1004ec;
    public static final int summary_support_scroll_seq=0x7f1004ed;
    public static final int summary_system_actions=0x7f1004ee;
    public static final int summary_talkback_preferences=0x7f1004ef;
    public static final int summary_tts_settings=0x7f1004f0;
    public static final int summary_vibration_feedback=0x7f1004f1;
    public static final int summary_viewpager_controls=0x7f1004f2;
    public static final int summary_voice_commands=0x7f1004f3;
    public static final int summary_words=0x7f1004f4;
    public static final int survey_closed=0x7f1004f5;
    public static final int swipe_down_2_fingers_announcement=0x7f1004f6;
    public static final int swipe_down_2_fingers_completed_announcement=0x7f1004f7;
    public static final int swipe_down_3_fingers_announcement=0x7f1004f8;
    public static final int swipe_down_3_fingers_completed_announcement=0x7f1004f9;
    public static final int swipe_left_action_result_announcement=0x7f1004fa;
    public static final int swipe_left_announcement=0x7f1004fb;
    public static final int swipe_right_announcement=0x7f1004fc;
    public static final int swipe_up_3_fingers_announcement=0x7f1004fd;
    public static final int switch_to_braille_keyboard_failure_msg=0x7f1004fe;
    public static final int switch_to_screen_away_announcement=0x7f1004ff;
    public static final int switch_to_tabletop_announcement=0x7f100500;
    public static final int switched_to_contracted_announcement=0x7f100501;
    public static final int switched_to_ueb_uncontracted_announcement=0x7f100502;
    public static final int switched_to_uncontracted_announcement=0x7f100503;
    public static final int symbol_almost_equals=0x7f100504;
    public static final int symbol_ampersand=0x7f100505;
    public static final int symbol_angle_bracket_left=0x7f100506;
    public static final int symbol_angle_bracket_right=0x7f100507;
    public static final int symbol_apostrophe=0x7f100508;
    public static final int symbol_approximately_equals=0x7f100509;
    public static final int symbol_asterisk=0x7f10050a;
    public static final int symbol_at_sign=0x7f10050b;
    public static final int symbol_backslash=0x7f10050c;
    public static final int symbol_beamed_sixteenth_note=0x7f10050d;
    public static final int symbol_black_circle=0x7f10050e;
    public static final int symbol_black_heart=0x7f10050f;
    public static final int symbol_black_smallsquare=0x7f100510;
    public static final int symbol_black_square=0x7f100511;
    public static final int symbol_black_star=0x7f100512;
    public static final int symbol_black_suit_of_diamonds=0x7f100513;
    public static final int symbol_black_triangle_pointing_down=0x7f100514;
    public static final int symbol_black_triangle_pointing_up=0x7f100515;
    public static final int symbol_broken_bar=0x7f100516;
    public static final int symbol_bullet=0x7f100517;
    public static final int symbol_bullseye=0x7f100518;
    public static final int symbol_caret=0x7f100519;
    public static final int symbol_celsius_degree=0x7f10051a;
    public static final int symbol_cent=0x7f10051b;
    public static final int symbol_circle_left_half_black=0x7f10051c;
    public static final int symbol_circle_right_half_black=0x7f10051d;
    public static final int symbol_colon=0x7f10051e;
    public static final int symbol_comma=0x7f10051f;
    public static final int symbol_copyright=0x7f100520;
    public static final int symbol_curly_bracket_left=0x7f100521;
    public static final int symbol_curly_bracket_right=0x7f100522;
    public static final int symbol_currency_sign=0x7f100523;
    public static final int symbol_damma=0x7f100524;
    public static final int symbol_dammatan=0x7f100525;
    public static final int symbol_degree=0x7f100526;
    public static final int symbol_division=0x7f100527;
    public static final int symbol_dollar_sign=0x7f100528;
    public static final int symbol_downwards_arrow=0x7f100529;
    public static final int symbol_eighth_note=0x7f10052a;
    public static final int symbol_ellipsis=0x7f10052b;
    public static final int symbol_em_dash=0x7f10052c;
    public static final int symbol_en_dash=0x7f10052d;
    public static final int symbol_equal=0x7f10052e;
    public static final int symbol_euro=0x7f10052f;
    public static final int symbol_exclamation_mark=0x7f100530;
    public static final int symbol_fahrenheit_degree=0x7f100531;
    public static final int symbol_fatha=0x7f100532;
    public static final int symbol_fathatan=0x7f100533;
    public static final int symbol_female=0x7f100534;
    public static final int symbol_full_width_ampersand=0x7f100535;
    public static final int symbol_full_width_asterisk=0x7f100536;
    public static final int symbol_full_width_circumflex=0x7f100537;
    public static final int symbol_full_width_colon=0x7f100538;
    public static final int symbol_full_width_comma=0x7f100539;
    public static final int symbol_full_width_exclamation_mark=0x7f10053a;
    public static final int symbol_full_width_greater_than_sign=0x7f10053b;
    public static final int symbol_full_width_ideographic_full_stop=0x7f10053c;
    public static final int symbol_full_width_left_curly_bracket=0x7f10053d;
    public static final int symbol_full_width_left_parenthesis=0x7f10053e;
    public static final int symbol_full_width_less_than_sign=0x7f10053f;
    public static final int symbol_full_width_question_mark=0x7f100540;
    public static final int symbol_full_width_right_curly_bracket=0x7f100541;
    public static final int symbol_full_width_right_parenthesis=0x7f100542;
    public static final int symbol_full_width_semicolon=0x7f100543;
    public static final int symbol_full_width_tilde=0x7f100544;
    public static final int symbol_full_width_underscore=0x7f100545;
    public static final int symbol_grave_accent=0x7f100546;
    public static final int symbol_halfwidth_katakana_middle_dot=0x7f100547;
    public static final int symbol_hyphen_minus=0x7f100548;
    public static final int symbol_ideographic_comma=0x7f100549;
    public static final int symbol_integral=0x7f10054a;
    public static final int symbol_inverted_exclamation_mark=0x7f10054b;
    public static final int symbol_inverted_question_mark=0x7f10054c;
    public static final int symbol_kasra=0x7f10054d;
    public static final int symbol_kasratan=0x7f10054e;
    public static final int symbol_left_angle_bracket=0x7f10054f;
    public static final int symbol_left_black_lenticular_bracket=0x7f100550;
    public static final int symbol_left_corner_bracket=0x7f100551;
    public static final int symbol_left_double_quotation_mark=0x7f100552;
    public static final int symbol_left_single_quotation_mark=0x7f100553;
    public static final int symbol_leftwards_arrow=0x7f100554;
    public static final int symbol_liter=0x7f100555;
    public static final int symbol_low_double_quote=0x7f100556;
    public static final int symbol_male=0x7f100557;
    public static final int symbol_mathematical_left_angle_bracket=0x7f100558;
    public static final int symbol_mathematical_right_angle_bracket=0x7f100559;
    public static final int symbol_micro_sign=0x7f10055a;
    public static final int symbol_middle_dot=0x7f10055b;
    public static final int symbol_multiplication=0x7f10055c;
    public static final int symbol_new_line=0x7f10055d;
    public static final int symbol_not_equals=0x7f10055e;
    public static final int symbol_not_sign=0x7f10055f;
    public static final int symbol_paragraph_mark=0x7f100560;
    public static final int symbol_parenthesis_left=0x7f100561;
    public static final int symbol_parenthesis_right=0x7f100562;
    public static final int symbol_percent=0x7f100563;
    public static final int symbol_period=0x7f100564;
    public static final int symbol_pi=0x7f100565;
    public static final int symbol_plus_minus_sign=0x7f100566;
    public static final int symbol_postal_mark=0x7f100567;
    public static final int symbol_pound=0x7f100568;
    public static final int symbol_pound_sterling=0x7f100569;
    public static final int symbol_quarter_note=0x7f10056a;
    public static final int symbol_question_mark=0x7f10056b;
    public static final int symbol_quotation_mark=0x7f10056c;
    public static final int symbol_reference=0x7f10056d;
    public static final int symbol_registered_trademark=0x7f10056e;
    public static final int symbol_right_angle_bracket=0x7f10056f;
    public static final int symbol_right_black_lenticular_bracket=0x7f100570;
    public static final int symbol_right_corner_bracket=0x7f100571;
    public static final int symbol_right_double_quotation_mark=0x7f100572;
    public static final int symbol_right_single_quotation_mark=0x7f100573;
    public static final int symbol_rightwards_arrow=0x7f100574;
    public static final int symbol_rupee=0x7f100575;
    public static final int symbol_section_sign=0x7f100576;
    public static final int symbol_semicolon=0x7f100577;
    public static final int symbol_shadda=0x7f100578;
    public static final int symbol_slash=0x7f100579;
    public static final int symbol_smiley=0x7f10057a;
    public static final int symbol_solar=0x7f10057b;
    public static final int symbol_space=0x7f10057c;
    public static final int symbol_square_bracket_left=0x7f10057d;
    public static final int symbol_square_bracket_right=0x7f10057e;
    public static final int symbol_square_root=0x7f10057f;
    public static final int symbol_sukun=0x7f100580;
    public static final int symbol_tilde=0x7f100581;
    public static final int symbol_trademark=0x7f100582;
    public static final int symbol_underscore=0x7f100583;
    public static final int symbol_upwards_arrow=0x7f100584;
    public static final int symbol_vertical_bar=0x7f100585;
    public static final int symbol_white_circle=0x7f100586;
    public static final int symbol_white_club_suit=0x7f100587;
    public static final int symbol_white_diamond=0x7f100588;
    public static final int symbol_white_down_pointing_triangle=0x7f100589;
    public static final int symbol_white_heart=0x7f10058a;
    public static final int symbol_white_left_pointing_index=0x7f10058b;
    public static final int symbol_white_left_pointing_triangle=0x7f10058c;
    public static final int symbol_white_right_pointing_index=0x7f10058d;
    public static final int symbol_white_right_pointing_triangle=0x7f10058e;
    public static final int symbol_white_spade_suit=0x7f10058f;
    public static final int symbol_white_square=0x7f100590;
    public static final int symbol_white_star=0x7f100591;
    public static final int symbol_white_up_pointing_triangle=0x7f100592;
    public static final int symbol_won=0x7f100593;
    public static final int symbol_won_sign=0x7f100594;
    public static final int symbol_yen=0x7f100595;
    public static final int system_actions=0x7f100596;
    public static final int tabletop=0x7f100597;
    public static final int tabletop_detail=0x7f100598;
    public static final int talkback_built_in_gesture_change_details=0x7f100599;
    public static final int talkback_built_in_gesture_change_details_45=0x7f10059a;
    public static final int talkback_disabled=0x7f10059b;
    public static final int talkback_gesture_change_details=0x7f10059c;
    public static final int talkback_inactive_message=0x7f10059d;
    public static final int talkback_inactive_title=0x7f10059e;
    public static final int talkback_menu_title=0x7f10059f;
    public static final int talkback_notification_channel_description=0x7f1005a0;
    public static final int talkback_notification_channel_name=0x7f1005a1;
    public static final int talkback_off_dialog_positive_button=0x7f1005a2;
    public static final int talkback_off_dialog_title=0x7f1005a3;
    public static final int talkback_off_or_suspend_dialog_message=0x7f1005a4;
    public static final int talkback_on=0x7f1005a5;
    public static final int talkback_preferences_subtitle=0x7f1005a6;
    public static final int talkback_preferences_title=0x7f1005a7;
    public static final int talkback_resumed=0x7f1005a8;
    public static final int talkback_service_description=0x7f1005a9;
    public static final int talkback_service_html_description=0x7f1005aa;
    public static final int talkback_service_summary=0x7f1005ab;
    public static final int talkback_show_talkback_settings=0x7f1005ac;
    public static final int talkback_suspend_dialog_title=0x7f1005ad;
    public static final int talkback_suspended=0x7f1005ae;
    public static final int talkback_title=0x7f1005af;
    public static final int talkback_tutorial_text=0x7f1005b0;
    public static final int talkback_tutorial_title=0x7f1005b1;
    public static final int tap_to_continue=0x7f1005b2;
    public static final int target_link_text=0x7f1005b3;
    public static final int template_alert_dialog_template=0x7f1005b4;
    public static final int template_announce_selected_text=0x7f1005b5;
    public static final int template_capital_letter=0x7f1005b6;
    public static final int template_charging=0x7f1005b7;
    public static final int template_charging_lite=0x7f1005b8;
    public static final int template_collection_level=0x7f1005b9;
    public static final int template_current_tts_engine=0x7f1005ba;
    public static final int template_custom_hint_for_actions=0x7f1005bb;
    public static final int template_custom_hint_for_actions_keyboard=0x7f1005bc;
    public static final int template_custom_hint_for_long_clickable_actions=0x7f1005bd;
    public static final int template_drawer_opened=0x7f1005be;
    public static final int template_hint_checkable=0x7f1005bf;
    public static final int template_hint_checkable_keyboard=0x7f1005c0;
    public static final int template_hint_clickable=0x7f1005c1;
    public static final int template_hint_clickable_keyboard=0x7f1005c2;
    public static final int template_hint_custom_actions=0x7f1005c3;
    public static final int template_hint_edit_text=0x7f1005c4;
    public static final int template_hint_edit_text_keyboard=0x7f1005c5;
    public static final int template_hint_long_clickable=0x7f1005c6;
    public static final int template_hint_long_clickable_keyboard=0x7f1005c7;
    public static final int template_hint_menu_type_high_verbosity=0x7f1005c8;
    public static final int template_hint_menu_type_low_verbosity=0x7f1005c9;
    public static final int template_hint_pager=0x7f1005ca;
    public static final int template_hint_pager_single_page=0x7f1005cb;
    public static final int template_hint_seek_control=0x7f1005cc;
    public static final int template_hint_seek_control_tv=0x7f1005cd;
    public static final int template_hint_spinner=0x7f1005ce;
    public static final int template_hint_spinner_keyboard=0x7f1005cf;
    public static final int template_labeled_item=0x7f1005d0;
    public static final int template_language_options_menu_item=0x7f1005d1;
    public static final int template_long_clicked=0x7f1005d2;
    public static final int template_menu=0x7f1005d3;
    public static final int template_no_text_selected=0x7f1005d4;
    public static final int template_node_error_with_error_message=0x7f1005d5;
    public static final int template_overlay_window=0x7f1005d6;
    public static final int template_password_selected=0x7f1005d7;
    public static final int template_password_traversed=0x7f1005d8;
    public static final int template_percent=0x7f1005d9;
    public static final int template_replaced_characters=0x7f1005da;
    public static final int template_sa_custom_hint_for_multiple_actions=0x7f1005db;
    public static final int template_sa_custom_hint_scrollable=0x7f1005dc;
    public static final int template_sa_hint_seek_control=0x7f1005dd;
    public static final int template_screen_magnification_on=0x7f1005de;
    public static final int template_screen_magnification_scale_changed=0x7f1005df;
    public static final int template_scroll_from_count=0x7f1005e0;
    public static final int template_scroll_from_to_count=0x7f1005e1;
    public static final int template_seekbar_range=0x7f1005e2;
    public static final int template_speech_rate_change=0x7f1005e3;
    public static final int template_speech_rate_change_faster=0x7f1005e4;
    public static final int template_speech_rate_change_fastest=0x7f1005e5;
    public static final int template_speech_rate_change_slower=0x7f1005e6;
    public static final int template_speech_rate_change_slowest=0x7f1005e7;
    public static final int template_split_screen_mode_landscape_ltr=0x7f1005e8;
    public static final int template_split_screen_mode_landscape_rtl=0x7f1005e9;
    public static final int template_split_screen_mode_portrait=0x7f1005ea;
    public static final int template_stream_muted_set=0x7f1005eb;
    public static final int template_stream_volume_set=0x7f1005ec;
    public static final int template_summary_description=0x7f1005ed;
    public static final int template_text_copied=0x7f1005ee;
    public static final int template_text_cut=0x7f1005ef;
    public static final int template_text_error=0x7f1005f0;
    public static final int template_text_pasted=0x7f1005f1;
    public static final int template_text_removed=0x7f1005f2;
    public static final int template_text_replaced=0x7f1005f3;
    public static final int template_text_selected=0x7f1005f4;
    public static final int template_text_unselected=0x7f1005f5;
    public static final int template_tv_remote_mode_ended=0x7f1005f6;
    public static final int template_tv_remote_mode_started=0x7f1005f7;
    public static final int template_viewpager_index_count=0x7f1005f8;
    public static final int template_viewpager_index_count_short=0x7f1005f9;
    public static final int template_volume_change_decrease=0x7f1005fa;
    public static final int template_volume_change_increase=0x7f1005fb;
    public static final int template_window_switch_application=0x7f1005fc;
    public static final int template_window_switch_system=0x7f1005fd;
    public static final int text_editing_link_subtext=0x7f1005fe;
    public static final int text_editing_link_text=0x7f1005ff;
    public static final int three_finger_gestures_title=0x7f100600;
    public static final int title_action_collapse=0x7f100601;
    public static final int title_action_dismiss=0x7f100602;
    public static final int title_action_expand=0x7f100603;
    public static final int title_action_long_press=0x7f100604;
    public static final int title_action_select=0x7f100605;
    public static final int title_activity_dump_a11y_event=0x7f100606;
    public static final int title_adjust_slider=0x7f100607;
    public static final int title_cancel_button=0x7f100608;
    public static final int title_cancel_screen_search=0x7f100609;
    public static final int title_clear_keyword=0x7f10060a;
    public static final int title_copy_last_spoken_phrase=0x7f10060b;
    public static final int title_custom_action=0x7f10060c;
    public static final int title_edittext_breakout_end_selection_mode=0x7f10060d;
    public static final int title_edittext_breakout_move_to_beginning=0x7f10060e;
    public static final int title_edittext_breakout_move_to_end=0x7f10060f;
    public static final int title_edittext_breakout_start_selection_mode=0x7f100610;
    public static final int title_edittext_controls=0x7f100611;
    public static final int title_granularity=0x7f100612;
    public static final int title_granularity_default=0x7f100613;
    public static final int title_granularity_edit_menu=0x7f100614;
    public static final int title_labeling_controls=0x7f100615;
    public static final int title_labeling_show_or_hide_controls=0x7f100616;
    public static final int title_local_breakout_no_items=0x7f100617;
    public static final int title_next_screen=0x7f100618;
    public static final int title_other_web_navigation=0x7f100619;
    public static final int title_pref_a11y_hints=0x7f10061a;
    public static final int title_pref_a11y_volume=0x7f10061b;
    public static final int title_pref_accumulate_presses=0x7f10061c;
    public static final int title_pref_advanced_settings=0x7f10061d;
    public static final int title_pref_brailleime=0x7f10061e;
    public static final int title_pref_capital_letters=0x7f10061f;
    public static final int title_pref_category_advanced=0x7f100620;
    public static final int title_pref_category_audio=0x7f100621;
    public static final int title_pref_category_built_in_gestures=0x7f100622;
    public static final int title_pref_category_context_menu=0x7f100623;
    public static final int title_pref_category_controls=0x7f100624;
    public static final int title_pref_category_developer_settings=0x7f100625;
    public static final int title_pref_category_feedback_settings=0x7f100626;
    public static final int title_pref_category_fingerprint_touch_shortcuts=0x7f100627;
    public static final int title_pref_category_help_and_feedback=0x7f100628;
    public static final int title_pref_category_legal_and_privacy=0x7f100629;
    public static final int title_pref_category_manage_gestures=0x7f10062a;
    public static final int title_pref_category_miscellaneous_settings=0x7f10062b;
    public static final int title_pref_category_navigation_menu=0x7f10062c;
    public static final int title_pref_category_selector_granularity_configuration=0x7f10062d;
    public static final int title_pref_category_selector_menu=0x7f10062e;
    public static final int title_pref_category_selector_settings_configuration=0x7f10062f;
    public static final int title_pref_category_touch_exploration=0x7f100630;
    public static final int title_pref_category_tutorial_and_help=0x7f100631;
    public static final int title_pref_category_when_to_speak=0x7f100632;
    public static final int title_pref_cover_proximity_sensor=0x7f100633;
    public static final int title_pref_dim_volume_three_clicks=0x7f100634;
    public static final int title_pref_dump_a11y_event=0x7f100635;
    public static final int title_pref_echo_recognized_text_speech=0x7f100636;
    public static final int title_pref_explore_by_touch=0x7f100637;
    public static final int title_pref_export_custom_labels=0x7f100638;
    public static final int title_pref_help=0x7f100639;
    public static final int title_pref_help_and_feedback=0x7f10063a;
    public static final int title_pref_intonation=0x7f10063b;
    public static final int title_pref_keyboard_echo=0x7f10063c;
    public static final int title_pref_log_level=0x7f10063d;
    public static final int title_pref_manage_customize_menus=0x7f10063e;
    public static final int title_pref_manage_keyboard_shortcuts=0x7f10063f;
    public static final int title_pref_manage_labels=0x7f100640;
    public static final int title_pref_multi_finger_gesture=0x7f100641;
    public static final int title_pref_performance_stats=0x7f100642;
    public static final int title_pref_phonetic_letters=0x7f100643;
    public static final int title_pref_play_store=0x7f100644;
    public static final int title_pref_proximity=0x7f100645;
    public static final int title_pref_punctuation=0x7f100646;
    public static final int title_pref_resume_talkback=0x7f100647;
    public static final int title_pref_reverse_dots=0x7f100648;
    public static final int title_pref_selector_activation=0x7f100649;
    public static final int title_pref_selector_adjustable_widget_number_picker=0x7f10064a;
    public static final int title_pref_selector_adjustable_widget_slider=0x7f10064b;
    public static final int title_pref_selector_audio_focus=0x7f10064c;
    public static final int title_pref_selector_granularity=0x7f10064d;
    public static final int title_pref_selector_punctuation=0x7f10064e;
    public static final int title_pref_selector_settings=0x7f10064f;
    public static final int title_pref_selector_speech_rate=0x7f100650;
    public static final int title_pref_selector_verbosity=0x7f100651;
    public static final int title_pref_shake_to_read_threshold=0x7f100652;
    public static final int title_pref_shortcut_2finger_1tap=0x7f100653;
    public static final int title_pref_shortcut_2finger_2tap=0x7f100654;
    public static final int title_pref_shortcut_2finger_2tap_hold=0x7f100655;
    public static final int title_pref_shortcut_2finger_3tap=0x7f100656;
    public static final int title_pref_shortcut_2finger_swipe_down=0x7f100657;
    public static final int title_pref_shortcut_2finger_swipe_left=0x7f100658;
    public static final int title_pref_shortcut_2finger_swipe_right=0x7f100659;
    public static final int title_pref_shortcut_2finger_swipe_up=0x7f10065a;
    public static final int title_pref_shortcut_3finger_1tap=0x7f10065b;
    public static final int title_pref_shortcut_3finger_2tap=0x7f10065c;
    public static final int title_pref_shortcut_3finger_2tap_hold=0x7f10065d;
    public static final int title_pref_shortcut_3finger_3tap=0x7f10065e;
    public static final int title_pref_shortcut_3finger_swipe_down=0x7f10065f;
    public static final int title_pref_shortcut_3finger_swipe_left=0x7f100660;
    public static final int title_pref_shortcut_3finger_swipe_right=0x7f100661;
    public static final int title_pref_shortcut_3finger_swipe_up=0x7f100662;
    public static final int title_pref_shortcut_4finger_1tap=0x7f100663;
    public static final int title_pref_shortcut_4finger_2tap=0x7f100664;
    public static final int title_pref_shortcut_4finger_2tap_hold=0x7f100665;
    public static final int title_pref_shortcut_4finger_3tap=0x7f100666;
    public static final int title_pref_shortcut_4finger_swipe_down=0x7f100667;
    public static final int title_pref_shortcut_4finger_swipe_left=0x7f100668;
    public static final int title_pref_shortcut_4finger_swipe_right=0x7f100669;
    public static final int title_pref_shortcut_4finger_swipe_up=0x7f10066a;
    public static final int title_pref_shortcut_down=0x7f10066b;
    public static final int title_pref_shortcut_down_and_left=0x7f10066c;
    public static final int title_pref_shortcut_down_and_right=0x7f10066d;
    public static final int title_pref_shortcut_down_and_up=0x7f10066e;
    public static final int title_pref_shortcut_fingerprint_down=0x7f10066f;
    public static final int title_pref_shortcut_fingerprint_left=0x7f100670;
    public static final int title_pref_shortcut_fingerprint_right=0x7f100671;
    public static final int title_pref_shortcut_fingerprint_up=0x7f100672;
    public static final int title_pref_shortcut_left=0x7f100673;
    public static final int title_pref_shortcut_left_and_down=0x7f100674;
    public static final int title_pref_shortcut_left_and_right=0x7f100675;
    public static final int title_pref_shortcut_left_and_up=0x7f100676;
    public static final int title_pref_shortcut_right=0x7f100677;
    public static final int title_pref_shortcut_right_and_down=0x7f100678;
    public static final int title_pref_shortcut_right_and_left=0x7f100679;
    public static final int title_pref_shortcut_right_and_up=0x7f10067a;
    public static final int title_pref_shortcut_up=0x7f10067b;
    public static final int title_pref_shortcut_up_and_down=0x7f10067c;
    public static final int title_pref_shortcut_up_and_left=0x7f10067d;
    public static final int title_pref_shortcut_up_and_right=0x7f10067e;
    public static final int title_pref_show_context_menu_as_list=0x7f10067f;
    public static final int title_pref_show_privacy_policy=0x7f100680;
    public static final int title_pref_show_tos=0x7f100681;
    public static final int title_pref_single_tap=0x7f100682;
    public static final int title_pref_sound_and_vibration=0x7f100683;
    public static final int title_pref_soundback=0x7f100684;
    public static final int title_pref_soundback_volume=0x7f100685;
    public static final int title_pref_speak_element_ids=0x7f100686;
    public static final int title_pref_speak_passwords_without_headphones=0x7f100687;
    public static final int title_pref_speak_screenoff=0x7f100688;
    public static final int title_pref_speech_volume=0x7f100689;
    public static final int title_pref_support_scroll_seq=0x7f10068a;
    public static final int title_pref_tree_debug=0x7f10068b;
    public static final int title_pref_tts_overlay=0x7f10068c;
    public static final int title_pref_two_part_vertical_gestures=0x7f10068e;
    public static final int title_pref_two_volume_button_long_click=0x7f10068f;
    public static final int title_pref_use_audio_focus=0x7f100690;
    public static final int title_pref_verbose_scroll_announcement=0x7f100691;
    public static final int title_pref_version_code=0x7f100692;
    public static final int title_pref_vibration=0x7f100693;
    public static final int title_previous_screen=0x7f100694;
    public static final int title_read_from_top=0x7f100695;
    public static final int title_repeat_last_spoken_phrase=0x7f100696;
    public static final int title_screen_search=0x7f100697;
    public static final int title_screen_summary=0x7f100698;
    public static final int title_seek_bar_controls=0x7f100699;
    public static final int title_seek_bar_edit=0x7f10069a;
    public static final int title_show_hide_screen=0x7f10069b;
    public static final int title_show_screen_search=0x7f10069c;
    public static final int title_show_voice_commands=0x7f10069d;
    public static final int title_spell_last_spoken_phrase=0x7f10069e;
    public static final int title_suggestions_breakout_anchor=0x7f10069f;
    public static final int title_suggestions_breakout_suggestions=0x7f1006a0;
    public static final int title_viewpager_breakout_next_page=0x7f1006a1;
    public static final int title_viewpager_breakout_page_down=0x7f1006a2;
    public static final int title_viewpager_breakout_page_left=0x7f1006a3;
    public static final int title_viewpager_breakout_page_right=0x7f1006a4;
    public static final int title_viewpager_breakout_page_up=0x7f1006a5;
    public static final int title_viewpager_breakout_prev_page=0x7f1006a6;
    public static final int title_viewpager_controls=0x7f1006a7;
    public static final int title_web_breakout_next_control=0x7f1006a8;
    public static final int title_web_breakout_next_list=0x7f1006a9;
    public static final int title_web_breakout_next_section=0x7f1006aa;
    public static final int title_web_breakout_prev_control=0x7f1006ab;
    public static final int title_web_breakout_prev_list=0x7f1006ac;
    public static final int title_web_breakout_prev_section=0x7f1006ad;
    public static final int training_back_button=0x7f1006ae;
    public static final int training_close_button=0x7f1006af;
    public static final int training_finish_button=0x7f1006b0;
    public static final int training_navigate_up=0x7f1006b1;
    public static final int training_next_button=0x7f1006b2;
    public static final int training_page_number=0x7f1006b3;
    public static final int trigger_modifier_alt_entry_value=0x7f1006b4;
    public static final int trigger_modifier_meta_entry_value=0x7f1006b5;
    public static final int try_setting_selector_gesture=0x7f1006b6;
    public static final int try_setting_selector_gesture_pre_r=0x7f1006b7;
    public static final int tts_preferences_title=0x7f1006b8;
    public static final int tutorial_entry_point_title=0x7f1006bc;
    public static final int tutorial_intro_description=0x7f1006bf;
    public static final int two_finger_gestures_title=0x7f100707;
    public static final int type_letter_a_announcement=0x7f100708;
    public static final int type_letter_a_announcement_left_index_finger=0x7f100709;
    public static final int type_letter_a_announcement_right_index_finger=0x7f10070a;
    public static final int type_letter_a_inactive_announcement=0x7f10070b;
    public static final int type_letter_inactive_announcement=0x7f10070c;
    public static final int typing_echo_list_preference_title=0x7f10070d;
    public static final int typing_echo_preference_label_characters=0x7f10070e;
    public static final int typing_echo_preference_label_words=0x7f10070f;
    public static final int typing_text_text=0x7f100710;
    public static final int typing_text_title=0x7f100711;
    public static final int typing_text_with_braille_keyboard_text=0x7f100712;
    public static final int uncontracted=0x7f100713;
    public static final int untitled_window=0x7f100714;
    public static final int updown_downup_gestures_change_and_selector_always_on_details=0x7f100715;
    public static final int url_dialog_table=0x7f100716;
    public static final int use_brailleime_pref_button_case_ime_disabled=0x7f100717;
    public static final int use_brailleime_pref_dialog_case_ime_disabled=0x7f100718;
    public static final int use_brailleime_pref_dialog_case_ime_enabled=0x7f100719;
    public static final int use_brailleime_pref_summary=0x7f10071a;
    public static final int using_text_boxes_text=0x7f10071b;
    public static final int using_text_boxes_title=0x7f10071c;
    public static final int v7_preference_off=0x7f10071d;
    public static final int v7_preference_on=0x7f10071e;
    public static final int value_button=0x7f10071f;
    public static final int value_caps_lock_off=0x7f100720;
    public static final int value_caps_lock_on=0x7f100721;
    public static final int value_checkbox=0x7f100722;
    public static final int value_checked=0x7f100723;
    public static final int value_classic_keymap=0x7f100724;
    public static final int value_collapsed=0x7f100725;
    public static final int value_default_keymap=0x7f100726;
    public static final int value_device_unlocked=0x7f100727;
    public static final int value_dim_volume_three_clicks=0x7f100728;
    public static final int value_direction_down=0x7f100729;
    public static final int value_direction_down_and_left=0x7f10072a;
    public static final int value_direction_down_and_right=0x7f10072b;
    public static final int value_direction_down_and_up=0x7f10072c;
    public static final int value_direction_left=0x7f10072d;
    public static final int value_direction_left_and_down=0x7f10072e;
    public static final int value_direction_left_and_right=0x7f10072f;
    public static final int value_direction_left_and_up=0x7f100730;
    public static final int value_direction_right=0x7f100731;
    public static final int value_direction_right_and_down=0x7f100732;
    public static final int value_direction_right_and_left=0x7f100733;
    public static final int value_direction_right_and_up=0x7f100734;
    public static final int value_direction_up=0x7f100735;
    public static final int value_direction_up_and_down=0x7f100736;
    public static final int value_direction_up_and_left=0x7f100737;
    public static final int value_direction_up_and_right=0x7f100738;
    public static final int value_disabled=0x7f100739;
    public static final int value_dismissible=0x7f10073a;
    public static final int value_double_tap=0x7f10073b;
    public static final int value_edit_box=0x7f10073c;
    public static final int value_edit_box_editing=0x7f10073d;
    public static final int value_expanded=0x7f10073e;
    public static final int value_googletv_screen_saver=0x7f10073f;
    public static final int value_gridview=0x7f100740;
    public static final int value_hint_tv_remote_mode_seek_control=0x7f100741;
    public static final int value_image=0x7f100742;
    public static final int value_keyboard_echo_always=0x7f100743;
    public static final int value_keyboard_echo_never=0x7f100744;
    public static final int value_keyboard_echo_softkeys=0x7f100745;
    public static final int value_listview=0x7f100746;
    public static final int value_location_bottom=0x7f100747;
    public static final int value_location_bottom_left=0x7f100748;
    public static final int value_location_bottom_right=0x7f100749;
    public static final int value_location_center=0x7f10074a;
    public static final int value_location_left=0x7f10074b;
    public static final int value_location_right=0x7f10074c;
    public static final int value_location_top=0x7f10074d;
    public static final int value_location_top_left=0x7f10074e;
    public static final int value_location_top_right=0x7f10074f;
    public static final int value_long_volume_pressed_suspend_talkback=0x7f100750;
    public static final int value_not_checked=0x7f100751;
    public static final int value_notification_shade_opened=0x7f100752;
    public static final int value_num_lock_off=0x7f100753;
    public static final int value_num_lock_on=0x7f100754;
    public static final int value_off=0x7f100755;
    public static final int value_on=0x7f100756;
    public static final int value_options_menu_open=0x7f100757;
    public static final int value_pager=0x7f100758;
    public static final int value_pager_page=0x7f100759;
    public static final int value_password=0x7f10075a;
    public static final int value_press_select=0x7f10075b;
    public static final int value_progress_bar=0x7f10075c;
    public static final int value_radio_button=0x7f10075d;
    public static final int value_resume_keyguard=0x7f10075e;
    public static final int value_resume_manual=0x7f10075f;
    public static final int value_resume_screen_on=0x7f100760;
    public static final int value_ringer_silent=0x7f100761;
    public static final int value_ringer_vibrate=0x7f100762;
    public static final int value_screen_off=0x7f100763;
    public static final int value_screen_on=0x7f100764;
    public static final int value_scroll_lock_off=0x7f100765;
    public static final int value_scroll_lock_on=0x7f100766;
    public static final int value_seek_bar=0x7f100767;
    public static final int value_seek_bar_dialog_instructions=0x7f100768;
    public static final int value_seek_bar_dialog_percent=0x7f100769;
    public static final int value_selected=0x7f10076a;
    public static final int value_shake_to_read_disabled=0x7f10076b;
    public static final int value_shake_to_read_threshold_hard=0x7f10076c;
    public static final int value_shake_to_read_threshold_light=0x7f10076d;
    public static final int value_shake_to_read_threshold_medium=0x7f10076e;
    public static final int value_shake_to_read_threshold_very_hard=0x7f10076f;
    public static final int value_shake_to_read_threshold_very_light=0x7f100770;
    public static final int value_single_tap=0x7f100771;
    public static final int value_sliding_drawer_opened=0x7f100772;
    public static final int value_spinner=0x7f100773;
    public static final int value_stream_accessibility=0x7f100774;
    public static final int value_stream_alarm=0x7f100775;
    public static final int value_stream_dtmf=0x7f100776;
    public static final int value_stream_music=0x7f100777;
    public static final int value_stream_notification=0x7f100778;
    public static final int value_stream_ring=0x7f100779;
    public static final int value_stream_system=0x7f10077a;
    public static final int value_stream_voice_call=0x7f10077b;
    public static final int value_switch=0x7f10077c;
    public static final int value_switch_press=0x7f10077d;
    public static final int value_tabwidget=0x7f10077e;
    public static final int value_text_cleared=0x7f10077f;
    public static final int value_text_max_length=0x7f100780;
    public static final int value_text_removed=0x7f100781;
    public static final int value_toolbar=0x7f100782;
    public static final int value_tv_remote_mode_seek_control=0x7f100783;
    public static final int value_two_part_vertical_gestures_cycle=0x7f100784;
    public static final int value_two_part_vertical_gestures_jump=0x7f100785;
    public static final int value_unlabelled=0x7f100786;
    public static final int value_volume_100_percent=0x7f100787;
    public static final int value_volume_25_percent=0x7f100788;
    public static final int value_volume_50_percent=0x7f100789;
    public static final int value_volume_75_percent=0x7f10078a;
    public static final int value_webview=0x7f10078b;
    public static final int vibration_feedback_state=0x7f10078c;
    public static final int voice_commands_Spell=0x7f10078d;
    public static final int voice_commands_action=0x7f10078e;
    public static final int voice_commands_all_apps=0x7f10078f;
    public static final int voice_commands_apps=0x7f100790;
    public static final int voice_commands_assistant=0x7f100791;
    public static final int voice_commands_back=0x7f100792;
    public static final int voice_commands_bottom=0x7f100793;
    public static final int voice_commands_brighten_screen=0x7f100794;
    public static final int voice_commands_cancel_hide_screen=0x7f100795;
    public static final int voice_commands_cannot_label_feedback=0x7f100796;
    public static final int voice_commands_change_verbosity_to_parameter=0x7f100797;
    public static final int voice_commands_copy=0x7f100798;
    public static final int voice_commands_custom_actions=0x7f100799;
    public static final int voice_commands_cut=0x7f10079a;
    public static final int voice_commands_darken=0x7f10079b;
    public static final int voice_commands_decrease_speech_rate=0x7f10079c;
    public static final int voice_commands_delete=0x7f10079d;
    public static final int voice_commands_deselect=0x7f10079e;
    public static final int voice_commands_desktop=0x7f10079f;
    public static final int voice_commands_dictate=0x7f1007a0;
    public static final int voice_commands_dim=0x7f1007a1;
    public static final int voice_commands_echo_feedback_not_recognized=0x7f1007a2;
    public static final int voice_commands_edit=0x7f1007a3;
    public static final int voice_commands_edit_options=0x7f1007a4;
    public static final int voice_commands_edit_text=0x7f1007a5;
    public static final int voice_commands_editing_options=0x7f1007a6;
    public static final int voice_commands_end_select=0x7f1007a7;
    public static final int voice_commands_error=0x7f1007a8;
    public static final int voice_commands_faster=0x7f1007a9;
    public static final int voice_commands_find=0x7f1007aa;
    public static final int voice_commands_find_again=0x7f1007ab;
    public static final int voice_commands_finish_select=0x7f1007ac;
    public static final int voice_commands_finish_selection=0x7f1007ad;
    public static final int voice_commands_finish_selection_mode=0x7f1007ae;
    public static final int voice_commands_first=0x7f1007af;
    public static final int voice_commands_go_back=0x7f1007b0;
    public static final int voice_commands_help_actions_description=0x7f1007b1;
    public static final int voice_commands_help_assistant_description=0x7f1007b2;
    public static final int voice_commands_help_copy_description=0x7f1007b3;
    public static final int voice_commands_help_cut_description=0x7f1007b4;
    public static final int voice_commands_help_delete_description=0x7f1007b5;
    public static final int voice_commands_help_description=0x7f1007b6;
    public static final int voice_commands_help_device_navigation_description=0x7f1007b7;
    public static final int voice_commands_help_device_navigation_title=0x7f1007b8;
    public static final int voice_commands_help_find_description=0x7f1007b9;
    public static final int voice_commands_help_find_items_description=0x7f1007ba;
    public static final int voice_commands_help_find_items_title=0x7f1007bb;
    public static final int voice_commands_help_find_text=0x7f1007bc;
    public static final int voice_commands_help_find_text_description=0x7f1007bd;
    public static final int voice_commands_help_first_description=0x7f1007be;
    public static final int voice_commands_help_hide_screen_description=0x7f1007bf;
    public static final int voice_commands_help_hint=0x7f1007c0;
    public static final int voice_commands_help_label=0x7f1007c1;
    public static final int voice_commands_help_label_description=0x7f1007c2;
    public static final int voice_commands_help_languages_description=0x7f1007c3;
    public static final int voice_commands_help_last_description=0x7f1007c4;
    public static final int voice_commands_help_navigation=0x7f1007c5;
    public static final int voice_commands_help_navigation_description=0x7f1007c6;
    public static final int voice_commands_help_next=0x7f1007c7;
    public static final int voice_commands_help_next_description=0x7f1007c8;
    public static final int voice_commands_help_other_commands_description=0x7f1007c9;
    public static final int voice_commands_help_other_commands_title=0x7f1007ca;
    public static final int voice_commands_help_overview_description=0x7f1007cb;
    public static final int voice_commands_help_reading_controls_description=0x7f1007cc;
    public static final int voice_commands_help_reading_controls_title=0x7f1007cd;
    public static final int voice_commands_help_screen_search_description=0x7f1007ce;
    public static final int voice_commands_help_show_screen_description=0x7f1007cf;
    public static final int voice_commands_help_speech_rate=0x7f1007d0;
    public static final int voice_commands_help_speech_rate_description=0x7f1007d1;
    public static final int voice_commands_help_stop_description=0x7f1007d2;
    public static final int voice_commands_help_text_editing_description=0x7f1007d3;
    public static final int voice_commands_help_title=0x7f1007d4;
    public static final int voice_commands_help_type_text=0x7f1007d5;
    public static final int voice_commands_help_verbosity=0x7f1007d6;
    public static final int voice_commands_help_verbosity_description=0x7f1007d7;
    public static final int voice_commands_home=0x7f1007d8;
    public static final int voice_commands_homophone_high_and_hi=0x7f1007d9;
    public static final int voice_commands_increase_speech_rate=0x7f1007da;
    public static final int voice_commands_input=0x7f1007db;
    public static final int voice_commands_label=0x7f1007dc;
    public static final int voice_commands_label_saved=0x7f1007dd;
    public static final int voice_commands_language=0x7f1007de;
    public static final int voice_commands_languages=0x7f1007df;
    public static final int voice_commands_last=0x7f1007e0;
    public static final int voice_commands_link_subtext=0x7f1007e1;
    public static final int voice_commands_link_text=0x7f1007e2;
    public static final int voice_commands_many_requests=0x7f1007e3;
    public static final int voice_commands_navigation_by_parameter=0x7f1007e4;
    public static final int voice_commands_nevermind=0x7f1007e5;
    public static final int voice_commands_next=0x7f1007e6;
    public static final int voice_commands_next_control=0x7f1007e7;
    public static final int voice_commands_next_heading=0x7f1007e8;
    public static final int voice_commands_next_landmark=0x7f1007e9;
    public static final int voice_commands_next_link=0x7f1007ea;
    public static final int voice_commands_no_action=0x7f1007eb;
    public static final int voice_commands_no_actions_feedback=0x7f1007ec;
    public static final int voice_commands_no_mic_permissions=0x7f1007ed;
    public static final int voice_commands_no_next_control_feedback=0x7f1007ee;
    public static final int voice_commands_no_next_heading_feedback=0x7f1007ef;
    public static final int voice_commands_no_next_landmark_feedback=0x7f1007f0;
    public static final int voice_commands_no_next_link_feedback=0x7f1007f1;
    public static final int voice_commands_no_voice_recognition_ability=0x7f1007f2;
    public static final int voice_commands_notification=0x7f1007f3;
    public static final int voice_commands_notifications=0x7f1007f4;
    public static final int voice_commands_overview=0x7f1007f5;
    public static final int voice_commands_parameter_granularity=0x7f1007f6;
    public static final int voice_commands_parameter_navigation=0x7f1007f7;
    public static final int voice_commands_parameter_verbosity=0x7f1007f8;
    public static final int voice_commands_partial_result=0x7f1007f9;
    public static final int voice_commands_paste=0x7f1007fa;
    public static final int voice_commands_pause=0x7f1007fb;
    public static final int voice_commands_possible_options_title=0x7f1007fc;
    public static final int voice_commands_quick_setting=0x7f1007fd;
    public static final int voice_commands_quick_settings=0x7f1007fe;
    public static final int voice_commands_quiet=0x7f1007ff;
    public static final int voice_commands_quit=0x7f100800;
    public static final int voice_commands_read=0x7f100801;
    public static final int voice_commands_read_by_parameter=0x7f100802;
    public static final int voice_commands_read_from_next=0x7f100803;
    public static final int voice_commands_recent=0x7f100804;
    public static final int voice_commands_recent_apps=0x7f100805;
    public static final int voice_commands_recents=0x7f100806;
    public static final int voice_commands_restore_screen=0x7f100807;
    public static final int voice_commands_say=0x7f100808;
    public static final int voice_commands_screen_hidden_feedback=0x7f100809;
    public static final int voice_commands_screen_search=0x7f10080a;
    public static final int voice_commands_search=0x7f10080b;
    public static final int voice_commands_search_for=0x7f10080c;
    public static final int voice_commands_search_on_screen=0x7f10080d;
    public static final int voice_commands_select=0x7f10080e;
    public static final int voice_commands_setting_disabled=0x7f10080f;
    public static final int voice_commands_setting_granularity=0x7f100810;
    public static final int voice_commands_setting_navigation=0x7f100811;
    public static final int voice_commands_setting_speech_rate=0x7f100812;
    public static final int voice_commands_setting_verbosity=0x7f100813;
    public static final int voice_commands_showing_screen_feedback=0x7f100814;
    public static final int voice_commands_shut_up=0x7f100815;
    public static final int voice_commands_slower=0x7f100816;
    public static final int voice_commands_start_select=0x7f100817;
    public static final int voice_commands_start_selection=0x7f100818;
    public static final int voice_commands_start_selection_mode=0x7f100819;
    public static final int voice_commands_stop=0x7f10081a;
    public static final int voice_commands_summary=0x7f10081b;
    public static final int voice_commands_talkback_setting=0x7f10081c;
    public static final int voice_commands_talkback_settings=0x7f10081d;
    public static final int voice_commands_text=0x7f10081e;
    public static final int voice_commands_text_editing=0x7f10081f;
    public static final int voice_commands_title=0x7f100820;
    public static final int voice_commands_top=0x7f100821;
    public static final int voice_commands_type=0x7f100822;
    public static final int voice_commands_verbosity_parameter=0x7f100823;
    public static final int voice_commands_what=0x7f100824;
    public static final int voice_commands_write=0x7f100825;
    public static final int welcome_to_android11=0x7f100826;
    public static final int welcome_to_android11_text=0x7f100827;
    public static final int welcome_to_talkback_text=0x7f100828;
    public static final int welcome_to_talkback_title=0x7f100829;
    public static final int welcome_to_updated_talkback_text=0x7f10082a;
    public static final int welcome_to_updated_talkback_text_pre_r=0x7f10082b;
    public static final int welcome_to_updated_talkback_title=0x7f10082c;
  }
  public static final class style {
    public static final int AlertDialog_AppCompat=0x7f110000;
    public static final int AlertDialog_AppCompat_Light=0x7f110001;
    public static final int AlertDialogTheme=0x7f110002;
    public static final int Animation_AppCompat_Dialog=0x7f110003;
    public static final int Animation_AppCompat_DropDownUp=0x7f110004;
    public static final int Animation_AppCompat_Tooltip=0x7f110005;
    public static final int Animation_Design_BottomSheetDialog=0x7f110006;
    public static final int Animation_MaterialComponents_BottomSheetDialog=0x7f110007;
    public static final int Base_AlertDialog_AppCompat=0x7f110008;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f110009;
    public static final int Base_Animation_AppCompat_Dialog=0x7f11000a;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f11000b;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f11000c;
    public static final int Base_CardView=0x7f11000d;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f11000e;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f11000f;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Icon=0x7f110010;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Panel=0x7f110011;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Text=0x7f110012;
    public static final int Base_TextAppearance_AppCompat=0x7f110013;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f110014;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f110015;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f110016;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f110017;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f110018;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f110019;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f11001a;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f11001b;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f11001c;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f11001d;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f11001e;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f11001f;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f110020;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f110021;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f110022;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f110023;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f110024;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f110025;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f110026;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f110027;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f110028;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f110029;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f11002a;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f11002b;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f11002c;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f11002d;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f11002e;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f11002f;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f110030;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f110031;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f110032;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f110033;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f110034;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f110035;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f110036;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f110037;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f110038;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f110039;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f11003a;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f11003b;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f11003c;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f11003d;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f11003e;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f11003f;
    public static final int Base_TextAppearance_MaterialComponents_Badge=0x7f110040;
    public static final int Base_TextAppearance_MaterialComponents_Button=0x7f110041;
    public static final int Base_TextAppearance_MaterialComponents_Headline6=0x7f110042;
    public static final int Base_TextAppearance_MaterialComponents_Subtitle2=0x7f110043;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f110044;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f110045;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f110046;
    public static final int Base_Theme_AppCompat=0x7f110047;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f110048;
    public static final int Base_Theme_AppCompat_Dialog=0x7f110049;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f11004a;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f11004b;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f11004c;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f11004d;
    public static final int Base_Theme_AppCompat_Light=0x7f11004e;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f11004f;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f110050;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f110051;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f110052;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f110053;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f110054;
    public static final int Base_Theme_MaterialComponents=0x7f110055;
    public static final int Base_Theme_MaterialComponents_Bridge=0x7f110056;
    public static final int Base_Theme_MaterialComponents_CompactMenu=0x7f110057;
    public static final int Base_Theme_MaterialComponents_Dialog=0x7f110058;
    public static final int Base_Theme_MaterialComponents_Dialog_Alert=0x7f110059;
    public static final int Base_Theme_MaterialComponents_Dialog_Bridge=0x7f11005a;
    public static final int Base_Theme_MaterialComponents_Dialog_FixedSize=0x7f11005b;
    public static final int Base_Theme_MaterialComponents_Dialog_MinWidth=0x7f11005c;
    public static final int Base_Theme_MaterialComponents_DialogWhenLarge=0x7f11005d;
    public static final int Base_Theme_MaterialComponents_Light=0x7f11005e;
    public static final int Base_Theme_MaterialComponents_Light_Bridge=0x7f11005f;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar=0x7f110060;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f110061;
    public static final int Base_Theme_MaterialComponents_Light_Dialog=0x7f110062;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Alert=0x7f110063;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Bridge=0x7f110064;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f110065;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f110066;
    public static final int Base_Theme_MaterialComponents_Light_DialogWhenLarge=0x7f110067;
    public static final int Base_ThemeOverlay_AppCompat=0x7f110068;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f110069;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f11006a;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f11006b;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f11006c;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f11006d;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f11006e;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog=0x7f11006f;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f110070;
    public static final int Base_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f110071;
    public static final int Base_V14_Theme_MaterialComponents=0x7f110072;
    public static final int Base_V14_Theme_MaterialComponents_Bridge=0x7f110073;
    public static final int Base_V14_Theme_MaterialComponents_Dialog=0x7f110074;
    public static final int Base_V14_Theme_MaterialComponents_Dialog_Bridge=0x7f110075;
    public static final int Base_V14_Theme_MaterialComponents_Light=0x7f110076;
    public static final int Base_V14_Theme_MaterialComponents_Light_Bridge=0x7f110077;
    public static final int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f110078;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog=0x7f110079;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog_Bridge=0x7f11007a;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog=0x7f11007b;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f11007c;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f11007d;
    public static final int Base_V21_Theme_AppCompat=0x7f11007e;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f11007f;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f110080;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f110081;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f110082;
    public static final int Base_V22_Theme_AppCompat=0x7f110083;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f110084;
    public static final int Base_V23_Theme_AppCompat=0x7f110085;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f110086;
    public static final int Base_V26_Theme_AppCompat=0x7f110087;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f110088;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f110089;
    public static final int Base_V28_Theme_AppCompat=0x7f11008a;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f11008b;
    public static final int Base_V7_Theme_AppCompat=0x7f11008c;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f11008d;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f11008e;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f11008f;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f110090;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f110091;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f110092;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f110093;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f110094;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f110095;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f110096;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f110097;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f110098;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f110099;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f11009a;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f11009b;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f11009c;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f11009d;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f11009e;
    public static final int Base_Widget_AppCompat_Button=0x7f11009f;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f1100a0;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f1100a1;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f1100a2;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f1100a3;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f1100a4;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f1100a5;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f1100a6;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f1100a7;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f1100a8;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f1100a9;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f1100aa;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f1100ab;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f1100ac;
    public static final int Base_Widget_AppCompat_EditText=0x7f1100ad;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f1100ae;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f1100af;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f1100b0;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f1100b1;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f1100b2;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1100b3;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f1100b4;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f1100b5;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f1100b6;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f1100b7;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f1100b8;
    public static final int Base_Widget_AppCompat_ListView=0x7f1100b9;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f1100ba;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f1100bb;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f1100bc;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f1100bd;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f1100be;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f1100bf;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f1100c0;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f1100c1;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f1100c2;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f1100c3;
    public static final int Base_Widget_AppCompat_SearchView=0x7f1100c4;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1100c5;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1100c6;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1100c7;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1100c8;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1100c9;
    public static final int Base_Widget_AppCompat_TextView=0x7f1100ca;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1100cb;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1100cc;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1100cd;
    public static final int Base_Widget_Design_TabLayout=0x7f1100ce;
    public static final int Base_Widget_MaterialComponents_AutoCompleteTextView=0x7f1100cf;
    public static final int Base_Widget_MaterialComponents_CheckedTextView=0x7f1100d0;
    public static final int Base_Widget_MaterialComponents_Chip=0x7f1100d1;
    public static final int Base_Widget_MaterialComponents_PopupMenu=0x7f1100d2;
    public static final int Base_Widget_MaterialComponents_PopupMenu_ContextMenu=0x7f1100d3;
    public static final int Base_Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x7f1100d4;
    public static final int Base_Widget_MaterialComponents_PopupMenu_Overflow=0x7f1100d5;
    public static final int Base_Widget_MaterialComponents_TextInputEditText=0x7f1100d6;
    public static final int Base_Widget_MaterialComponents_TextInputLayout=0x7f1100d7;
    public static final int Base_Widget_MaterialComponents_TextView=0x7f1100d8;
    public static final int BaseTheme=0x7f1100d9;
    public static final int BlankActivityTheme=0x7f1100da;
    public static final int CardView=0x7f1100db;
    public static final int CardView_Dark=0x7f1100dc;
    public static final int CardView_Light=0x7f1100dd;
    public static final int CheckBoxTheme=0x7f1100de;
    public static final int DialogStyle=0x7f1100df;
    public static final int DimmingInstructionText=0x7f1100e0;
    public static final int EmptyTheme=0x7f1100e1;
    public static final int MaterialAlertDialog_MaterialComponents=0x7f1100e2;
    public static final int MaterialAlertDialog_MaterialComponents_Body_Text=0x7f1100e3;
    public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Calendar=0x7f1100e4;
    public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Spinner=0x7f1100e5;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Icon=0x7f1100e6;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Icon_CenterStacked=0x7f1100e7;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Panel=0x7f1100e8;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Panel_CenterStacked=0x7f1100e9;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Text=0x7f1100ea;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Text_CenterStacked=0x7f1100eb;
    public static final int MaterialTextBody1=0x7f1100ec;
    public static final int MaterialTextButton=0x7f1100ed;
    public static final int MaterialTextSubHeading=0x7f1100ee;
    public static final int MaterialTextTitle=0x7f1100ef;
    public static final int Platform_AppCompat=0x7f1100f0;
    public static final int Platform_AppCompat_Light=0x7f1100f1;
    public static final int Platform_MaterialComponents=0x7f1100f2;
    public static final int Platform_MaterialComponents_Dialog=0x7f1100f3;
    public static final int Platform_MaterialComponents_Light=0x7f1100f4;
    public static final int Platform_MaterialComponents_Light_Dialog=0x7f1100f5;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f1100f6;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f1100f7;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f1100f8;
    public static final int Platform_V21_AppCompat=0x7f1100f9;
    public static final int Platform_V21_AppCompat_Light=0x7f1100fa;
    public static final int Platform_V25_AppCompat=0x7f1100fb;
    public static final int Platform_V25_AppCompat_Light=0x7f1100fc;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f1100fd;
    public static final int Preference=0x7f1100fe;
    public static final int Preference_Category=0x7f1100ff;
    public static final int Preference_Category_Material=0x7f110100;
    public static final int Preference_CheckBoxPreference=0x7f110101;
    public static final int Preference_CheckBoxPreference_Material=0x7f110102;
    public static final int Preference_DialogPreference=0x7f110103;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f110104;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f110105;
    public static final int Preference_DialogPreference_Material=0x7f110106;
    public static final int Preference_DropDown=0x7f110107;
    public static final int Preference_DropDown_Material=0x7f110108;
    public static final int Preference_Information=0x7f110109;
    public static final int Preference_Information_Material=0x7f11010a;
    public static final int Preference_Material=0x7f11010b;
    public static final int Preference_PreferenceScreen=0x7f11010c;
    public static final int Preference_PreferenceScreen_Material=0x7f11010d;
    public static final int Preference_SeekBarPreference=0x7f11010e;
    public static final int Preference_SeekBarPreference_Material=0x7f11010f;
    public static final int Preference_SwitchPreference=0x7f110110;
    public static final int Preference_SwitchPreference_Material=0x7f110111;
    public static final int Preference_SwitchPreferenceCompat=0x7f110112;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f110113;
    public static final int PreferenceCategoryTitleTextStyle=0x7f110114;
    public static final int PreferenceFragment=0x7f110115;
    public static final int PreferenceFragment_Material=0x7f110116;
    public static final int PreferenceFragmentList=0x7f110117;
    public static final int PreferenceFragmentList_Material=0x7f110118;
    public static final int PreferenceSummaryTextStyle=0x7f110119;
    public static final int PreferenceThemeOverlay=0x7f11011a;
    public static final int PreferenceThemeOverlay_v14=0x7f11011b;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f11011c;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f11011d;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f11011e;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f11011f;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f110120;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f110121;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f110122;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f110123;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f110124;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f110125;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f110126;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f110127;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f110128;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f110129;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f11012a;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f11012b;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f11012c;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f11012d;
    public static final int SettingsActionBar=0x7f11012e;
    public static final int SettingsActionBarTheme=0x7f11012f;
    public static final int SettingsTheme=0x7f110130;
    public static final int ShapeAppearance_MaterialComponents=0x7f110131;
    public static final int ShapeAppearance_MaterialComponents_LargeComponent=0x7f110132;
    public static final int ShapeAppearance_MaterialComponents_MediumComponent=0x7f110133;
    public static final int ShapeAppearance_MaterialComponents_SmallComponent=0x7f110134;
    public static final int ShapeAppearance_MaterialComponents_Test=0x7f110135;
    public static final int ShapeAppearanceOverlay=0x7f110136;
    public static final int ShapeAppearanceOverlay_BottomLeftDifferentCornerSize=0x7f110137;
    public static final int ShapeAppearanceOverlay_BottomRightCut=0x7f110138;
    public static final int ShapeAppearanceOverlay_Cut=0x7f110139;
    public static final int ShapeAppearanceOverlay_DifferentCornerSize=0x7f11013a;
    public static final int ShapeAppearanceOverlay_MaterialComponents_BottomSheet=0x7f11013b;
    public static final int ShapeAppearanceOverlay_MaterialComponents_Chip=0x7f11013c;
    public static final int ShapeAppearanceOverlay_MaterialComponents_ExtendedFloatingActionButton=0x7f11013d;
    public static final int ShapeAppearanceOverlay_MaterialComponents_FloatingActionButton=0x7f11013e;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x7f11013f;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Window_Fullscreen=0x7f110140;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Year=0x7f110141;
    public static final int ShapeAppearanceOverlay_MaterialComponents_TextInputLayout_FilledBox=0x7f110142;
    public static final int ShapeAppearanceOverlay_TopLeftCut=0x7f110143;
    public static final int ShapeAppearanceOverlay_TopRightDifferentCornerSize=0x7f110144;
    public static final int TalkBackSettings=0x7f110145;
    public static final int Test_ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x7f110146;
    public static final int Test_Theme_MaterialComponents_MaterialCalendar=0x7f110147;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar=0x7f110148;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day=0x7f110149;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x7f11014a;
    public static final int TestStyleWithLineHeight=0x7f11014b;
    public static final int TestStyleWithLineHeightAppearance=0x7f11014c;
    public static final int TestStyleWithThemeLineHeightAttribute=0x7f11014d;
    public static final int TestStyleWithoutLineHeight=0x7f11014e;
    public static final int TestThemeWithLineHeight=0x7f11014f;
    public static final int TestThemeWithLineHeightDisabled=0x7f110150;
    public static final int TextAppearance_AppCompat=0x7f110151;
    public static final int TextAppearance_AppCompat_Body1=0x7f110152;
    public static final int TextAppearance_AppCompat_Body2=0x7f110153;
    public static final int TextAppearance_AppCompat_Button=0x7f110154;
    public static final int TextAppearance_AppCompat_Caption=0x7f110155;
    public static final int TextAppearance_AppCompat_Display1=0x7f110156;
    public static final int TextAppearance_AppCompat_Display2=0x7f110157;
    public static final int TextAppearance_AppCompat_Display3=0x7f110158;
    public static final int TextAppearance_AppCompat_Display4=0x7f110159;
    public static final int TextAppearance_AppCompat_Headline=0x7f11015a;
    public static final int TextAppearance_AppCompat_Inverse=0x7f11015b;
    public static final int TextAppearance_AppCompat_Large=0x7f11015c;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f11015d;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f11015e;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f11015f;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f110160;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f110161;
    public static final int TextAppearance_AppCompat_Medium=0x7f110162;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f110163;
    public static final int TextAppearance_AppCompat_Menu=0x7f110164;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f110165;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f110166;
    public static final int TextAppearance_AppCompat_Small=0x7f110167;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f110168;
    public static final int TextAppearance_AppCompat_Subhead=0x7f110169;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f11016a;
    public static final int TextAppearance_AppCompat_Title=0x7f11016b;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f11016c;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f11016d;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f11016e;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f11016f;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f110170;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f110171;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f110172;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f110173;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f110174;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f110175;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f110176;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f110177;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f110178;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f110179;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f11017a;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f11017b;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f11017c;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f11017d;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f11017e;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f11017f;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f110180;
    public static final int TextAppearance_Compat_Notification=0x7f110181;
    public static final int TextAppearance_Compat_Notification_Info=0x7f110182;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f110183;
    public static final int TextAppearance_Compat_Notification_Time=0x7f110184;
    public static final int TextAppearance_Compat_Notification_Title=0x7f110185;
    public static final int TextAppearance_Design_CollapsingToolbar_Expanded=0x7f110186;
    public static final int TextAppearance_Design_Counter=0x7f110187;
    public static final int TextAppearance_Design_Counter_Overflow=0x7f110188;
    public static final int TextAppearance_Design_Error=0x7f110189;
    public static final int TextAppearance_Design_HelperText=0x7f11018a;
    public static final int TextAppearance_Design_Hint=0x7f11018b;
    public static final int TextAppearance_Design_Snackbar_Message=0x7f11018c;
    public static final int TextAppearance_Design_Tab=0x7f11018d;
    public static final int TextAppearance_MaterialComponents_Badge=0x7f11018e;
    public static final int TextAppearance_MaterialComponents_Body1=0x7f11018f;
    public static final int TextAppearance_MaterialComponents_Body2=0x7f110190;
    public static final int TextAppearance_MaterialComponents_Button=0x7f110191;
    public static final int TextAppearance_MaterialComponents_Caption=0x7f110192;
    public static final int TextAppearance_MaterialComponents_Chip=0x7f110193;
    public static final int TextAppearance_MaterialComponents_Headline1=0x7f110194;
    public static final int TextAppearance_MaterialComponents_Headline2=0x7f110195;
    public static final int TextAppearance_MaterialComponents_Headline3=0x7f110196;
    public static final int TextAppearance_MaterialComponents_Headline4=0x7f110197;
    public static final int TextAppearance_MaterialComponents_Headline5=0x7f110198;
    public static final int TextAppearance_MaterialComponents_Headline6=0x7f110199;
    public static final int TextAppearance_MaterialComponents_Overline=0x7f11019a;
    public static final int TextAppearance_MaterialComponents_Subtitle1=0x7f11019b;
    public static final int TextAppearance_MaterialComponents_Subtitle2=0x7f11019c;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f11019d;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f11019e;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f11019f;
    public static final int Theme_AppCompat=0x7f1101a0;
    public static final int Theme_AppCompat_CompactMenu=0x7f1101a1;
    public static final int Theme_AppCompat_DayNight=0x7f1101a2;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f1101a3;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f1101a4;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f1101a5;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f1101a6;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f1101a7;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f1101a8;
    public static final int Theme_AppCompat_Dialog=0x7f1101a9;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f1101aa;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f1101ab;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f1101ac;
    public static final int Theme_AppCompat_Light=0x7f1101ad;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f1101ae;
    public static final int Theme_AppCompat_Light_Dialog=0x7f1101af;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f1101b0;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f1101b1;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f1101b2;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f1101b3;
    public static final int Theme_AppCompat_NoActionBar=0x7f1101b4;
    public static final int Theme_Design=0x7f1101b5;
    public static final int Theme_Design_BottomSheetDialog=0x7f1101b6;
    public static final int Theme_Design_Light=0x7f1101b7;
    public static final int Theme_Design_Light_BottomSheetDialog=0x7f1101b8;
    public static final int Theme_Design_Light_NoActionBar=0x7f1101b9;
    public static final int Theme_Design_NoActionBar=0x7f1101ba;
    public static final int Theme_MaterialComponents=0x7f1101bb;
    public static final int Theme_MaterialComponents_BottomSheetDialog=0x7f1101bc;
    public static final int Theme_MaterialComponents_Bridge=0x7f1101bd;
    public static final int Theme_MaterialComponents_CompactMenu=0x7f1101be;
    public static final int Theme_MaterialComponents_DayNight=0x7f1101bf;
    public static final int Theme_MaterialComponents_DayNight_BottomSheetDialog=0x7f1101c0;
    public static final int Theme_MaterialComponents_DayNight_Bridge=0x7f1101c1;
    public static final int Theme_MaterialComponents_DayNight_DarkActionBar=0x7f1101c2;
    public static final int Theme_MaterialComponents_DayNight_DarkActionBar_Bridge=0x7f1101c3;
    public static final int Theme_MaterialComponents_DayNight_Dialog=0x7f1101c4;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Alert=0x7f1101c5;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Alert_Bridge=0x7f1101c6;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Bridge=0x7f1101c7;
    public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize=0x7f1101c8;
    public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize_Bridge=0x7f1101c9;
    public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth=0x7f1101ca;
    public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth_Bridge=0x7f1101cb;
    public static final int Theme_MaterialComponents_DayNight_DialogWhenLarge=0x7f1101cc;
    public static final int Theme_MaterialComponents_DayNight_NoActionBar=0x7f1101cd;
    public static final int Theme_MaterialComponents_DayNight_NoActionBar_Bridge=0x7f1101ce;
    public static final int Theme_MaterialComponents_Dialog=0x7f1101cf;
    public static final int Theme_MaterialComponents_Dialog_Alert=0x7f1101d0;
    public static final int Theme_MaterialComponents_Dialog_Alert_Bridge=0x7f1101d1;
    public static final int Theme_MaterialComponents_Dialog_Bridge=0x7f1101d2;
    public static final int Theme_MaterialComponents_Dialog_FixedSize=0x7f1101d3;
    public static final int Theme_MaterialComponents_Dialog_FixedSize_Bridge=0x7f1101d4;
    public static final int Theme_MaterialComponents_Dialog_MinWidth=0x7f1101d5;
    public static final int Theme_MaterialComponents_Dialog_MinWidth_Bridge=0x7f1101d6;
    public static final int Theme_MaterialComponents_DialogWhenLarge=0x7f1101d7;
    public static final int Theme_MaterialComponents_Light=0x7f1101d8;
    public static final int Theme_MaterialComponents_Light_BarSize=0x7f1101d9;
    public static final int Theme_MaterialComponents_Light_BottomSheetDialog=0x7f1101da;
    public static final int Theme_MaterialComponents_Light_Bridge=0x7f1101db;
    public static final int Theme_MaterialComponents_Light_DarkActionBar=0x7f1101dc;
    public static final int Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f1101dd;
    public static final int Theme_MaterialComponents_Light_Dialog=0x7f1101de;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert=0x7f1101df;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert_Bridge=0x7f1101e0;
    public static final int Theme_MaterialComponents_Light_Dialog_Bridge=0x7f1101e1;
    public static final int Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f1101e2;
    public static final int Theme_MaterialComponents_Light_Dialog_FixedSize_Bridge=0x7f1101e3;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f1101e4;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth_Bridge=0x7f1101e5;
    public static final int Theme_MaterialComponents_Light_DialogWhenLarge=0x7f1101e6;
    public static final int Theme_MaterialComponents_Light_LargeTouch=0x7f1101e7;
    public static final int Theme_MaterialComponents_Light_NoActionBar=0x7f1101e8;
    public static final int Theme_MaterialComponents_Light_NoActionBar_Bridge=0x7f1101e9;
    public static final int Theme_MaterialComponents_NoActionBar=0x7f1101ea;
    public static final int Theme_MaterialComponents_NoActionBar_Bridge=0x7f1101eb;
    public static final int ThemeOverlay_AppCompat=0x7f1101ec;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f1101ed;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f1101ee;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f1101ef;
    public static final int ThemeOverlay_AppCompat_DayNight=0x7f1101f0;
    public static final int ThemeOverlay_AppCompat_DayNight_ActionBar=0x7f1101f1;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f1101f2;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f1101f3;
    public static final int ThemeOverlay_AppCompat_Light=0x7f1101f4;
    public static final int ThemeOverlay_Design_TextInputEditText=0x7f1101f5;
    public static final int ThemeOverlay_MaterialComponents=0x7f1101f6;
    public static final int ThemeOverlay_MaterialComponents_ActionBar=0x7f1101f7;
    public static final int ThemeOverlay_MaterialComponents_ActionBar_Primary=0x7f1101f8;
    public static final int ThemeOverlay_MaterialComponents_ActionBar_Surface=0x7f1101f9;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView=0x7f1101fa;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox=0x7f1101fb;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x7f1101fc;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x7f1101fd;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x7f1101fe;
    public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Primary=0x7f1101ff;
    public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Surface=0x7f110200;
    public static final int ThemeOverlay_MaterialComponents_BottomSheetDialog=0x7f110201;
    public static final int ThemeOverlay_MaterialComponents_Dark=0x7f110202;
    public static final int ThemeOverlay_MaterialComponents_Dark_ActionBar=0x7f110203;
    public static final int ThemeOverlay_MaterialComponents_DayNight_BottomSheetDialog=0x7f110204;
    public static final int ThemeOverlay_MaterialComponents_Dialog=0x7f110205;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f110206;
    public static final int ThemeOverlay_MaterialComponents_Light=0x7f110207;
    public static final int ThemeOverlay_MaterialComponents_Light_BottomSheetDialog=0x7f110208;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f110209;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Centered=0x7f11020a;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date=0x7f11020b;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Calendar=0x7f11020c;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text=0x7f11020d;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text_Day=0x7f11020e;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Spinner=0x7f11020f;
    public static final int ThemeOverlay_MaterialComponents_MaterialCalendar=0x7f110210;
    public static final int ThemeOverlay_MaterialComponents_MaterialCalendar_Fullscreen=0x7f110211;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText=0x7f110212;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox=0x7f110213;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f110214;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox=0x7f110215;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f110216;
    public static final int ThemeOverlay_MaterialComponents_Toolbar_Primary=0x7f110217;
    public static final int ThemeOverlay_MaterialComponents_Toolbar_Surface=0x7f110218;
    public static final int TrainingActionBarTheme=0x7f110219;
    public static final int TrainingActivityTheme=0x7f11021a;
    public static final int Widget_AppCompat_ActionBar=0x7f11021b;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f11021c;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f11021d;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f11021e;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f11021f;
    public static final int Widget_AppCompat_ActionButton=0x7f110220;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f110221;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f110222;
    public static final int Widget_AppCompat_ActionMode=0x7f110223;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f110224;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f110225;
    public static final int Widget_AppCompat_Button=0x7f110226;
    public static final int Widget_AppCompat_Button_Borderless=0x7f110227;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f110228;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f110229;
    public static final int Widget_AppCompat_Button_Colored=0x7f11022a;
    public static final int Widget_AppCompat_Button_Small=0x7f11022b;
    public static final int Widget_AppCompat_ButtonBar=0x7f11022c;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f11022d;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f11022e;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f11022f;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f110230;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f110231;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f110232;
    public static final int Widget_AppCompat_EditText=0x7f110233;
    public static final int Widget_AppCompat_ImageButton=0x7f110234;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f110235;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f110236;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f110237;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f110238;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f110239;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f11023a;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f11023b;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f11023c;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f11023d;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f11023e;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f11023f;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f110240;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f110241;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f110242;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f110243;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f110244;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f110245;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f110246;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f110247;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f110248;
    public static final int Widget_AppCompat_Light_SearchView=0x7f110249;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f11024a;
    public static final int Widget_AppCompat_ListMenuView=0x7f11024b;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f11024c;
    public static final int Widget_AppCompat_ListView=0x7f11024d;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f11024e;
    public static final int Widget_AppCompat_ListView_Menu=0x7f11024f;
    public static final int Widget_AppCompat_PopupMenu=0x7f110250;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f110251;
    public static final int Widget_AppCompat_PopupWindow=0x7f110252;
    public static final int Widget_AppCompat_ProgressBar=0x7f110253;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f110254;
    public static final int Widget_AppCompat_RatingBar=0x7f110255;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f110256;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f110257;
    public static final int Widget_AppCompat_SearchView=0x7f110258;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f110259;
    public static final int Widget_AppCompat_SeekBar=0x7f11025a;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f11025b;
    public static final int Widget_AppCompat_Spinner=0x7f11025c;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f11025d;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f11025e;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f11025f;
    public static final int Widget_AppCompat_TextView=0x7f110260;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f110261;
    public static final int Widget_AppCompat_Toolbar=0x7f110262;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f110263;
    public static final int Widget_Compat_NotificationActionContainer=0x7f110264;
    public static final int Widget_Compat_NotificationActionText=0x7f110265;
    public static final int Widget_Design_AppBarLayout=0x7f110266;
    public static final int Widget_Design_BottomNavigationView=0x7f110267;
    public static final int Widget_Design_BottomSheet_Modal=0x7f110268;
    public static final int Widget_Design_CollapsingToolbar=0x7f110269;
    public static final int Widget_Design_FloatingActionButton=0x7f11026a;
    public static final int Widget_Design_NavigationView=0x7f11026b;
    public static final int Widget_Design_ScrimInsetsFrameLayout=0x7f11026c;
    public static final int Widget_Design_Snackbar=0x7f11026d;
    public static final int Widget_Design_TabLayout=0x7f11026e;
    public static final int Widget_Design_TextInputLayout=0x7f11026f;
    public static final int Widget_MaterialComponents_ActionBar_Primary=0x7f110270;
    public static final int Widget_MaterialComponents_ActionBar_PrimarySurface=0x7f110271;
    public static final int Widget_MaterialComponents_ActionBar_Solid=0x7f110272;
    public static final int Widget_MaterialComponents_ActionBar_Surface=0x7f110273;
    public static final int Widget_MaterialComponents_AppBarLayout_Primary=0x7f110274;
    public static final int Widget_MaterialComponents_AppBarLayout_PrimarySurface=0x7f110275;
    public static final int Widget_MaterialComponents_AppBarLayout_Surface=0x7f110276;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox=0x7f110277;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x7f110278;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x7f110279;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x7f11027a;
    public static final int Widget_MaterialComponents_Badge=0x7f11027b;
    public static final int Widget_MaterialComponents_BottomAppBar=0x7f11027c;
    public static final int Widget_MaterialComponents_BottomAppBar_Colored=0x7f11027d;
    public static final int Widget_MaterialComponents_BottomAppBar_PrimarySurface=0x7f11027e;
    public static final int Widget_MaterialComponents_BottomNavigationView=0x7f11027f;
    public static final int Widget_MaterialComponents_BottomNavigationView_Colored=0x7f110280;
    public static final int Widget_MaterialComponents_BottomNavigationView_PrimarySurface=0x7f110281;
    public static final int Widget_MaterialComponents_BottomSheet=0x7f110282;
    public static final int Widget_MaterialComponents_BottomSheet_Modal=0x7f110283;
    public static final int Widget_MaterialComponents_Button=0x7f110284;
    public static final int Widget_MaterialComponents_Button_Icon=0x7f110285;
    public static final int Widget_MaterialComponents_Button_OutlinedButton=0x7f110286;
    public static final int Widget_MaterialComponents_Button_OutlinedButton_Icon=0x7f110287;
    public static final int Widget_MaterialComponents_Button_TextButton=0x7f110288;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog=0x7f110289;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Flush=0x7f11028a;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Icon=0x7f11028b;
    public static final int Widget_MaterialComponents_Button_TextButton_Icon=0x7f11028c;
    public static final int Widget_MaterialComponents_Button_TextButton_Snackbar=0x7f11028d;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton=0x7f11028e;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton_Icon=0x7f11028f;
    public static final int Widget_MaterialComponents_CardView=0x7f110290;
    public static final int Widget_MaterialComponents_CheckedTextView=0x7f110291;
    public static final int Widget_MaterialComponents_Chip_Action=0x7f110292;
    public static final int Widget_MaterialComponents_Chip_Choice=0x7f110293;
    public static final int Widget_MaterialComponents_Chip_Entry=0x7f110294;
    public static final int Widget_MaterialComponents_Chip_Filter=0x7f110295;
    public static final int Widget_MaterialComponents_ChipGroup=0x7f110296;
    public static final int Widget_MaterialComponents_CompoundButton_CheckBox=0x7f110297;
    public static final int Widget_MaterialComponents_CompoundButton_RadioButton=0x7f110298;
    public static final int Widget_MaterialComponents_CompoundButton_Switch=0x7f110299;
    public static final int Widget_MaterialComponents_ExtendedFloatingActionButton=0x7f11029a;
    public static final int Widget_MaterialComponents_ExtendedFloatingActionButton_Icon=0x7f11029b;
    public static final int Widget_MaterialComponents_FloatingActionButton=0x7f11029c;
    public static final int Widget_MaterialComponents_Light_ActionBar_Solid=0x7f11029d;
    public static final int Widget_MaterialComponents_MaterialButtonToggleGroup=0x7f11029e;
    public static final int Widget_MaterialComponents_MaterialCalendar=0x7f11029f;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day=0x7f1102a0;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Invalid=0x7f1102a1;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x7f1102a2;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Today=0x7f1102a3;
    public static final int Widget_MaterialComponents_MaterialCalendar_DayTextView=0x7f1102a4;
    public static final int Widget_MaterialComponents_MaterialCalendar_Fullscreen=0x7f1102a5;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderConfirmButton=0x7f1102a6;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderDivider=0x7f1102a7;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderLayout=0x7f1102a8;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection=0x7f1102a9;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection_Fullscreen=0x7f1102aa;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderTitle=0x7f1102ab;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderToggleButton=0x7f1102ac;
    public static final int Widget_MaterialComponents_MaterialCalendar_Item=0x7f1102ad;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year=0x7f1102ae;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year_Selected=0x7f1102af;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year_Today=0x7f1102b0;
    public static final int Widget_MaterialComponents_NavigationView=0x7f1102b1;
    public static final int Widget_MaterialComponents_PopupMenu=0x7f1102b2;
    public static final int Widget_MaterialComponents_PopupMenu_ContextMenu=0x7f1102b3;
    public static final int Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x7f1102b4;
    public static final int Widget_MaterialComponents_PopupMenu_Overflow=0x7f1102b5;
    public static final int Widget_MaterialComponents_Snackbar=0x7f1102b6;
    public static final int Widget_MaterialComponents_Snackbar_FullWidth=0x7f1102b7;
    public static final int Widget_MaterialComponents_TabLayout=0x7f1102b8;
    public static final int Widget_MaterialComponents_TabLayout_Colored=0x7f1102b9;
    public static final int Widget_MaterialComponents_TabLayout_PrimarySurface=0x7f1102ba;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox=0x7f1102bb;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f1102bc;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox=0x7f1102bd;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f1102be;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox=0x7f1102bf;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense=0x7f1102c0;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense_ExposedDropdownMenu=0x7f1102c1;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_ExposedDropdownMenu=0x7f1102c2;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox=0x7f1102c3;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense=0x7f1102c4;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense_ExposedDropdownMenu=0x7f1102c5;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_ExposedDropdownMenu=0x7f1102c6;
    public static final int Widget_MaterialComponents_TextView=0x7f1102c7;
    public static final int Widget_MaterialComponents_Toolbar=0x7f1102c8;
    public static final int Widget_MaterialComponents_Toolbar_Primary=0x7f1102c9;
    public static final int Widget_MaterialComponents_Toolbar_PrimarySurface=0x7f1102ca;
    public static final int Widget_MaterialComponents_Toolbar_Surface=0x7f1102cb;
    public static final int Widget_Support_CoordinatorLayout=0x7f1102cc;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.talkback:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.talkback:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.talkback:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.talkback:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.talkback:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.talkback:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.talkback:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.talkback:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.talkback:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.talkback:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.talkback:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.talkback:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.talkback:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.talkback:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.talkback:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.talkback:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.talkback:icon}</code></td><td>Icon drawable to display at the start of this view.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.talkback:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.talkback:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.talkback:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.talkback:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.talkback:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.talkback:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.talkback:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.talkback:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.talkback:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.talkback:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.talkback:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f040038, 0x7f04003f, 0x7f040040, 0x7f0400ba, 
      0x7f0400bb, 0x7f0400bc, 0x7f0400bd, 0x7f0400be, 
      0x7f0400bf, 0x7f0400d9, 0x7f0400ea, 0x7f0400eb, 
      0x7f040100, 0x7f04013f, 0x7f040145, 0x7f04014b, 
      0x7f04014c, 0x7f04014e, 0x7f04015b, 0x7f04016a, 
      0x7f04019d, 0x7f0401c0, 0x7f0401d7, 0x7f0401e5, 
      0x7f0401e6, 0x7f04022a, 0x7f04022d, 0x7f04027c, 
      0x7f040286
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.talkback:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.talkback:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.talkback:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.talkback:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.talkback:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.talkback:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f040038, 0x7f04003f, 0x7f04009c, 0x7f04013f, 
      0x7f04022d, 0x7f040286
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.talkback:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.talkback:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f040116, 0x7f04015c
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.android.talkback:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.talkback:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.talkback:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.talkback:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.talkback:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.talkback:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.talkback:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f040068, 0x7f040069, 0x7f040192, 
      0x7f040193, 0x7f0401bd, 0x7f040209, 0x7f04020b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded com.android.talkback:expanded}</code></td><td>The initial expanded state for the AppBarLayout.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScroll com.android.talkback:liftOnScroll}</code></td><td>Whether the {@link AppBarLayout} should lift on scroll.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScrollTargetViewId com.android.talkback:liftOnScrollTargetViewId}</code></td><td>The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).</td></tr>
     * <tr><td><code>{@link #AppBarLayout_statusBarForeground com.android.talkback:statusBarForeground}</code></td><td>The drawable to display in front of the layout's content, but behind the status bar.</td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     * @see #AppBarLayout_liftOnScroll
     * @see #AppBarLayout_liftOnScrollTargetViewId
     * @see #AppBarLayout_statusBarForeground
     */
    public static final int[] AppBarLayout={
      0x010100d4, 0x0101048f, 0x01010540, 0x7f040100, 
      0x7f040117, 0x7f04018a, 0x7f04018b, 0x7f040224
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static final int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static final int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Deprecated. Elevation is now controlled via a state list animator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int AppBarLayout_elevation=3;
    /**
     * <p>
     * @attr description
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:expanded
     */
    public static final int AppBarLayout_expanded=4;
    /**
     * <p>
     * @attr description
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:liftOnScroll
     */
    public static final int AppBarLayout_liftOnScroll=5;
    /**
     * <p>
     * @attr description
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:liftOnScrollTargetViewId
     */
    public static final int AppBarLayout_liftOnScrollTargetViewId=6;
    /**
     * <p>
     * @attr description
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:statusBarForeground
     */
    public static final int AppBarLayout_statusBarForeground=7;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed com.android.talkback:state_collapsed}</code></td><td>@deprecated in favor of {@link R.attr#state_lifted}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible com.android.talkback:state_collapsible}</code></td><td>@deprecated in favor of {@link R.attr#state_liftable}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_liftable com.android.talkback:state_liftable}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_lifted com.android.talkback:state_lifted}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).</td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     * @see #AppBarLayoutStates_state_liftable
     * @see #AppBarLayoutStates_state_lifted
     */
    @Deprecated
    public static final int[] AppBarLayoutStates={
      0x7f04021e, 0x7f04021f, 0x7f040221, 0x7f040222
    };
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_lifted}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:state_collapsed
     */
    @Deprecated
    public static final int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_liftable}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:state_collapsible
     */
    @Deprecated
    public static final int AppBarLayoutStates_state_collapsible=1;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:state_liftable
     */
    public static final int AppBarLayoutStates_state_liftable=2;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:state_lifted
     */
    public static final int AppBarLayoutStates_state_lifted=3;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags com.android.talkback:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator com.android.talkback:layout_scrollInterpolator}</code></td><td>An interpolator to use when scrolling this View.</td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
      0x7f040188, 0x7f040189
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:layout_scrollFlags
     */
    public static final int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>
     * @attr description
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:layout_scrollInterpolator
     */
    public static final int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.talkback:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.talkback:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.talkback:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f040216, 0x7f04027a, 0x7f04027b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.talkback:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.talkback:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.talkback:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f040277, 0x7f040278, 0x7f040279
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.talkback:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.talkback:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.talkback:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.talkback:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.talkback:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.android.talkback:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.android.talkback:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.android.talkback:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.android.talkback:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.android.talkback:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.android.talkback:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.android.talkback:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.android.talkback:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.android.talkback:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.talkback:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.android.talkback:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.android.talkback:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.android.talkback:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.talkback:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.android.talkback:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f040033, 0x7f040034, 0x7f040035, 
      0x7f040036, 0x7f040037, 0x7f0400ef, 0x7f0400f0, 
      0x7f0400f1, 0x7f0400f2, 0x7f0400f4, 0x7f0400f5, 
      0x7f0400f6, 0x7f0400f7, 0x7f04012d, 0x7f040130, 
      0x7f040138, 0x7f04017d, 0x7f04018c, 0x7f040254, 
      0x7f04026f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:drawableBottomCompat
     */
    public static final int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:drawableEndCompat
     */
    public static final int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:drawableLeftCompat
     */
    public static final int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:drawableRightCompat
     */
    public static final int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:drawableStartCompat
     */
    public static final int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:drawableTint
     */
    public static final int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:drawableTintMode
     */
    public static final int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:drawableTopCompat
     */
    public static final int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontVariationSettings
     */
    public static final int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:textLocale
     */
    public static final int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.talkback:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.talkback:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.talkback:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.talkback:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.talkback:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.talkback:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.talkback:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.talkback:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.talkback:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.talkback:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.talkback:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.talkback:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.talkback:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.talkback:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.talkback:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.talkback:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.talkback:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.talkback:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.talkback:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.talkback:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.talkback:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.talkback:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.talkback:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.talkback:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.talkback:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.talkback:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.talkback:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.talkback:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.talkback:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.talkback:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.talkback:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.talkback:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.talkback:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.talkback:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.talkback:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.talkback:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.talkback:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.talkback:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.talkback:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.talkback:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.talkback:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.talkback:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.talkback:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.talkback:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.talkback:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.talkback:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.talkback:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.talkback:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.talkback:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.talkback:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.talkback:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.talkback:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.talkback:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.talkback:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.talkback:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.talkback:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.talkback:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.android.talkback:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.talkback:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.talkback:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.talkback:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.talkback:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.talkback:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.talkback:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.talkback:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.talkback:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.talkback:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.talkback:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.talkback:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.talkback:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.android.talkback:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.android.talkback:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.talkback:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.talkback:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.talkback:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.talkback:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.talkback:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.talkback:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.android.talkback:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.talkback:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.talkback:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.android.talkback:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.talkback:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.talkback:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.talkback:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.talkback:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.talkback:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.talkback:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.talkback:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.talkback:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.talkback:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.talkback:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.talkback:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.talkback:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.talkback:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.talkback:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.talkback:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.talkback:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.talkback:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.talkback:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.talkback:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.talkback:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.talkback:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.talkback:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.talkback:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.talkback:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.talkback:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.talkback:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.talkback:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.talkback:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.talkback:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.talkback:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.android.talkback:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.talkback:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.talkback:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.talkback:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.talkback:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.talkback:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.talkback:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.talkback:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.talkback:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.talkback:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.talkback:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
      0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
      0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
      0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f04000e, 
      0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
      0x7f040013, 0x7f040014, 0x7f040015, 0x7f040016, 
      0x7f040017, 0x7f040018, 0x7f040019, 0x7f04001a, 
      0x7f04001b, 0x7f04001c, 0x7f04001d, 0x7f04001e, 
      0x7f040022, 0x7f040024, 0x7f040025, 0x7f040026, 
      0x7f040027, 0x7f040032, 0x7f040052, 0x7f040061, 
      0x7f040062, 0x7f040063, 0x7f040064, 0x7f040065, 
      0x7f04006b, 0x7f04006c, 0x7f040078, 0x7f04007f, 
      0x7f0400a2, 0x7f0400a3, 0x7f0400a4, 0x7f0400a5, 
      0x7f0400a6, 0x7f0400a7, 0x7f0400a8, 0x7f0400af, 
      0x7f0400b0, 0x7f0400b7, 0x7f0400c6, 0x7f0400e1, 
      0x7f0400e6, 0x7f0400e7, 0x7f0400ec, 0x7f0400ee, 
      0x7f0400f9, 0x7f0400fa, 0x7f0400fc, 0x7f0400fd, 
      0x7f0400ff, 0x7f04014b, 0x7f04015a, 0x7f04018e, 
      0x7f04018f, 0x7f040190, 0x7f040191, 0x7f040194, 
      0x7f040195, 0x7f040196, 0x7f040197, 0x7f040198, 
      0x7f040199, 0x7f04019a, 0x7f04019b, 0x7f04019c, 
      0x7f0401cc, 0x7f0401cd, 0x7f0401ce, 0x7f0401d6, 
      0x7f0401d8, 0x7f0401e9, 0x7f0401eb, 0x7f0401ec, 
      0x7f0401ed, 0x7f0401f7, 0x7f0401fa, 0x7f0401fc, 
      0x7f0401fd, 0x7f040213, 0x7f040214, 0x7f040236, 
      0x7f04025f, 0x7f040261, 0x7f040262, 0x7f040263, 
      0x7f040265, 0x7f040266, 0x7f040267, 0x7f040268, 
      0x7f04026b, 0x7f04026c, 0x7f040288, 0x7f040289, 
      0x7f04028a, 0x7f04028b, 0x7f040295, 0x7f040298, 
      0x7f040299, 0x7f04029a, 0x7f04029b, 0x7f04029c, 
      0x7f04029d, 0x7f04029e, 0x7f04029f, 0x7f0402a0, 
      0x7f0402a1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=59;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=60;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=62;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=63;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=64;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=65;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=66;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=67;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=68;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=69;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=70;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=71;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listChoiceIndicatorMultipleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated=72;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listChoiceIndicatorSingleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated=73;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=74;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=76;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=77;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=78;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=79;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemPaddingEnd
     */
    public static final int AppCompatTheme_listPreferredItemPaddingEnd=80;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:listPreferredItemPaddingStart
     */
    public static final int AppCompatTheme_listPreferredItemPaddingStart=83;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=84;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=85;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=86;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=87;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=88;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=89;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=90;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=91;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=92;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=93;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=94;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=95;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=96;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=97;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=98;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=100;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=101;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=103;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=104;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=107;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=108;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=109;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=110;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=111;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=112;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=113;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=114;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=115;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=117;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=118;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=119;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=121;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=122;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=123;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=124;
    /**
     * Attributes that can be used with a BackgroundStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.android.talkback:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
      0x0101030e, 0x7f0401fc
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a Badge.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Badge_backgroundColor com.android.talkback:backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeGravity com.android.talkback:badgeGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeTextColor com.android.talkback:badgeTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_maxCharacterCount com.android.talkback:maxCharacterCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_number com.android.talkback:number}</code></td><td></td></tr>
     * </table>
     * @see #Badge_backgroundColor
     * @see #Badge_badgeGravity
     * @see #Badge_badgeTextColor
     * @see #Badge_maxCharacterCount
     * @see #Badge_number
     */
    public static final int[] Badge={
      0x7f040039, 0x7f040043, 0x7f040045, 0x7f0401b5, 
      0x7f0401c3
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#backgroundColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundColor
     */
    public static final int Badge_backgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#badgeGravity}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:badgeGravity
     */
    public static final int Badge_badgeGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#badgeTextColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:badgeTextColor
     */
    public static final int Badge_badgeTextColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#maxCharacterCount}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:maxCharacterCount
     */
    public static final int Badge_maxCharacterCount=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#number}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:number
     */
    public static final int Badge_number=4;
    /**
     * Attributes that can be used with a BottomAppBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomAppBar_backgroundTint com.android.talkback:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAlignmentMode com.android.talkback:fabAlignmentMode}</code></td><td>The alignment of the fab relative to the BottomAppBar.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAnimationMode com.android.talkback:fabAnimationMode}</code></td><td>The animation mode that should be used when the fab animates between alignment modes.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleMargin com.android.talkback:fabCradleMargin}</code></td><td>The margin between the semi-circular cradle for the fab and the fab.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleRoundedCornerRadius com.android.talkback:fabCradleRoundedCornerRadius}</code></td><td>The radius of the rounded corners on each side of the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleVerticalOffset com.android.talkback:fabCradleVerticalOffset}</code></td><td>The vertical offset between the fab from the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_hideOnScroll com.android.talkback:hideOnScroll}</code></td><td>Whether the BottomAppBar should hide when a NestedScrollView is scrolled.</td></tr>
     * </table>
     * @see #BottomAppBar_backgroundTint
     * @see #BottomAppBar_elevation
     * @see #BottomAppBar_fabAlignmentMode
     * @see #BottomAppBar_fabAnimationMode
     * @see #BottomAppBar_fabCradleMargin
     * @see #BottomAppBar_fabCradleRoundedCornerRadius
     * @see #BottomAppBar_fabCradleVerticalOffset
     * @see #BottomAppBar_hideOnScroll
     */
    public static final int[] BottomAppBar={
      0x7f040041, 0x7f040100, 0x7f040121, 0x7f040122, 
      0x7f040123, 0x7f040124, 0x7f040125, 0x7f040146
    };
    /**
     * <p>
     * @attr description
     * Background for the BottomAppBar.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundTint
     */
    public static final int BottomAppBar_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Elevation for the BottomAppBar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int BottomAppBar_elevation=1;
    /**
     * <p>
     * @attr description
     * The alignment of the fab relative to the BottomAppBar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:fabAlignmentMode
     */
    public static final int BottomAppBar_fabAlignmentMode=2;
    /**
     * <p>
     * @attr description
     * The animation mode that should be used when the fab animates between alignment modes.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:fabAnimationMode
     */
    public static final int BottomAppBar_fabAnimationMode=3;
    /**
     * <p>
     * @attr description
     * The margin between the semi-circular cradle for the fab and the fab.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:fabCradleMargin
     */
    public static final int BottomAppBar_fabCradleMargin=4;
    /**
     * <p>
     * @attr description
     * The radius of the rounded corners on each side of the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:fabCradleRoundedCornerRadius
     */
    public static final int BottomAppBar_fabCradleRoundedCornerRadius=5;
    /**
     * <p>
     * @attr description
     * The vertical offset between the fab from the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:fabCradleVerticalOffset
     */
    public static final int BottomAppBar_fabCradleVerticalOffset=6;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:hideOnScroll
     */
    public static final int BottomAppBar_hideOnScroll=7;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_backgroundTint com.android.talkback:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemBackground com.android.talkback:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemHorizontalTranslationEnabled com.android.talkback:itemHorizontalTranslationEnabled}</code></td><td>Whether the items translate horizontally when in "selected" label visibility mode.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconSize com.android.talkback:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconTint com.android.talkback:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemRippleColor com.android.talkback:itemRippleColor}</code></td><td>The ColorStateList to use for a ripple background.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceActive com.android.talkback:itemTextAppearanceActive}</code></td><td>The text appearance to apply to the active navigation item label.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceInactive com.android.talkback:itemTextAppearanceInactive}</code></td><td>The text appearance to apply to the inactive navigation item labels.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextColor com.android.talkback:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_labelVisibilityMode com.android.talkback:labelVisibilityMode}</code></td><td>Whether navigation items display with a label, without a label, or with a label during
     * selected state.</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_menu com.android.talkback:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * </table>
     * @see #BottomNavigationView_backgroundTint
     * @see #BottomNavigationView_elevation
     * @see #BottomNavigationView_itemBackground
     * @see #BottomNavigationView_itemHorizontalTranslationEnabled
     * @see #BottomNavigationView_itemIconSize
     * @see #BottomNavigationView_itemIconTint
     * @see #BottomNavigationView_itemRippleColor
     * @see #BottomNavigationView_itemTextAppearanceActive
     * @see #BottomNavigationView_itemTextAppearanceInactive
     * @see #BottomNavigationView_itemTextColor
     * @see #BottomNavigationView_labelVisibilityMode
     * @see #BottomNavigationView_menu
     */
    public static final int[] BottomNavigationView={
      0x7f040041, 0x7f040100, 0x7f040162, 0x7f040165, 
      0x7f040167, 0x7f040168, 0x7f04016b, 0x7f040177, 
      0x7f040178, 0x7f040179, 0x7f04017c, 0x7f0401ba
    };
    /**
     * <p>
     * @attr description
     * Background tint for the BottomNavigationView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundTint
     */
    public static final int BottomNavigationView_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int BottomNavigationView_elevation=1;
    /**
     * <p>
     * @attr description
     * The background for the navigation items. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemBackground
     */
    public static final int BottomNavigationView_itemBackground=2;
    /**
     * <p>
     * @attr description
     * Whether the items translate horizontally when in "selected" label visibility mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:itemHorizontalTranslationEnabled
     */
    public static final int BottomNavigationView_itemHorizontalTranslationEnabled=3;
    /**
     * <p>
     * @attr description
     * The size to provide for the navigation item icons.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemIconSize
     */
    public static final int BottomNavigationView_itemIconSize=4;
    /**
     * <p>
     * @attr description
     * The tint to apply to the navigation item icons. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemIconTint
     */
    public static final int BottomNavigationView_itemIconTint=5;
    /**
     * <p>
     * @attr description
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemRippleColor
     */
    public static final int BottomNavigationView_itemRippleColor=6;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemTextAppearanceActive
     */
    public static final int BottomNavigationView_itemTextAppearanceActive=7;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemTextAppearanceInactive
     */
    public static final int BottomNavigationView_itemTextAppearanceInactive=8;
    /**
     * <p>
     * @attr description
     * The color to apply to the navigation items' text. Setting itemTextColor will take
     * precedence over android:textColor in itemTextAppearanceInactive or
     * itemTextAppearanceActive. Attribute type definition is in navigation package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemTextColor
     */
    public static final int BottomNavigationView_itemTextColor=9;
    /**
     * <p>
     * @attr description
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:labelVisibilityMode
     */
    public static final int BottomNavigationView_labelVisibilityMode=10;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from. Attribute type definition is in
     * navigation package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:menu
     */
    public static final int BottomNavigationView_menu=11;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_backgroundTint com.android.talkback:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_expandedOffset com.android.talkback:behavior_expandedOffset}</code></td><td>The top offset of the BottomSheet in the expanded-state when fitsToContent is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_fitToContents com.android.talkback:behavior_fitToContents}</code></td><td>Whether height of expanded sheet wraps content or not</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_halfExpandedRatio com.android.talkback:behavior_halfExpandedRatio}</code></td><td>The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable com.android.talkback:behavior_hideable}</code></td><td>Whether this bottom sheet can be hidden by dragging it further downwards</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight com.android.talkback:behavior_peekHeight}</code></td><td>The height of the bottom sheet when it is collapsed.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_saveFlags com.android.talkback:behavior_saveFlags}</code></td><td>Behavior properties will be saved and restored by evaluating each flag.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed com.android.talkback:behavior_skipCollapsed}</code></td><td>Skip the collapsed state once expanded; no effect unless it is hideable</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_android_elevation
     * @see #BottomSheetBehavior_Layout_backgroundTint
     * @see #BottomSheetBehavior_Layout_behavior_expandedOffset
     * @see #BottomSheetBehavior_Layout_behavior_fitToContents
     * @see #BottomSheetBehavior_Layout_behavior_halfExpandedRatio
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_saveFlags
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     * @see #BottomSheetBehavior_Layout_shapeAppearance
     * @see #BottomSheetBehavior_Layout_shapeAppearanceOverlay
     */
    public static final int[] BottomSheetBehavior_Layout={
      0x01010440, 0x7f040041, 0x7f040049, 0x7f04004a, 
      0x7f04004b, 0x7f04004c, 0x7f04004e, 0x7f04004f, 
      0x7f040050, 0x7f0401fe, 0x7f040201
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int BottomSheetBehavior_Layout_android_elevation=0;
    /**
     * <p>
     * @attr description
     * Background color used by the BottomSheetBehavior background drawable when shape theming is
     * enabled. Accepts a ColorStateList or ColorInt. If shape theming is not enabled,
     * android:background should instead be utilized to set the background resource.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundTint
     */
    public static final int BottomSheetBehavior_Layout_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:behavior_expandedOffset
     */
    public static final int BottomSheetBehavior_Layout_behavior_expandedOffset=2;
    /**
     * <p>
     * @attr description
     * Whether height of expanded sheet wraps content or not
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:behavior_fitToContents
     */
    public static final int BottomSheetBehavior_Layout_behavior_fitToContents=3;
    /**
     * <p>
     * @attr description
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:behavior_halfExpandedRatio
     */
    public static final int BottomSheetBehavior_Layout_behavior_halfExpandedRatio=4;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet can be hidden by dragging it further downwards
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:behavior_hideable
     */
    public static final int BottomSheetBehavior_Layout_behavior_hideable=5;
    /**
     * <p>
     * @attr description
     * The height of the bottom sheet when it is collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:behavior_peekHeight
     */
    public static final int BottomSheetBehavior_Layout_behavior_peekHeight=6;
    /**
     * <p>
     * @attr description
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:behavior_saveFlags
     */
    public static final int BottomSheetBehavior_Layout_behavior_saveFlags=7;
    /**
     * <p>
     * @attr description
     * Skip the collapsed state once expanded; no effect unless it is hideable
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:behavior_skipCollapsed
     */
    public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed=8;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for BottomSheet. Attribute declaration is in the shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int BottomSheetBehavior_Layout_shapeAppearance=9;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for BottomSheet. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int BottomSheetBehavior_Layout_shapeAppearanceOverlay=10;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.talkback:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f04002b
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.android.talkback:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.android.talkback:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.android.talkback:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.android.talkback:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.android.talkback:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.android.talkback:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.android.talkback:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.android.talkback:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.android.talkback:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.android.talkback:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.android.talkback:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x7f04006f, 0x7f040070, 
      0x7f040071, 0x7f040073, 0x7f040074, 0x7f040075, 
      0x7f0400c0, 0x7f0400c1, 0x7f0400c2, 0x7f0400c3, 
      0x7f0400c4
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.android.talkback:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.android.talkback:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.android.talkback:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x7f0400e9, 
      0x7f040230, 0x7f040231
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a Chip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Chip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_ellipsize android:ellipsize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIcon com.android.talkback:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconEnabled com.android.talkback:checkedIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_checkedIconVisible com.android.talkback:checkedIconVisible}</code></td><td>Whether to show the checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipBackgroundColor com.android.talkback:chipBackgroundColor}</code></td><td>Background color to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipCornerRadius com.android.talkback:chipCornerRadius}</code></td><td>Corner radius to apply to the chip's shape.</td></tr>
     * <tr><td><code>{@link #Chip_chipEndPadding com.android.talkback:chipEndPadding}</code></td><td>Padding at the end of the chip, after the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIcon com.android.talkback:chipIcon}</code></td><td>Icon drawable to display at the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconEnabled com.android.talkback:chipIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconSize com.android.talkback:chipIconSize}</code></td><td>Size of the chip's icon and checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconTint com.android.talkback:chipIconTint}</code></td><td>Tint to apply to the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconVisible com.android.talkback:chipIconVisible}</code></td><td>Whether to show the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinHeight com.android.talkback:chipMinHeight}</code></td><td>Min height to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinTouchTargetSize com.android.talkback:chipMinTouchTargetSize}</code></td><td>Minimum size of chip's touch target, by default, Android recommended 48dp.</td></tr>
     * <tr><td><code>{@link #Chip_chipStartPadding com.android.talkback:chipStartPadding}</code></td><td>Padding at the start of the chip, before the icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeColor com.android.talkback:chipStrokeColor}</code></td><td>Stroke color to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeWidth com.android.talkback:chipStrokeWidth}</code></td><td>Stroke width to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipSurfaceColor com.android.talkback:chipSurfaceColor}</code></td><td>Surface layer color to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_closeIcon com.android.talkback:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEnabled com.android.talkback:closeIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEndPadding com.android.talkback:closeIconEndPadding}</code></td><td>Padding at the end of the close icon, before the end of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconSize com.android.talkback:closeIconSize}</code></td><td>Size of the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconStartPadding com.android.talkback:closeIconStartPadding}</code></td><td>Padding at the start of the close icon, after the text.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconTint com.android.talkback:closeIconTint}</code></td><td>Tint to apply to the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconVisible com.android.talkback:closeIconVisible}</code></td><td>Whether to show the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_ensureMinTouchTargetSize com.android.talkback:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_hideMotionSpec com.android.talkback:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconEndPadding com.android.talkback:iconEndPadding}</code></td><td>Padding at the end of the icon, before the text.</td></tr>
     * <tr><td><code>{@link #Chip_iconStartPadding com.android.talkback:iconStartPadding}</code></td><td>Padding at the start of the icon, after the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_rippleColor com.android.talkback:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #Chip_showMotionSpec com.android.talkback:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textEndPadding com.android.talkback:textEndPadding}</code></td><td>Padding at the end of the text, before the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_textStartPadding com.android.talkback:textStartPadding}</code></td><td>Padding at the start of the text, after the icon.</td></tr>
     * </table>
     * @see #Chip_android_textAppearance
     * @see #Chip_android_textColor
     * @see #Chip_android_ellipsize
     * @see #Chip_android_maxWidth
     * @see #Chip_android_text
     * @see #Chip_android_checkable
     * @see #Chip_checkedIcon
     * @see #Chip_checkedIconEnabled
     * @see #Chip_checkedIconVisible
     * @see #Chip_chipBackgroundColor
     * @see #Chip_chipCornerRadius
     * @see #Chip_chipEndPadding
     * @see #Chip_chipIcon
     * @see #Chip_chipIconEnabled
     * @see #Chip_chipIconSize
     * @see #Chip_chipIconTint
     * @see #Chip_chipIconVisible
     * @see #Chip_chipMinHeight
     * @see #Chip_chipMinTouchTargetSize
     * @see #Chip_chipStartPadding
     * @see #Chip_chipStrokeColor
     * @see #Chip_chipStrokeWidth
     * @see #Chip_chipSurfaceColor
     * @see #Chip_closeIcon
     * @see #Chip_closeIconEnabled
     * @see #Chip_closeIconEndPadding
     * @see #Chip_closeIconSize
     * @see #Chip_closeIconStartPadding
     * @see #Chip_closeIconTint
     * @see #Chip_closeIconVisible
     * @see #Chip_ensureMinTouchTargetSize
     * @see #Chip_hideMotionSpec
     * @see #Chip_iconEndPadding
     * @see #Chip_iconStartPadding
     * @see #Chip_rippleColor
     * @see #Chip_shapeAppearance
     * @see #Chip_shapeAppearanceOverlay
     * @see #Chip_showMotionSpec
     * @see #Chip_textEndPadding
     * @see #Chip_textStartPadding
     */
    public static final int[] Chip={
      0x01010034, 0x01010098, 0x010100ab, 0x0101011f, 
      0x0101014f, 0x010101e5, 0x7f04007b, 0x7f04007c, 
      0x7f04007e, 0x7f040080, 0x7f040081, 0x7f040082, 
      0x7f040084, 0x7f040085, 0x7f040086, 0x7f040087, 
      0x7f040088, 0x7f040089, 0x7f04008a, 0x7f04008f, 
      0x7f040090, 0x7f040091, 0x7f040093, 0x7f040095, 
      0x7f040096, 0x7f040097, 0x7f040098, 0x7f040099, 
      0x7f04009a, 0x7f04009b, 0x7f04010d, 0x7f040144, 
      0x7f04014f, 0x7f040154, 0x7f0401f0, 0x7f0401fe, 
      0x7f040201, 0x7f040206, 0x7f04026d, 0x7f040270
    };
    /**
     * <p>
     * @attr description
     * Default appearance of text: color, typeface, size, and style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Chip_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int Chip_android_textColor=1;
    /**
     * <p>
     * @attr description
     * If set, causes words that are longer than the view is wide to be ellipsized instead of
     * truncated at the end.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td></td></tr>
     * <tr><td>marquee</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:ellipsize
     */
    public static final int Chip_android_ellipsize=2;
    /**
     * <p>
     * @attr description
     * Make the Chip to be at most this many pixels wide.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Chip_android_maxWidth=3;
    /**
     * <p>
     * @attr description
     * Text to display on the chip.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Chip_android_text=4;
    /**
     * <p>
     * @attr description
     * Whether the chip can be checked. If false, the chip will act as a button.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int Chip_android_checkable=5;
    /**
     * <p>
     * @attr description
     * Check icon drawable to overlay the chip's icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkedIcon
     */
    public static final int Chip_checkedIcon=6;
    /**
     * <p>
     * @attr description
     * Deprecated. Use checkedIconVisible instead
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:checkedIconEnabled
     */
    public static final int Chip_checkedIconEnabled=7;
    /**
     * <p>
     * @attr description
     * Whether to show the checked icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:checkedIconVisible
     */
    public static final int Chip_checkedIconVisible=8;
    /**
     * <p>
     * @attr description
     * Background color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:chipBackgroundColor
     */
    public static final int Chip_chipBackgroundColor=9;
    /**
     * <p>
     * @attr description
     * Corner radius to apply to the chip's shape.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipCornerRadius
     */
    public static final int Chip_chipCornerRadius=10;
    /**
     * <p>
     * @attr description
     * Padding at the end of the chip, after the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipEndPadding
     */
    public static final int Chip_chipEndPadding=11;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:chipIcon
     */
    public static final int Chip_chipIcon=12;
    /**
     * <p>
     * @attr description
     * Deprecated. Use chipIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:chipIconEnabled
     */
    public static final int Chip_chipIconEnabled=13;
    /**
     * <p>
     * @attr description
     * Size of the chip's icon and checked icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipIconSize
     */
    public static final int Chip_chipIconSize=14;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:chipIconTint
     */
    public static final int Chip_chipIconTint=15;
    /**
     * <p>
     * @attr description
     * Whether to show the chip icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:chipIconVisible
     */
    public static final int Chip_chipIconVisible=16;
    /**
     * <p>
     * @attr description
     * Min height to apply to the chip. Total height includes stroke width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipMinHeight
     */
    public static final int Chip_chipMinHeight=17;
    /**
     * <p>
     * @attr description
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipMinTouchTargetSize
     */
    public static final int Chip_chipMinTouchTargetSize=18;
    /**
     * <p>
     * @attr description
     * Padding at the start of the chip, before the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipStartPadding
     */
    public static final int Chip_chipStartPadding=19;
    /**
     * <p>
     * @attr description
     * Stroke color to apply to the chip's outline.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:chipStrokeColor
     */
    public static final int Chip_chipStrokeColor=20;
    /**
     * <p>
     * @attr description
     * Stroke width to apply to the chip's outline.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipStrokeWidth
     */
    public static final int Chip_chipStrokeWidth=21;
    /**
     * <p>
     * @attr description
     * Surface layer color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:chipSurfaceColor
     */
    public static final int Chip_chipSurfaceColor=22;
    /**
     * <p>
     * @attr description
     * Close icon drawable to display at the end of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:closeIcon
     */
    public static final int Chip_closeIcon=23;
    /**
     * <p>
     * @attr description
     * Deprecated. Use closeIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:closeIconEnabled
     */
    public static final int Chip_closeIconEnabled=24;
    /**
     * <p>
     * @attr description
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:closeIconEndPadding
     */
    public static final int Chip_closeIconEndPadding=25;
    /**
     * <p>
     * @attr description
     * Size of the chip's close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:closeIconSize
     */
    public static final int Chip_closeIconSize=26;
    /**
     * <p>
     * @attr description
     * Padding at the start of the close icon, after the text. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:closeIconStartPadding
     */
    public static final int Chip_closeIconStartPadding=27;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's close icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:closeIconTint
     */
    public static final int Chip_closeIconTint=28;
    /**
     * <p>
     * @attr description
     * Whether to show the close icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:closeIconVisible
     */
    public static final int Chip_closeIconVisible=29;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of chip to meet chipMinTouchTargetSize.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:ensureMinTouchTargetSize
     */
    public static final int Chip_ensureMinTouchTargetSize=30;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:hideMotionSpec
     */
    public static final int Chip_hideMotionSpec=31;
    /**
     * <p>
     * @attr description
     * Padding at the end of the icon, before the text. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:iconEndPadding
     */
    public static final int Chip_iconEndPadding=32;
    /**
     * <p>
     * @attr description
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:iconStartPadding
     */
    public static final int Chip_iconStartPadding=33;
    /**
     * <p>
     * @attr description
     * Ripple color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:rippleColor
     */
    public static final int Chip_rippleColor=34;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for Chip. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int Chip_shapeAppearance=35;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for Chip. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int Chip_shapeAppearanceOverlay=36;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:showMotionSpec
     */
    public static final int Chip_showMotionSpec=37;
    /**
     * <p>
     * @attr description
     * Padding at the end of the text, before the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:textEndPadding
     */
    public static final int Chip_textEndPadding=38;
    /**
     * <p>
     * @attr description
     * Padding at the start of the text, after the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:textStartPadding
     */
    public static final int Chip_textStartPadding=39;
    /**
     * Attributes that can be used with a ChipGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChipGroup_checkedChip com.android.talkback:checkedChip}</code></td><td>The id of the child chip that should be checked by default within this chip group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacing com.android.talkback:chipSpacing}</code></td><td>Horizontal and vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingHorizontal com.android.talkback:chipSpacingHorizontal}</code></td><td>Horizontal spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingVertical com.android.talkback:chipSpacingVertical}</code></td><td>Vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_singleLine com.android.talkback:singleLine}</code></td><td>Constrains the chips in this group to a single horizontal line.</td></tr>
     * <tr><td><code>{@link #ChipGroup_singleSelection com.android.talkback:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #ChipGroup_checkedChip
     * @see #ChipGroup_chipSpacing
     * @see #ChipGroup_chipSpacingHorizontal
     * @see #ChipGroup_chipSpacingVertical
     * @see #ChipGroup_singleLine
     * @see #ChipGroup_singleSelection
     */
    public static final int[] ChipGroup={
      0x7f04007a, 0x7f04008b, 0x7f04008c, 0x7f04008d, 
      0x7f04020c, 0x7f04020e
    };
    /**
     * <p>
     * @attr description
     * The id of the child chip that should be checked by default within this chip group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkedChip
     */
    public static final int ChipGroup_checkedChip=0;
    /**
     * <p>
     * @attr description
     * Horizontal and vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipSpacing
     */
    public static final int ChipGroup_chipSpacing=1;
    /**
     * <p>
     * @attr description
     * Horizontal spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipSpacingHorizontal
     */
    public static final int ChipGroup_chipSpacingHorizontal=2;
    /**
     * <p>
     * @attr description
     * Vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:chipSpacingVertical
     */
    public static final int ChipGroup_chipSpacingVertical=3;
    /**
     * <p>
     * @attr description
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:singleLine
     */
    public static final int ChipGroup_singleLine=4;
    /**
     * <p>
     * @attr description
     * Whether only a single chip in this group is allowed to be checked at any time. By default,
     * this is false and multiple chips in this group are allowed to be checked at once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:singleSelection
     */
    public static final int ChipGroup_singleSelection=5;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity com.android.talkback:collapsedTitleGravity}</code></td><td>Specifies how the title should be positioned when collapsed.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance com.android.talkback:collapsedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim com.android.talkback:contentScrim}</code></td><td>The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity com.android.talkback:expandedTitleGravity}</code></td><td>Specifies how the title should be positioned when expanded.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin com.android.talkback:expandedTitleMargin}</code></td><td>Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom com.android.talkback:expandedTitleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd com.android.talkback:expandedTitleMarginEnd}</code></td><td>Specifies extra space on the end side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart com.android.talkback:expandedTitleMarginStart}</code></td><td>Specifies extra space on the start side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop com.android.talkback:expandedTitleMarginTop}</code></td><td>Specifies extra space on the top side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance com.android.talkback:expandedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration com.android.talkback:scrimAnimationDuration}</code></td><td>Specifies the duration used for scrim visibility animations.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger com.android.talkback:scrimVisibleHeightTrigger}</code></td><td>Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim com.android.talkback:statusBarScrim}</code></td><td>The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title com.android.talkback:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled com.android.talkback:titleEnabled}</code></td><td>Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId com.android.talkback:toolbarId}</code></td><td>The id of the primary Toolbar child that you wish to use for the purpose of collapsing.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
      0x7f04009f, 0x7f0400a0, 0x7f0400c5, 0x7f040118, 
      0x7f040119, 0x7f04011a, 0x7f04011b, 0x7f04011c, 
      0x7f04011d, 0x7f04011e, 0x7f0401f2, 0x7f0401f4, 
      0x7f040225, 0x7f04027c, 0x7f04027d, 0x7f040287
    };
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when collapsed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:collapsedTitleGravity
     */
    public static final int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:collapsedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:contentScrim
     */
    public static final int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when expanded.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:expandedTitleGravity
     */
    public static final int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:expandedTitleMargin
     */
    public static final int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:expandedTitleMarginBottom
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:expandedTitleMarginEnd
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:expandedTitleMarginStart
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:expandedTitleMarginTop
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:expandedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>
     * @attr description
     * Specifies the duration used for scrim visibility animations.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:scrimAnimationDuration
     */
    public static final int CollapsingToolbarLayout_scrimAnimationDuration=10;
    /**
     * <p>
     * @attr description
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:scrimVisibleHeightTrigger
     */
    public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger=11;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:statusBarScrim
     */
    public static final int CollapsingToolbarLayout_statusBarScrim=12;
    /**
     * <p>
     * @attr description
     * The title to show when titleEnabled is set to true.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:title
     */
    public static final int CollapsingToolbarLayout_title=13;
    /**
     * <p>
     * @attr description
     * Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:titleEnabled
     */
    public static final int CollapsingToolbarLayout_titleEnabled=14;
    /**
     * <p>
     * @attr description
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:toolbarId
     */
    public static final int CollapsingToolbarLayout_toolbarId=15;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode com.android.talkback:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier com.android.talkback:layout_collapseParallaxMultiplier}</code></td><td>The multiplier used when layout_collapseMode is set to 'parallax'.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
      0x7f040183, 0x7f040184
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:layout_collapseMode
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>
     * @attr description
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:layout_collapseParallaxMultiplier
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.talkback:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f04002c
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.android.talkback:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.talkback:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.talkback:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f040066, 0x7f04006d, 0x7f04006e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:buttonCompat
     */
    public static final int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:buttonTint
     */
    public static final int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.talkback:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.talkback:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f04017b, 0x7f040223
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.talkback:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.talkback:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.talkback:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.talkback:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.talkback:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.talkback:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f040180, 0x7f040181, 0x7f040182, 
      0x7f040185, 0x7f040186, 0x7f040187
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.android.talkback:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.android.talkback:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.android.talkback:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.android.talkback:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.android.talkback:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.android.talkback:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
      0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
      0x010101f6, 0x010101f7, 0x7f0400e2, 0x7f0400e3, 
      0x7f0400e4, 0x7f0400e8, 0x7f0401c2, 0x7f0401d9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.talkback:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.talkback:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.talkback:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.talkback:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.talkback:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.talkback:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.talkback:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.talkback:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f040030, 0x7f040031, 0x7f040046, 0x7f0400a1, 
      0x7f0400f3, 0x7f04013c, 0x7f040212, 0x7f040273
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a EditTextPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #EditTextPreference_useSimpleSummaryProvider com.android.talkback:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #EditTextPreference_useSimpleSummaryProvider
     */
    public static final int[] EditTextPreference={
      0x7f040294
    };
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:useSimpleSummaryProvider
     */
    public static final int EditTextPreference_useSimpleSummaryProvider=0;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_extendMotionSpec com.android.talkback:extendMotionSpec}</code></td><td>Motion spec for extend animation.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_hideMotionSpec com.android.talkback:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_showMotionSpec com.android.talkback:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_shrinkMotionSpec com.android.talkback:shrinkMotionSpec}</code></td><td>Motion spec for shrink animation.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_elevation
     * @see #ExtendedFloatingActionButton_extendMotionSpec
     * @see #ExtendedFloatingActionButton_hideMotionSpec
     * @see #ExtendedFloatingActionButton_showMotionSpec
     * @see #ExtendedFloatingActionButton_shrinkMotionSpec
     */
    public static final int[] ExtendedFloatingActionButton={
      0x7f040100, 0x7f04011f, 0x7f040144, 0x7f040206, 
      0x7f04020a
    };
    /**
     * <p>
     * @attr description
     * Elevation for the ExtendedFloatingActionButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int ExtendedFloatingActionButton_elevation=0;
    /**
     * <p>
     * @attr description
     * Motion spec for extend animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:extendMotionSpec
     */
    public static final int ExtendedFloatingActionButton_extendMotionSpec=1;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:hideMotionSpec
     */
    public static final int ExtendedFloatingActionButton_hideMotionSpec=2;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:showMotionSpec
     */
    public static final int ExtendedFloatingActionButton_showMotionSpec=3;
    /**
     * <p>
     * @attr description
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shrinkMotionSpec
     */
    public static final int ExtendedFloatingActionButton_shrinkMotionSpec=4;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide com.android.talkback:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink com.android.talkback:behavior_autoShrink}</code></td><td>Whether the extended FAB should automatically shrink when there is no space for it.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink
     */
    public static final int[] ExtendedFloatingActionButton_Behavior_Layout={
      0x7f040047, 0x7f040048
    };
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:behavior_autoHide
     */
    public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically shrink when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:behavior_autoShrink
     */
    public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink=1;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint com.android.talkback:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode com.android.talkback:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth com.android.talkback:borderWidth}</code></td><td>The width of the border around the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_ensureMinTouchTargetSize com.android.talkback:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabCustomSize com.android.talkback:fabCustomSize}</code></td><td>Custom size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize com.android.talkback:fabSize}</code></td><td>Size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hideMotionSpec com.android.talkback:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hoveredFocusedTranslationZ com.android.talkback:hoveredFocusedTranslationZ}</code></td><td>TranslationZ value for the FAB when hovered, focused, or hovered and focused.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_maxImageSize com.android.talkback:maxImageSize}</code></td><td>Maximum icon image size.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ com.android.talkback:pressedTranslationZ}</code></td><td>TranslationZ value for the FAB when pressed</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor com.android.talkback:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_showMotionSpec com.android.talkback:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding com.android.talkback:useCompatPadding}</code></td><td>Enable compat padding.</td></tr>
     * </table>
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_ensureMinTouchTargetSize
     * @see #FloatingActionButton_fabCustomSize
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_hideMotionSpec
     * @see #FloatingActionButton_hoveredFocusedTranslationZ
     * @see #FloatingActionButton_maxImageSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_shapeAppearance
     * @see #FloatingActionButton_shapeAppearanceOverlay
     * @see #FloatingActionButton_showMotionSpec
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
      0x7f040041, 0x7f040042, 0x7f040051, 0x7f040100, 
      0x7f04010d, 0x7f040126, 0x7f040127, 0x7f040144, 
      0x7f04014d, 0x7f0401b7, 0x7f0401e4, 0x7f0401f0, 
      0x7f0401fe, 0x7f040201, 0x7f040206, 0x7f040292
    };
    /**
     * <p>
     * @attr description
     * Background for the FloatingActionButton
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundTint
     */
    public static final int FloatingActionButton_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:backgroundTintMode
     */
    public static final int FloatingActionButton_backgroundTintMode=1;
    /**
     * <p>
     * @attr description
     * The width of the border around the FAB.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:borderWidth
     */
    public static final int FloatingActionButton_borderWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation value for the FAB
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int FloatingActionButton_elevation=3;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of the FloatingActionButton to meet
     * @dimen/mtrl_fab_min_touch_target.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:ensureMinTouchTargetSize
     */
    public static final int FloatingActionButton_ensureMinTouchTargetSize=4;
    /**
     * <p>
     * @attr description
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:fabCustomSize
     */
    public static final int FloatingActionButton_fabCustomSize=5;
    /**
     * <p>
     * @attr description
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:fabSize
     */
    public static final int FloatingActionButton_fabSize=6;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:hideMotionSpec
     */
    public static final int FloatingActionButton_hideMotionSpec=7;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:hoveredFocusedTranslationZ
     */
    public static final int FloatingActionButton_hoveredFocusedTranslationZ=8;
    /**
     * <p>
     * @attr description
     * Maximum icon image size.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:maxImageSize
     */
    public static final int FloatingActionButton_maxImageSize=9;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when pressed
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:pressedTranslationZ
     */
    public static final int FloatingActionButton_pressedTranslationZ=10;
    /**
     * <p>
     * @attr description
     * Ripple color for the FAB.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:rippleColor
     */
    public static final int FloatingActionButton_rippleColor=11;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for FloatingActionButton. Attribute declaration
     * is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int FloatingActionButton_shapeAppearance=12;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for FloatingActionButton.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int FloatingActionButton_shapeAppearanceOverlay=13;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:showMotionSpec
     */
    public static final int FloatingActionButton_showMotionSpec=14;
    /**
     * <p>
     * @attr description
     * Enable compat padding.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:useCompatPadding
     */
    public static final int FloatingActionButton_useCompatPadding=15;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide com.android.talkback:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
      0x7f040047
    };
    /**
     * <p>
     * @attr description
     * Whether the FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:behavior_autoHide
     */
    public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that can be used with a FlowLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FlowLayout_itemSpacing com.android.talkback:itemSpacing}</code></td><td>Horizontal spacing between two items being laid out.</td></tr>
     * <tr><td><code>{@link #FlowLayout_lineSpacing com.android.talkback:lineSpacing}</code></td><td>Vertical Spacing between two lines of items being laid out.</td></tr>
     * </table>
     * @see #FlowLayout_itemSpacing
     * @see #FlowLayout_lineSpacing
     */
    public static final int[] FlowLayout={
      0x7f040173, 0x7f04018d
    };
    /**
     * <p>
     * @attr description
     * Horizontal spacing between two items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemSpacing
     */
    public static final int FlowLayout_itemSpacing=0;
    /**
     * <p>
     * @attr description
     * Vertical Spacing between two lines of items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:lineSpacing
     */
    public static final int FlowLayout_lineSpacing=1;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.talkback:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.talkback:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.talkback:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.talkback:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.talkback:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.talkback:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f040131, 0x7f040132, 0x7f040133, 0x7f040134, 
      0x7f040135, 0x7f040136
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.talkback:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.talkback:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.talkback:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.talkback:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.talkback:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f04012f, 0x7f040137, 0x7f040138, 
      0x7f040139, 0x7f040290
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding com.android.talkback:foregroundInsidePadding}</code></td><td></td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
      0x01010109, 0x01010200, 0x7f04013a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static final int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static final int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#foregroundInsidePadding}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:foregroundInsidePadding
     */
    public static final int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.talkback:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.talkback:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.talkback:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.talkback:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f0400eb, 0x7f0400ed, 0x7f0401b9, 
      0x7f040205
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.talkback:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.talkback:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * <tr><td><code>{@link #ListPreference_useSimpleSummaryProvider com.android.talkback:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     * @see #ListPreference_useSimpleSummaryProvider
     */
    public static final int[] ListPreference={
      0x010100b2, 0x010101f8, 0x7f04010e, 0x7f04010f, 
      0x7f040294
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:useSimpleSummaryProvider
     */
    public static final int ListPreference_useSimpleSummaryProvider=4;
    /**
     * Attributes that can be used with a LoadingImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LoadingImageView_circleCrop com.android.talkback:circleCrop}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoadingImageView_imageAspectRatio com.android.talkback:imageAspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoadingImageView_imageAspectRatioAdjust com.android.talkback:imageAspectRatioAdjust}</code></td><td></td></tr>
     * </table>
     * @see #LoadingImageView_circleCrop
     * @see #LoadingImageView_imageAspectRatio
     * @see #LoadingImageView_imageAspectRatioAdjust
     */
    public static final int[] LoadingImageView={
      0x7f040094, 0x7f040158, 0x7f040159
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#circleCrop}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:circleCrop
     */
    public static final int LoadingImageView_circleCrop=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#imageAspectRatio}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:imageAspectRatio
     */
    public static final int LoadingImageView_imageAspectRatio=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#imageAspectRatioAdjust}
     * attribute's value can be found in the {@link #LoadingImageView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjust_height</td><td>2</td><td></td></tr>
     * <tr><td>adjust_width</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:imageAspectRatioAdjust
     */
    public static final int LoadingImageView_imageAspectRatioAdjust=2;
    /**
     * Attributes that can be used with a MaterialAlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetBottom com.android.talkback:backgroundInsetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetEnd com.android.talkback:backgroundInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetStart com.android.talkback:backgroundInsetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetTop com.android.talkback:backgroundInsetTop}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialog_backgroundInsetBottom
     * @see #MaterialAlertDialog_backgroundInsetEnd
     * @see #MaterialAlertDialog_backgroundInsetStart
     * @see #MaterialAlertDialog_backgroundInsetTop
     */
    public static final int[] MaterialAlertDialog={
      0x7f04003a, 0x7f04003b, 0x7f04003c, 0x7f04003d
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#backgroundInsetBottom}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:backgroundInsetBottom
     */
    public static final int MaterialAlertDialog_backgroundInsetBottom=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#backgroundInsetEnd}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:backgroundInsetEnd
     */
    public static final int MaterialAlertDialog_backgroundInsetEnd=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#backgroundInsetStart}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:backgroundInsetStart
     */
    public static final int MaterialAlertDialog_backgroundInsetStart=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#backgroundInsetTop}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:backgroundInsetTop
     */
    public static final int MaterialAlertDialog_backgroundInsetTop=3;
    /**
     * Attributes that can be used with a MaterialAlertDialogTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle com.android.talkback:materialAlertDialogBodyTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTheme com.android.talkback:materialAlertDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle com.android.talkback:materialAlertDialogTitleIconStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle com.android.talkback:materialAlertDialogTitlePanelStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle com.android.talkback:materialAlertDialogTitleTextStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTheme
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle
     */
    public static final int[] MaterialAlertDialogTheme={
      0x7f04019f, 0x7f0401a0, 0x7f0401a1, 0x7f0401a2, 
      0x7f0401a3
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#materialAlertDialogBodyTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:materialAlertDialogBodyTextStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#materialAlertDialogTheme}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:materialAlertDialogTheme
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#materialAlertDialogTitleIconStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:materialAlertDialogTitleIconStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#materialAlertDialogTitlePanelStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:materialAlertDialogTitlePanelStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#materialAlertDialogTitleTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:materialAlertDialogTitleTextStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle=4;
    /**
     * Attributes that can be used with a MaterialButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTint com.android.talkback:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTintMode com.android.talkback:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_cornerRadius com.android.talkback:cornerRadius}</code></td><td>Specifies the radius for the corners of the button.</td></tr>
     * <tr><td><code>{@link #MaterialButton_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #MaterialButton_icon com.android.talkback:icon}</code></td><td>Icon drawable to display at the start of this view.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconGravity com.android.talkback:iconGravity}</code></td><td>Specifies how the icon should be positioned on the X axis.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconPadding com.android.talkback:iconPadding}</code></td><td>Padding between icon and button text.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconSize com.android.talkback:iconSize}</code></td><td>Specifies the width and height to use for the icon drawable.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTint com.android.talkback:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTintMode com.android.talkback:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_rippleColor com.android.talkback:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeColor com.android.talkback:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeWidth com.android.talkback:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButton_android_insetLeft
     * @see #MaterialButton_android_insetRight
     * @see #MaterialButton_android_insetTop
     * @see #MaterialButton_android_insetBottom
     * @see #MaterialButton_android_checkable
     * @see #MaterialButton_backgroundTint
     * @see #MaterialButton_backgroundTintMode
     * @see #MaterialButton_cornerRadius
     * @see #MaterialButton_elevation
     * @see #MaterialButton_icon
     * @see #MaterialButton_iconGravity
     * @see #MaterialButton_iconPadding
     * @see #MaterialButton_iconSize
     * @see #MaterialButton_iconTint
     * @see #MaterialButton_iconTintMode
     * @see #MaterialButton_rippleColor
     * @see #MaterialButton_shapeAppearance
     * @see #MaterialButton_shapeAppearanceOverlay
     * @see #MaterialButton_strokeColor
     * @see #MaterialButton_strokeWidth
     */
    public static final int[] MaterialButton={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x010101e5, 0x7f040041, 0x7f040042, 0x7f0400cd, 
      0x7f040100, 0x7f04014e, 0x7f040150, 0x7f040151, 
      0x7f040152, 0x7f040155, 0x7f040156, 0x7f0401f0, 
      0x7f0401fe, 0x7f040201, 0x7f040226, 0x7f040227
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialButton_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialButton_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialButton_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialButton_android_insetBottom=3;
    /**
     * <p>
     * @attr description
     * Whether the button can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MaterialButton_android_checkable=4;
    /**
     * <p>
     * @attr description
     * Background for the MaterialButton
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundTint
     */
    public static final int MaterialButton_backgroundTint=5;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:backgroundTintMode
     */
    public static final int MaterialButton_backgroundTintMode=6;
    /**
     * <p>
     * @attr description
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:cornerRadius
     */
    public static final int MaterialButton_cornerRadius=7;
    /**
     * <p>
     * @attr description
     * Elevation for the MaterialButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int MaterialButton_elevation=8;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of this view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:icon
     */
    public static final int MaterialButton_icon=9;
    /**
     * <p>
     * @attr description
     * Specifies how the icon should be positioned on the X axis.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:iconGravity
     */
    public static final int MaterialButton_iconGravity=10;
    /**
     * <p>
     * @attr description
     * Padding between icon and button text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:iconPadding
     */
    public static final int MaterialButton_iconPadding=11;
    /**
     * <p>
     * @attr description
     * Specifies the width and height to use for the icon drawable.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:iconSize
     */
    public static final int MaterialButton_iconSize=12;
    /**
     * <p>
     * @attr description
     * Tint for icon drawable to display.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:iconTint
     */
    public static final int MaterialButton_iconTint=13;
    /**
     * <p>
     * @attr description
     * Tint mode for icon drawable to display.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:iconTintMode
     */
    public static final int MaterialButton_iconTintMode=14;
    /**
     * <p>
     * @attr description
     * Ripple color for the button. This may be a color state list, if the desired ripple color
     * should be stateful. Attribute type definition is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:rippleColor
     */
    public static final int MaterialButton_rippleColor=15;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialButton. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int MaterialButton_shapeAppearance=16;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialButton. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int MaterialButton_shapeAppearanceOverlay=17;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the button. Attribute type definition
     * is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:strokeColor
     */
    public static final int MaterialButton_strokeColor=18;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the button. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:strokeWidth
     */
    public static final int MaterialButton_strokeWidth=19;
    /**
     * Attributes that can be used with a MaterialButtonToggleGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_checkedButton com.android.talkback:checkedButton}</code></td><td>The id of the child button that should be checked by default within this button group.</td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_singleSelection com.android.talkback:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButtonToggleGroup_checkedButton
     * @see #MaterialButtonToggleGroup_singleSelection
     */
    public static final int[] MaterialButtonToggleGroup={
      0x7f040079, 0x7f04020e
    };
    /**
     * <p>
     * @attr description
     * The id of the child button that should be checked by default within this button group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkedButton
     */
    public static final int MaterialButtonToggleGroup_checkedButton=0;
    /**
     * <p>
     * @attr description
     * Whether only a single button in this group is allowed to be checked at any time. By
     * default, this is false and multiple buttons in this group are allowed to be checked at
     * once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:singleSelection
     */
    public static final int MaterialButtonToggleGroup_singleSelection=1;
    /**
     * Attributes that can be used with a MaterialCalendar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendar_android_windowFullscreen android:windowFullscreen}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayInvalidStyle com.android.talkback:dayInvalidStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_daySelectedStyle com.android.talkback:daySelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayStyle com.android.talkback:dayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayTodayStyle com.android.talkback:dayTodayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_rangeFillColor com.android.talkback:rangeFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearSelectedStyle com.android.talkback:yearSelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearStyle com.android.talkback:yearStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearTodayStyle com.android.talkback:yearTodayStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendar_android_windowFullscreen
     * @see #MaterialCalendar_dayInvalidStyle
     * @see #MaterialCalendar_daySelectedStyle
     * @see #MaterialCalendar_dayStyle
     * @see #MaterialCalendar_dayTodayStyle
     * @see #MaterialCalendar_rangeFillColor
     * @see #MaterialCalendar_yearSelectedStyle
     * @see #MaterialCalendar_yearStyle
     * @see #MaterialCalendar_yearTodayStyle
     */
    public static final int[] MaterialCalendar={
      0x0101020d, 0x7f0400da, 0x7f0400db, 0x7f0400dc, 
      0x7f0400dd, 0x7f0401ea, 0x7f0402a2, 0x7f0402a3, 
      0x7f0402a4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowFullscreen}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowFullscreen
     */
    public static final int MaterialCalendar_android_windowFullscreen=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#dayInvalidStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dayInvalidStyle
     */
    public static final int MaterialCalendar_dayInvalidStyle=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#daySelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:daySelectedStyle
     */
    public static final int MaterialCalendar_daySelectedStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#dayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dayStyle
     */
    public static final int MaterialCalendar_dayStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#dayTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dayTodayStyle
     */
    public static final int MaterialCalendar_dayTodayStyle=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#rangeFillColor}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:rangeFillColor
     */
    public static final int MaterialCalendar_rangeFillColor=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#yearSelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:yearSelectedStyle
     */
    public static final int MaterialCalendar_yearSelectedStyle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#yearStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:yearStyle
     */
    public static final int MaterialCalendar_yearStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#yearTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:yearTodayStyle
     */
    public static final int MaterialCalendar_yearTodayStyle=8;
    /**
     * Attributes that can be used with a MaterialCalendarItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemFillColor com.android.talkback:itemFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearance com.android.talkback:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearanceOverlay com.android.talkback:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeColor com.android.talkback:itemStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeWidth com.android.talkback:itemStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemTextColor com.android.talkback:itemTextColor}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendarItem_android_insetLeft
     * @see #MaterialCalendarItem_android_insetRight
     * @see #MaterialCalendarItem_android_insetTop
     * @see #MaterialCalendarItem_android_insetBottom
     * @see #MaterialCalendarItem_itemFillColor
     * @see #MaterialCalendarItem_itemShapeAppearance
     * @see #MaterialCalendarItem_itemShapeAppearanceOverlay
     * @see #MaterialCalendarItem_itemStrokeColor
     * @see #MaterialCalendarItem_itemStrokeWidth
     * @see #MaterialCalendarItem_itemTextColor
     */
    public static final int[] MaterialCalendarItem={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x7f040163, 0x7f04016c, 0x7f04016d, 0x7f040174, 
      0x7f040175, 0x7f040179
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialCalendarItem_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialCalendarItem_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialCalendarItem_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialCalendarItem_android_insetBottom=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemFillColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemFillColor
     */
    public static final int MaterialCalendarItem_itemFillColor=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemShapeAppearance}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemShapeAppearance
     */
    public static final int MaterialCalendarItem_itemShapeAppearance=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemShapeAppearanceOverlay}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemShapeAppearanceOverlay
     */
    public static final int MaterialCalendarItem_itemShapeAppearanceOverlay=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemStrokeColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemStrokeColor
     */
    public static final int MaterialCalendarItem_itemStrokeColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemStrokeWidth}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemStrokeWidth
     */
    public static final int MaterialCalendarItem_itemStrokeWidth=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemTextColor
     */
    public static final int MaterialCalendarItem_itemTextColor=9;
    /**
     * Attributes that can be used with a MaterialCardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCardView_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_cardForegroundColor com.android.talkback:cardForegroundColor}</code></td><td>Foreground color for CardView.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIcon com.android.talkback:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconTint com.android.talkback:checkedIconTint}</code></td><td>Tint color for the checked icon.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_rippleColor com.android.talkback:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_state_dragged com.android.talkback:state_dragged}</code></td><td>State when a Card is being dragged.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeColor com.android.talkback:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeWidth com.android.talkback:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCardView_android_checkable
     * @see #MaterialCardView_cardForegroundColor
     * @see #MaterialCardView_checkedIcon
     * @see #MaterialCardView_checkedIconTint
     * @see #MaterialCardView_rippleColor
     * @see #MaterialCardView_shapeAppearance
     * @see #MaterialCardView_shapeAppearanceOverlay
     * @see #MaterialCardView_state_dragged
     * @see #MaterialCardView_strokeColor
     * @see #MaterialCardView_strokeWidth
     */
    public static final int[] MaterialCardView={
      0x010101e5, 0x7f040072, 0x7f04007b, 0x7f04007d, 
      0x7f0401f0, 0x7f0401fe, 0x7f040201, 0x7f040220, 
      0x7f040226, 0x7f040227
    };
    /**
     * <p>
     * @attr description
     * Whether the card can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MaterialCardView_android_checkable=0;
    /**
     * <p>
     * @attr description
     * Foreground color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:cardForegroundColor
     */
    public static final int MaterialCardView_cardForegroundColor=1;
    /**
     * <p>
     * @attr description
     * Check icon drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkedIcon
     */
    public static final int MaterialCardView_checkedIcon=2;
    /**
     * <p>
     * @attr description
     * Tint color for the checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:checkedIconTint
     */
    public static final int MaterialCardView_checkedIconTint=3;
    /**
     * <p>
     * @attr description
     * Ripple color for the Card.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:rippleColor
     */
    public static final int MaterialCardView_rippleColor=4;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialCardView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int MaterialCardView_shapeAppearance=5;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialCardView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int MaterialCardView_shapeAppearanceOverlay=6;
    /**
     * <p>
     * @attr description
     * State when a Card is being dragged.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:state_dragged
     */
    public static final int MaterialCardView_state_dragged=7;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the card. Attribute type definition is
     * in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:strokeColor
     */
    public static final int MaterialCardView_strokeColor=8;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the card. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:strokeWidth
     */
    public static final int MaterialCardView_strokeWidth=9;
    /**
     * Attributes that can be used with a MaterialCheckBox.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCheckBox_buttonTint com.android.talkback:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialCheckBox_useMaterialThemeColors com.android.talkback:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCheckBox_buttonTint
     * @see #MaterialCheckBox_useMaterialThemeColors
     */
    public static final int[] MaterialCheckBox={
      0x7f04006d, 0x7f040293
    };
    /**
     * <p>
     * @attr description
     * Tint for the checkbox.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:buttonTint
     */
    public static final int MaterialCheckBox_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialCheckBox will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:useMaterialThemeColors
     */
    public static final int MaterialCheckBox_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialRadioButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialRadioButton_useMaterialThemeColors com.android.talkback:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialRadioButton_useMaterialThemeColors
     */
    public static final int[] MaterialRadioButton={
      0x7f040293
    };
    /**
     * <p>
     * @attr description
     * When set to true, MaterialRadioButton will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:useMaterialThemeColors
     */
    public static final int MaterialRadioButton_useMaterialThemeColors=0;
    /**
     * Attributes that can be used with a MaterialShape.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #MaterialShape_shapeAppearance
     * @see #MaterialShape_shapeAppearanceOverlay
     */
    public static final int[] MaterialShape={
      0x7f0401fe, 0x7f040201
    };
    /**
     * <p>
     * @attr description
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int MaterialShape_shapeAppearance=0;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int MaterialShape_shapeAppearanceOverlay=1;
    /**
     * Attributes that can be used with a MaterialTextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_lineHeight com.android.talkback:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * </table>
     * @see #MaterialTextAppearance_android_lineHeight
     * @see #MaterialTextAppearance_lineHeight
     */
    public static final int[] MaterialTextAppearance={
      0x0101057f, 0x7f04018c
    };
    /**
     * <p>
     * @attr description
     * Specifies explicit line height for this TextView. This is equivalent to the vertical
     * distance between subsequent baselines in the TextView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static final int MaterialTextAppearance_android_lineHeight=0;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:lineHeight
     */
    public static final int MaterialTextAppearance_lineHeight=1;
    /**
     * Attributes that can be used with a MaterialTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_lineHeight com.android.talkback:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * </table>
     * @see #MaterialTextView_android_textAppearance
     * @see #MaterialTextView_android_lineHeight
     * @see #MaterialTextView_lineHeight
     */
    public static final int[] MaterialTextView={
      0x01010034, 0x0101057f, 0x7f04018c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int MaterialTextView_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static final int MaterialTextView_android_lineHeight=1;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:lineHeight
     */
    public static final int MaterialTextView_lineHeight=2;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.talkback:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.talkback:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.talkback:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.talkback:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.talkback:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.talkback:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.talkback:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.talkback:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.talkback:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.talkback:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f04000d, 0x7f04001f, 0x7f040021, 
      0x7f04002d, 0x7f0400b9, 0x7f040155, 0x7f040156, 
      0x7f0401c4, 0x7f040204, 0x7f04028c
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.talkback:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.talkback:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f0401e3, 
      0x7f040228
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.android.talkback:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.android.talkback:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
      0x010100b2, 0x010101f8, 0x7f04010e, 0x7f04010f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout com.android.talkback:headerLayout}</code></td><td>Layout resource to inflate as the header</td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground com.android.talkback:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemHorizontalPadding com.android.talkback:itemHorizontalPadding}</code></td><td>Horizontal padding (left and right) of navigation items, around the icon & text</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconPadding com.android.talkback:itemIconPadding}</code></td><td>Padding between the icon and the text for navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconSize com.android.talkback:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint com.android.talkback:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemMaxLines com.android.talkback:itemMaxLines}</code></td><td>Makes the TextView of the item text be at most this many lines tall.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearance com.android.talkback:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearanceOverlay com.android.talkback:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeFillColor com.android.talkback:itemShapeFillColor}</code></td><td>Fill color for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetBottom com.android.talkback:itemShapeInsetBottom}</code></td><td>Inset bottom margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetEnd com.android.talkback:itemShapeInsetEnd}</code></td><td>Inset end margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetStart com.android.talkback:itemShapeInsetStart}</code></td><td>Inset start margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetTop com.android.talkback:itemShapeInsetTop}</code></td><td>Inset top margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance com.android.talkback:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor com.android.talkback:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu com.android.talkback:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemHorizontalPadding
     * @see #NavigationView_itemIconPadding
     * @see #NavigationView_itemIconSize
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemMaxLines
     * @see #NavigationView_itemShapeAppearance
     * @see #NavigationView_itemShapeAppearanceOverlay
     * @see #NavigationView_itemShapeFillColor
     * @see #NavigationView_itemShapeInsetBottom
     * @see #NavigationView_itemShapeInsetEnd
     * @see #NavigationView_itemShapeInsetStart
     * @see #NavigationView_itemShapeInsetTop
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     */
    public static final int[] NavigationView={
      0x010100d4, 0x010100dd, 0x0101011f, 0x7f040100, 
      0x7f04013e, 0x7f040162, 0x7f040164, 0x7f040166, 
      0x7f040167, 0x7f040168, 0x7f040169, 0x7f04016c, 
      0x7f04016d, 0x7f04016e, 0x7f04016f, 0x7f040170, 
      0x7f040171, 0x7f040172, 0x7f040176, 0x7f040179, 
      0x7f0401ba
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static final int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int NavigationView_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int NavigationView_elevation=3;
    /**
     * <p>
     * @attr description
     * Layout resource to inflate as the header
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:headerLayout
     */
    public static final int NavigationView_headerLayout=4;
    /**
     * <p>
     * @attr description
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemBackground
     */
    public static final int NavigationView_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Horizontal padding (left and right) of navigation items, around the icon & text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemHorizontalPadding
     */
    public static final int NavigationView_itemHorizontalPadding=6;
    /**
     * <p>
     * @attr description
     * Padding between the icon and the text for navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemIconPadding
     */
    public static final int NavigationView_itemIconPadding=7;
    /**
     * <p>
     * @attr description
     * The size of the icon navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemIconSize
     */
    public static final int NavigationView_itemIconSize=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemIconTint
     */
    public static final int NavigationView_itemIconTint=9;
    /**
     * <p>
     * @attr description
     * Makes the TextView of the item text be at most this many lines tall.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:itemMaxLines
     */
    public static final int NavigationView_itemMaxLines=10;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for the shaped item background. To use the shaped
     * item background, either itemShapeAppearance or itemShapeAppearanceOverlay must be set and
     * itemBackground must be null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemShapeAppearance
     */
    public static final int NavigationView_itemShapeAppearance=11;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for item background. To be used to augment
     * attributes declared in itemShapeAppearance. To use the shaped item background, either
     * itemShapeAppearance or itemShapeAppearanceOverlay must be set and itemBackground must be
     * null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemShapeAppearanceOverlay
     */
    public static final int NavigationView_itemShapeAppearanceOverlay=12;
    /**
     * <p>
     * @attr description
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemShapeFillColor
     */
    public static final int NavigationView_itemShapeFillColor=13;
    /**
     * <p>
     * @attr description
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemShapeInsetBottom
     */
    public static final int NavigationView_itemShapeInsetBottom=14;
    /**
     * <p>
     * @attr description
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemShapeInsetEnd
     */
    public static final int NavigationView_itemShapeInsetEnd=15;
    /**
     * <p>
     * @attr description
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemShapeInsetStart
     */
    public static final int NavigationView_itemShapeInsetStart=16;
    /**
     * <p>
     * @attr description
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:itemShapeInsetTop
     */
    public static final int NavigationView_itemShapeInsetTop=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:itemTextAppearance
     */
    public static final int NavigationView_itemTextAppearance=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:itemTextColor
     */
    public static final int NavigationView_itemTextColor=19;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:menu
     */
    public static final int NavigationView_menu=20;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.talkback:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f0401c7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.talkback:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f04021d
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.android.talkback:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.android.talkback:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.android.talkback:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.android.talkback:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enableCopying com.android.talkback:enableCopying}</code></td><td>Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.android.talkback:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.android.talkback:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon com.android.talkback:icon}</code></td><td>Icon drawable to display at the start of this view.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.android.talkback:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_isPreferenceVisible com.android.talkback:isPreferenceVisible}</code></td><td>Whether the Preference is visible.</td></tr>
     * <tr><td><code>{@link #Preference_key com.android.talkback:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_layout com.android.talkback:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.android.talkback:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.android.talkback:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.android.talkback:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.android.talkback:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.android.talkback:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.android.talkback:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.android.talkback:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.android.talkback:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enableCopying
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_isPreferenceVisible
     * @see #Preference_key
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
      0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
      0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
      0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
      0x7f040028, 0x7f04002a, 0x7f0400df, 0x7f0400e0, 
      0x7f040103, 0x7f040104, 0x7f04013b, 0x7f04014e, 
      0x7f040153, 0x7f040161, 0x7f04017a, 0x7f04017e, 
      0x7f0401c5, 0x7f0401d4, 0x7f0401fb, 0x7f040203, 
      0x7f04020d, 0x7f04022f, 0x7f04027c, 0x7f040297
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:defaultValue
     */
    public static final int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:dependency
     */
    public static final int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:enableCopying
     */
    public static final int Preference_enableCopying=20;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:enabled
     */
    public static final int Preference_enabled=21;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fragment
     */
    public static final int Preference_fragment=22;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:icon
     */
    public static final int Preference_icon=23;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=24;
    /**
     * <p>
     * @attr description
     * Whether the Preference is visible. By default, this is set to true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:isPreferenceVisible
     */
    public static final int Preference_isPreferenceVisible=25;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:key
     */
    public static final int Preference_key=26;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:layout
     */
    public static final int Preference_layout=27;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:order
     */
    public static final int Preference_order=28;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:persistent
     */
    public static final int Preference_persistent=29;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:selectable
     */
    public static final int Preference_selectable=30;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:shouldDisableView
     */
    public static final int Preference_shouldDisableView=31;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:singleLineTitle
     */
    public static final int Preference_singleLineTitle=32;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summary
     */
    public static final int Preference_summary=33;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:title
     */
    public static final int Preference_title=34;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:widgetLayout
     */
    public static final int Preference_widgetLayout=35;
    /**
     * Attributes that can be used with a PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.android.talkback:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f040029
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceFragmentCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.android.talkback:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f040029
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_initialExpandedChildrenCount com.android.talkback:initialExpandedChildrenCount}</code></td><td>The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden.</td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.android.talkback:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_initialExpandedChildrenCount
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
      0x010101e7, 0x7f04015d, 0x7f0401c6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:initialExpandedChildrenCount
     */
    public static final int PreferenceGroup_initialExpandedChildrenCount=1;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=2;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.android.talkback:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.android.talkback:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
      0x0101011f, 0x01010120, 0x7f0401b6, 0x7f0401b8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.android.talkback:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.android.talkback:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.android.talkback:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.android.talkback:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.android.talkback:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextAppearance com.android.talkback:preferenceCategoryTitleTextAppearance}</code></td><td>The preferred TextAppearance for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.android.talkback:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.android.talkback:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.android.talkback:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.android.talkback:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.android.talkback:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.android.talkback:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.android.talkback:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.android.talkback:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.android.talkback:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.android.talkback:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceCategoryTitleTextAppearance
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     */
    public static final int[] PreferenceTheme={
      0x7f040077, 0x7f0400e5, 0x7f0400fb, 0x7f0400fe, 
      0x7f0401da, 0x7f0401db, 0x7f0401dc, 0x7f0401dd, 
      0x7f0401de, 0x7f0401df, 0x7f0401e0, 0x7f0401e1, 
      0x7f0401e2, 0x7f0401f9, 0x7f040234, 0x7f040235
    };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=4;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceCategoryTitleTextAppearance
     */
    public static final int PreferenceTheme_preferenceCategoryTitleTextAppearance=5;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=6;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=7;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=9;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=11;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=12;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=13;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=15;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.talkback:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.talkback:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f0401c8, 0x7f0401cb
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_clipToPadding android:clipToPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.talkback:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.talkback:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.talkback:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.talkback:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.talkback:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.talkback:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.talkback:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.talkback:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.talkback:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_clipToPadding
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100eb, 0x010100f1, 0x7f040128, 
      0x7f040129, 0x7f04012a, 0x7f04012b, 0x7f04012c, 
      0x7f04017f, 0x7f0401ef, 0x7f040211, 0x7f040217
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#clipToPadding}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:clipToPadding
     */
    public static final int RecyclerView_android_clipToPadding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=7;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:layoutManager
     */
    public static final int RecyclerView_layoutManager=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:spanCount
     */
    public static final int RecyclerView_spanCount=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=11;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground com.android.talkback:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
      0x7f04015e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:insetForeground
     */
    public static final int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop com.android.talkback:behavior_overlapTop}</code></td><td>The amount that the scrolling view should overlap the bottom of any AppBarLayout</td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
      0x7f04004d
    };
    /**
     * <p>
     * @attr description
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:behavior_overlapTop
     */
    public static final int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.talkback:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.talkback:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.talkback:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.talkback:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.talkback:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.talkback:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.talkback:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.talkback:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.talkback:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.talkback:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.talkback:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.talkback:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.talkback:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f040095, 0x7f0400b8, 0x7f0400de, 0x7f04013d, 
      0x7f040157, 0x7f04017e, 0x7f0401e7, 0x7f0401e8, 
      0x7f0401f5, 0x7f0401f6, 0x7f040229, 0x7f04022e, 
      0x7f040296
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.android.talkback:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.android.talkback:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.android.talkback:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.android.talkback:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_updatesContinuously com.android.talkback:updatesContinuously}</code></td><td>Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     * @see #SeekBarPreference_updatesContinuously
     */
    public static final int[] SeekBarPreference={
      0x010100f2, 0x01010136, 0x7f040023, 0x7f0401bb, 
      0x7f0401f8, 0x7f040207, 0x7f040291
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=5;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:updatesContinuously
     */
    public static final int SeekBarPreference_updatesContinuously=6;
    /**
     * Attributes that can be used with a ShapeAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamily com.android.talkback:cornerFamily}</code></td><td>Corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomLeft com.android.talkback:cornerFamilyBottomLeft}</code></td><td>Bottom left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomRight com.android.talkback:cornerFamilyBottomRight}</code></td><td>Bottom right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopLeft com.android.talkback:cornerFamilyTopLeft}</code></td><td>Top left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopRight com.android.talkback:cornerFamilyTopRight}</code></td><td>Top right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSize com.android.talkback:cornerSize}</code></td><td>Corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomLeft com.android.talkback:cornerSizeBottomLeft}</code></td><td>Bottom left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomRight com.android.talkback:cornerSizeBottomRight}</code></td><td>Bottom right corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopLeft com.android.talkback:cornerSizeTopLeft}</code></td><td>Top left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopRight com.android.talkback:cornerSizeTopRight}</code></td><td>Top right corner size to be used in the ShapeAppearance.</td></tr>
     * </table>
     * @see #ShapeAppearance_cornerFamily
     * @see #ShapeAppearance_cornerFamilyBottomLeft
     * @see #ShapeAppearance_cornerFamilyBottomRight
     * @see #ShapeAppearance_cornerFamilyTopLeft
     * @see #ShapeAppearance_cornerFamilyTopRight
     * @see #ShapeAppearance_cornerSize
     * @see #ShapeAppearance_cornerSizeBottomLeft
     * @see #ShapeAppearance_cornerSizeBottomRight
     * @see #ShapeAppearance_cornerSizeTopLeft
     * @see #ShapeAppearance_cornerSizeTopRight
     */
    public static final int[] ShapeAppearance={
      0x7f0400c8, 0x7f0400c9, 0x7f0400ca, 0x7f0400cb, 
      0x7f0400cc, 0x7f0400ce, 0x7f0400cf, 0x7f0400d0, 
      0x7f0400d1, 0x7f0400d2
    };
    /**
     * <p>
     * @attr description
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:cornerFamily
     */
    public static final int ShapeAppearance_cornerFamily=0;
    /**
     * <p>
     * @attr description
     * Bottom left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:cornerFamilyBottomLeft
     */
    public static final int ShapeAppearance_cornerFamilyBottomLeft=1;
    /**
     * <p>
     * @attr description
     * Bottom right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:cornerFamilyBottomRight
     */
    public static final int ShapeAppearance_cornerFamilyBottomRight=2;
    /**
     * <p>
     * @attr description
     * Top left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:cornerFamilyTopLeft
     */
    public static final int ShapeAppearance_cornerFamilyTopLeft=3;
    /**
     * <p>
     * @attr description
     * Top right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:cornerFamilyTopRight
     */
    public static final int ShapeAppearance_cornerFamilyTopRight=4;
    /**
     * <p>
     * @attr description
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:cornerSize
     */
    public static final int ShapeAppearance_cornerSize=5;
    /**
     * <p>
     * @attr description
     * Bottom left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:cornerSizeBottomLeft
     */
    public static final int ShapeAppearance_cornerSizeBottomLeft=6;
    /**
     * <p>
     * @attr description
     * Bottom right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:cornerSizeBottomRight
     */
    public static final int ShapeAppearance_cornerSizeBottomRight=7;
    /**
     * <p>
     * @attr description
     * Top left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:cornerSizeTopLeft
     */
    public static final int ShapeAppearance_cornerSizeTopLeft=8;
    /**
     * <p>
     * @attr description
     * Top right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.talkback:cornerSizeTopRight
     */
    public static final int ShapeAppearance_cornerSizeTopRight=9;
    /**
     * Attributes that can be used with a SignInButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SignInButton_buttonSize com.android.talkback:buttonSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #SignInButton_colorScheme com.android.talkback:colorScheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SignInButton_scopeUris com.android.talkback:scopeUris}</code></td><td></td></tr>
     * </table>
     * @see #SignInButton_buttonSize
     * @see #SignInButton_colorScheme
     * @see #SignInButton_scopeUris
     */
    public static final int[] SignInButton={
      0x7f04006a, 0x7f0400b3, 0x7f0401f1
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#buttonSize}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>icon_only</td><td>2</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * <tr><td>wide</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:buttonSize
     */
    public static final int SignInButton_buttonSize=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#colorScheme}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>dark</td><td>0</td><td></td></tr>
     * <tr><td>light</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:colorScheme
     */
    public static final int SignInButton_colorScheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#scopeUris}
     * attribute's value can be found in the {@link #SignInButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:scopeUris
     */
    public static final int SignInButton_scopeUris=2;
    /**
     * Attributes that can be used with a Snackbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Snackbar_snackbarButtonStyle com.android.talkback:snackbarButtonStyle}</code></td><td>Style to use for action button within a Snackbar in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarStyle com.android.talkback:snackbarStyle}</code></td><td>Style to use for Snackbars in this theme.</td></tr>
     * </table>
     * @see #Snackbar_snackbarButtonStyle
     * @see #Snackbar_snackbarStyle
     */
    public static final int[] Snackbar={
      0x7f04020f, 0x7f040210
    };
    /**
     * <p>
     * @attr description
     * Style to use for action button within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:snackbarButtonStyle
     */
    public static final int Snackbar_snackbarButtonStyle=0;
    /**
     * <p>
     * @attr description
     * Style to use for Snackbars in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:snackbarStyle
     */
    public static final int Snackbar_snackbarStyle=1;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_actionTextColorAlpha com.android.talkback:actionTextColorAlpha}</code></td><td>Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_animationMode com.android.talkback:animationMode}</code></td><td>Sets the enter and exit animations for a Snackbar.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundOverlayColorAlpha com.android.talkback:backgroundOverlayColorAlpha}</code></td><td>Alpha level for the color that is overlaid on top of the background color.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation com.android.talkback:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth com.android.talkback:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_actionTextColorAlpha
     * @see #SnackbarLayout_animationMode
     * @see #SnackbarLayout_backgroundOverlayColorAlpha
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
      0x0101011f, 0x7f040020, 0x7f04002e, 0x7f04003e, 
      0x7f040100, 0x7f0401b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:actionTextColorAlpha
     */
    public static final int SnackbarLayout_actionTextColorAlpha=1;
    /**
     * <p>
     * @attr description
     * Sets the enter and exit animations for a Snackbar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:animationMode
     */
    public static final int SnackbarLayout_animationMode=2;
    /**
     * <p>
     * @attr description
     * Alpha level for the color that is overlaid on top of the background color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.talkback:backgroundOverlayColorAlpha
     */
    public static final int SnackbarLayout_backgroundOverlayColorAlpha=3;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:elevation
     */
    public static final int SnackbarLayout_elevation=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:maxActionInlineWidth
     */
    public static final int SnackbarLayout_maxActionInlineWidth=5;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.talkback:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f0401d7
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.talkback:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.talkback:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.talkback:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.talkback:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.talkback:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.talkback:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.talkback:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.talkback:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.talkback:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.talkback:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.talkback:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f040208, 
      0x7f040215, 0x7f040232, 0x7f040233, 0x7f040237, 
      0x7f040274, 0x7f040275, 0x7f040276, 0x7f04028d, 
      0x7f04028e, 0x7f04028f
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchMaterial.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchMaterial_useMaterialThemeColors com.android.talkback:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #SwitchMaterial_useMaterialThemeColors
     */
    public static final int[] SwitchMaterial={
      0x7f040293
    };
    /**
     * <p>
     * @attr description
     * When set to true, SwitchMaterial will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:useMaterialThemeColors
     */
    public static final int SwitchMaterial_useMaterialThemeColors=0;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.android.talkback:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.android.talkback:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.android.talkback:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.android.talkback:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.android.talkback:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f0400e9, 0x7f040230, 0x7f040231, 
      0x7f040238, 0x7f040239
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.android.talkback:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.android.talkback:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.android.talkback:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.android.talkback:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.android.talkback:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f0400e9, 0x7f040230, 0x7f040231, 
      0x7f040238, 0x7f040239
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
      0x01010002, 0x010100f2, 0x0101014f
    };
    /**
     * <p>
     * @attr description
     * Icon to display in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int TabItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * A reference to a layout resource to be displayed in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int TabItem_android_layout=1;
    /**
     * <p>
     * @attr description
     * Text to display in the tab.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground com.android.talkback:tabBackground}</code></td><td>Reference to a background to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart com.android.talkback:tabContentStart}</code></td><td>Position in the Y axis from the starting edge that tabs should be positioned from.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity com.android.talkback:tabGravity}</code></td><td>Gravity constant for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTint com.android.talkback:tabIconTint}</code></td><td>Tint to apply to tab icons, if present.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTintMode com.android.talkback:tabIconTintMode}</code></td><td>Blending mode to apply to tab icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicator com.android.talkback:tabIndicator}</code></td><td>Reference to a drawable to use as selection indicator for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationDuration com.android.talkback:tabIndicatorAnimationDuration}</code></td><td>Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor com.android.talkback:tabIndicatorColor}</code></td><td>Color of the indicator used to show the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorFullWidth com.android.talkback:tabIndicatorFullWidth}</code></td><td>Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorGravity com.android.talkback:tabIndicatorGravity}</code></td><td>Gravity constant for tab selection indicator.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight com.android.talkback:tabIndicatorHeight}</code></td><td>{@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabInlineLabel com.android.talkback:tabInlineLabel}</code></td><td>Whether to display tab labels horizontally inline with icons, or underneath icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth com.android.talkback:tabMaxWidth}</code></td><td>The maximum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth com.android.talkback:tabMinWidth}</code></td><td>The minimum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode com.android.talkback:tabMode}</code></td><td>The behavior mode for the Tabs in this layout</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding com.android.talkback:tabPadding}</code></td><td>The preferred padding along all edges of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom com.android.talkback:tabPaddingBottom}</code></td><td>The preferred padding along the bottom edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd com.android.talkback:tabPaddingEnd}</code></td><td>The preferred padding along the end edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart com.android.talkback:tabPaddingStart}</code></td><td>The preferred padding along the start edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop com.android.talkback:tabPaddingTop}</code></td><td>The preferred padding along the top edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabRippleColor com.android.talkback:tabRippleColor}</code></td><td>Ripple color for the tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor com.android.talkback:tabSelectedTextColor}</code></td><td>{@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance com.android.talkback:tabTextAppearance}</code></td><td>A reference to a TextAppearance style to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor com.android.talkback:tabTextColor}</code></td><td>The default text color to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabUnboundedRipple com.android.talkback:tabUnboundedRipple}</code></td><td>Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.</td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIconTint
     * @see #TabLayout_tabIconTintMode
     * @see #TabLayout_tabIndicator
     * @see #TabLayout_tabIndicatorAnimationDuration
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorFullWidth
     * @see #TabLayout_tabIndicatorGravity
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabInlineLabel
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabRippleColor
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     * @see #TabLayout_tabUnboundedRipple
     */
    @Deprecated
    public static final int[] TabLayout={
      0x7f04023a, 0x7f04023b, 0x7f04023c, 0x7f04023d, 
      0x7f04023e, 0x7f04023f, 0x7f040240, 0x7f040241, 
      0x7f040242, 0x7f040243, 0x7f040244, 0x7f040245, 
      0x7f040246, 0x7f040247, 0x7f040248, 0x7f040249, 
      0x7f04024a, 0x7f04024b, 0x7f04024c, 0x7f04024d, 
      0x7f04024e, 0x7f04024f, 0x7f040251, 0x7f040252, 
      0x7f040253
    };
    /**
     * <p>
     * @attr description
     * Reference to a background to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:tabBackground
     */
    public static final int TabLayout_tabBackground=0;
    /**
     * <p>
     * @attr description
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabContentStart
     */
    public static final int TabLayout_tabContentStart=1;
    /**
     * <p>
     * @attr description
     * Gravity constant for tabs.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:tabGravity
     */
    public static final int TabLayout_tabGravity=2;
    /**
     * <p>
     * @attr description
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tabIconTint
     */
    public static final int TabLayout_tabIconTint=3;
    /**
     * <p>
     * @attr description
     * Blending mode to apply to tab icons.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:tabIconTintMode
     */
    public static final int TabLayout_tabIconTintMode=4;
    /**
     * <p>
     * @attr description
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:tabIndicator
     */
    public static final int TabLayout_tabIndicator=5;
    /**
     * <p>
     * @attr description
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:tabIndicatorAnimationDuration
     */
    public static final int TabLayout_tabIndicatorAnimationDuration=6;
    /**
     * <p>
     * @attr description
     * Color of the indicator used to show the currently selected tab.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tabIndicatorColor
     */
    public static final int TabLayout_tabIndicatorColor=7;
    /**
     * <p>
     * @attr description
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:tabIndicatorFullWidth
     */
    public static final int TabLayout_tabIndicatorFullWidth=8;
    /**
     * <p>
     * @attr description
     * Gravity constant for tab selection indicator.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:tabIndicatorGravity
     */
    public static final int TabLayout_tabIndicatorGravity=9;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabIndicatorHeight
     */
    @Deprecated
    public static final int TabLayout_tabIndicatorHeight=10;
    /**
     * <p>
     * @attr description
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:tabInlineLabel
     */
    public static final int TabLayout_tabInlineLabel=11;
    /**
     * <p>
     * @attr description
     * The maximum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabMaxWidth
     */
    public static final int TabLayout_tabMaxWidth=12;
    /**
     * <p>
     * @attr description
     * The minimum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabMinWidth
     */
    public static final int TabLayout_tabMinWidth=13;
    /**
     * <p>
     * @attr description
     * The behavior mode for the Tabs in this layout
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.talkback:tabMode
     */
    public static final int TabLayout_tabMode=14;
    /**
     * <p>
     * @attr description
     * The preferred padding along all edges of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabPadding
     */
    public static final int TabLayout_tabPadding=15;
    /**
     * <p>
     * @attr description
     * The preferred padding along the bottom edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabPaddingBottom
     */
    public static final int TabLayout_tabPaddingBottom=16;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabPaddingEnd
     */
    public static final int TabLayout_tabPaddingEnd=17;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabPaddingStart
     */
    public static final int TabLayout_tabPaddingStart=18;
    /**
     * <p>
     * @attr description
     * The preferred padding along the top edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:tabPaddingTop
     */
    public static final int TabLayout_tabPaddingTop=19;
    /**
     * <p>
     * @attr description
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tabRippleColor
     */
    public static final int TabLayout_tabRippleColor=20;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tabSelectedTextColor
     */
    @Deprecated
    public static final int TabLayout_tabSelectedTextColor=21;
    /**
     * <p>
     * @attr description
     * A reference to a TextAppearance style to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:tabTextAppearance
     */
    public static final int TabLayout_tabTextAppearance=22;
    /**
     * <p>
     * @attr description
     * The default text color to be applied to tabs.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:tabTextColor
     */
    public static final int TabLayout_tabTextColor=23;
    /**
     * <p>
     * @attr description
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:tabUnboundedRipple
     */
    public static final int TabLayout_tabUnboundedRipple=24;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.talkback:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.android.talkback:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.talkback:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.android.talkback:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x7f040130, 0x7f040138, 0x7f040254, 0x7f04026f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static final int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontFamily
     */
    public static final int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:fontVariationSettings
     */
    public static final int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:textLocale
     */
    public static final int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundColor com.android.talkback:boxBackgroundColor}</code></td><td>The color to use for the box's background color when in filled box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundMode com.android.talkback:boxBackgroundMode}</code></td><td>Whether the text input area should be drawn as a filled box, an outline box, or not as a box.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCollapsedPaddingTop com.android.talkback:boxCollapsedPaddingTop}</code></td><td>Value to use for the EditText's collapsed top padding in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomEnd com.android.talkback:boxCornerRadiusBottomEnd}</code></td><td>The value to use for the box's bottom end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomStart com.android.talkback:boxCornerRadiusBottomStart}</code></td><td>The value to use for the box's bottom start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopEnd com.android.talkback:boxCornerRadiusTopEnd}</code></td><td>The value to use for the box's top end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopStart com.android.talkback:boxCornerRadiusTopStart}</code></td><td>The value to use for the box's top start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeColor com.android.talkback:boxStrokeColor}</code></td><td>The color to use for the box's stroke when in outline box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidth com.android.talkback:boxStrokeWidth}</code></td><td>The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidthFocused com.android.talkback:boxStrokeWidthFocused}</code></td><td>The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled com.android.talkback:counterEnabled}</code></td><td>Whether the layout is laid out as if the character counter will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength com.android.talkback:counterMaxLength}</code></td><td>The max length to display in the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance com.android.talkback:counterOverflowTextAppearance}</code></td><td>TextAppearance of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextColor com.android.talkback:counterOverflowTextColor}</code></td><td>Text color of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance com.android.talkback:counterTextAppearance}</code></td><td>TextAppearance of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextColor com.android.talkback:counterTextColor}</code></td><td>Text color of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconCheckable com.android.talkback:endIconCheckable}</code></td><td>Whether the end icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconContentDescription com.android.talkback:endIconContentDescription}</code></td><td>Text to set as the content description for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconDrawable com.android.talkback:endIconDrawable}</code></td><td>Drawable to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconMode com.android.talkback:endIconMode}</code></td><td>The end icon mode of the TextInputLayout.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTint com.android.talkback:endIconTint}</code></td><td>Tint color to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTintMode com.android.talkback:endIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled com.android.talkback:errorEnabled}</code></td><td>Whether the layout is laid out as if an error will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconDrawable com.android.talkback:errorIconDrawable}</code></td><td>End icon to be shown when an error is displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTint com.android.talkback:errorIconTint}</code></td><td>Tint color to use for the error icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTintMode com.android.talkback:errorIconTintMode}</code></td><td>Blending mode used to apply the error icon tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance com.android.talkback:errorTextAppearance}</code></td><td>TextAppearance of any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextColor com.android.talkback:errorTextColor}</code></td><td>Text color for any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperText com.android.talkback:helperText}</code></td><td>The text to display as helper text underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextEnabled com.android.talkback:helperTextEnabled}</code></td><td>Whether the layout's helper text functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextAppearance com.android.talkback:helperTextTextAppearance}</code></td><td>TextAppearance of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextColor com.android.talkback:helperTextTextColor}</code></td><td>Text color of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled com.android.talkback:hintAnimationEnabled}</code></td><td>Whether to animate hint state changes.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled com.android.talkback:hintEnabled}</code></td><td>Whether the layout's floating label functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance com.android.talkback:hintTextAppearance}</code></td><td>TextAppearance of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextColor com.android.talkback:hintTextColor}</code></td><td>Text color of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription com.android.talkback:passwordToggleContentDescription}</code></td><td>Text to set as the content description for the password input visibility toggle.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable com.android.talkback:passwordToggleDrawable}</code></td><td>Drawable to use as the password input visibility toggle icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled com.android.talkback:passwordToggleEnabled}</code></td><td>Whether the view will display a toggle when the EditText has a password.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint com.android.talkback:passwordToggleTint}</code></td><td>Icon to use for the password input visibility toggle
     * Deprecated.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode com.android.talkback:passwordToggleTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearance com.android.talkback:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearanceOverlay com.android.talkback:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconCheckable com.android.talkback:startIconCheckable}</code></td><td>Whether the start icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconContentDescription com.android.talkback:startIconContentDescription}</code></td><td>Text to set as the content description for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconDrawable com.android.talkback:startIconDrawable}</code></td><td>Drawable to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTint com.android.talkback:startIconTint}</code></td><td>Tint color to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTintMode com.android.talkback:startIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_boxBackgroundColor
     * @see #TextInputLayout_boxBackgroundMode
     * @see #TextInputLayout_boxCollapsedPaddingTop
     * @see #TextInputLayout_boxCornerRadiusBottomEnd
     * @see #TextInputLayout_boxCornerRadiusBottomStart
     * @see #TextInputLayout_boxCornerRadiusTopEnd
     * @see #TextInputLayout_boxCornerRadiusTopStart
     * @see #TextInputLayout_boxStrokeColor
     * @see #TextInputLayout_boxStrokeWidth
     * @see #TextInputLayout_boxStrokeWidthFocused
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterOverflowTextColor
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_counterTextColor
     * @see #TextInputLayout_endIconCheckable
     * @see #TextInputLayout_endIconContentDescription
     * @see #TextInputLayout_endIconDrawable
     * @see #TextInputLayout_endIconMode
     * @see #TextInputLayout_endIconTint
     * @see #TextInputLayout_endIconTintMode
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorIconDrawable
     * @see #TextInputLayout_errorIconTint
     * @see #TextInputLayout_errorIconTintMode
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_errorTextColor
     * @see #TextInputLayout_helperText
     * @see #TextInputLayout_helperTextEnabled
     * @see #TextInputLayout_helperTextTextAppearance
     * @see #TextInputLayout_helperTextTextColor
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_hintTextColor
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     * @see #TextInputLayout_shapeAppearance
     * @see #TextInputLayout_shapeAppearanceOverlay
     * @see #TextInputLayout_startIconCheckable
     * @see #TextInputLayout_startIconContentDescription
     * @see #TextInputLayout_startIconDrawable
     * @see #TextInputLayout_startIconTint
     * @see #TextInputLayout_startIconTintMode
     */
    public static final int[] TextInputLayout={
      0x0101009a, 0x01010150, 0x7f040057, 0x7f040058, 
      0x7f040059, 0x7f04005a, 0x7f04005b, 0x7f04005c, 
      0x7f04005d, 0x7f04005e, 0x7f04005f, 0x7f040060, 
      0x7f0400d3, 0x7f0400d4, 0x7f0400d5, 0x7f0400d6, 
      0x7f0400d7, 0x7f0400d8, 0x7f040105, 0x7f040106, 
      0x7f040107, 0x7f040108, 0x7f040109, 0x7f04010a, 
      0x7f040110, 0x7f040111, 0x7f040112, 0x7f040113, 
      0x7f040114, 0x7f040115, 0x7f040140, 0x7f040141, 
      0x7f040142, 0x7f040143, 0x7f040147, 0x7f040148, 
      0x7f040149, 0x7f04014a, 0x7f0401cf, 0x7f0401d0, 
      0x7f0401d1, 0x7f0401d2, 0x7f0401d3, 0x7f0401fe, 
      0x7f040201, 0x7f040218, 0x7f040219, 0x7f04021a, 
      0x7f04021b, 0x7f04021c
    };
    /**
     * <p>
     * @attr description
     * The text color for input text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextInputLayout_android_textColorHint=0;
    /**
     * <p>
     * @attr description
     * The hint to display in the floating label.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static final int TextInputLayout_android_hint=1;
    /**
     * <p>
     * @attr description
     * The color to use for the box's background color when in filled box mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:boxBackgroundColor
     */
    public static final int TextInputLayout_boxBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:boxBackgroundMode
     */
    public static final int TextInputLayout_boxBackgroundMode=3;
    /**
     * <p>
     * @attr description
     * Value to use for the EditText's collapsed top padding in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxCollapsedPaddingTop
     */
    public static final int TextInputLayout_boxCollapsedPaddingTop=4;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxCornerRadiusBottomEnd
     */
    public static final int TextInputLayout_boxCornerRadiusBottomEnd=5;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxCornerRadiusBottomStart
     */
    public static final int TextInputLayout_boxCornerRadiusBottomStart=6;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxCornerRadiusTopEnd
     */
    public static final int TextInputLayout_boxCornerRadiusTopEnd=7;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxCornerRadiusTopStart
     */
    public static final int TextInputLayout_boxCornerRadiusTopStart=8;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke when in outline box mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:boxStrokeColor
     */
    public static final int TextInputLayout_boxStrokeColor=9;
    /**
     * <p>
     * @attr description
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxStrokeWidth
     */
    public static final int TextInputLayout_boxStrokeWidth=10;
    /**
     * <p>
     * @attr description
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:boxStrokeWidthFocused
     */
    public static final int TextInputLayout_boxStrokeWidthFocused=11;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if the character counter will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:counterEnabled
     */
    public static final int TextInputLayout_counterEnabled=12;
    /**
     * <p>
     * @attr description
     * The max length to display in the character counter.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.talkback:counterMaxLength
     */
    public static final int TextInputLayout_counterMaxLength=13;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter when the text is longer than the max.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:counterOverflowTextAppearance
     */
    public static final int TextInputLayout_counterOverflowTextAppearance=14;
    /**
     * <p>
     * @attr description
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:counterOverflowTextColor
     */
    public static final int TextInputLayout_counterOverflowTextColor=15;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:counterTextAppearance
     */
    public static final int TextInputLayout_counterTextAppearance=16;
    /**
     * <p>
     * @attr description
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:counterTextColor
     */
    public static final int TextInputLayout_counterTextColor=17;
    /**
     * <p>
     * @attr description
     * Whether the end icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:endIconCheckable
     */
    public static final int TextInputLayout_endIconCheckable=18;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the end icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:endIconContentDescription
     */
    public static final int TextInputLayout_endIconContentDescription=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the end icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:endIconDrawable
     */
    public static final int TextInputLayout_endIconDrawable=20;
    /**
     * <p>
     * @attr description
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:endIconMode
     */
    public static final int TextInputLayout_endIconMode=21;
    /**
     * <p>
     * @attr description
     * Tint color to use for the end icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:endIconTint
     */
    public static final int TextInputLayout_endIconTint=22;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:endIconTintMode
     */
    public static final int TextInputLayout_endIconTintMode=23;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if an error will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:errorEnabled
     */
    public static final int TextInputLayout_errorEnabled=24;
    /**
     * <p>
     * @attr description
     * End icon to be shown when an error is displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:errorIconDrawable
     */
    public static final int TextInputLayout_errorIconDrawable=25;
    /**
     * <p>
     * @attr description
     * Tint color to use for the error icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:errorIconTint
     */
    public static final int TextInputLayout_errorIconTint=26;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the error icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:errorIconTintMode
     */
    public static final int TextInputLayout_errorIconTintMode=27;
    /**
     * <p>
     * @attr description
     * TextAppearance of any error message displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:errorTextAppearance
     */
    public static final int TextInputLayout_errorTextAppearance=28;
    /**
     * <p>
     * @attr description
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:errorTextColor
     */
    public static final int TextInputLayout_errorTextColor=29;
    /**
     * <p>
     * @attr description
     * The text to display as helper text underneath the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:helperText
     */
    public static final int TextInputLayout_helperText=30;
    /**
     * <p>
     * @attr description
     * Whether the layout's helper text functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:helperTextEnabled
     */
    public static final int TextInputLayout_helperTextEnabled=31;
    /**
     * <p>
     * @attr description
     * TextAppearance of the helper text displayed underneath the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:helperTextTextAppearance
     */
    public static final int TextInputLayout_helperTextTextAppearance=32;
    /**
     * <p>
     * @attr description
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:helperTextTextColor
     */
    public static final int TextInputLayout_helperTextTextColor=33;
    /**
     * <p>
     * @attr description
     * Whether to animate hint state changes.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:hintAnimationEnabled
     */
    public static final int TextInputLayout_hintAnimationEnabled=34;
    /**
     * <p>
     * @attr description
     * Whether the layout's floating label functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:hintEnabled
     */
    public static final int TextInputLayout_hintEnabled=35;
    /**
     * <p>
     * @attr description
     * TextAppearance of the hint in the collapsed floating label.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:hintTextAppearance
     */
    public static final int TextInputLayout_hintTextAppearance=36;
    /**
     * <p>
     * @attr description
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:hintTextColor
     */
    public static final int TextInputLayout_hintTextColor=37;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:passwordToggleContentDescription
     */
    public static final int TextInputLayout_passwordToggleContentDescription=38;
    /**
     * <p>
     * @attr description
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:passwordToggleDrawable
     */
    public static final int TextInputLayout_passwordToggleDrawable=39;
    /**
     * <p>
     * @attr description
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:passwordToggleEnabled
     */
    public static final int TextInputLayout_passwordToggleEnabled=40;
    /**
     * <p>
     * @attr description
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:passwordToggleTint
     */
    public static final int TextInputLayout_passwordToggleTint=41;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:passwordToggleTintMode
     */
    public static final int TextInputLayout_passwordToggleTintMode=42;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for TextInputLayout. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearance
     */
    public static final int TextInputLayout_shapeAppearance=43;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for TextInputLayout. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:shapeAppearanceOverlay
     */
    public static final int TextInputLayout_shapeAppearanceOverlay=44;
    /**
     * <p>
     * @attr description
     * Whether the start icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:startIconCheckable
     */
    public static final int TextInputLayout_startIconCheckable=45;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the start icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:startIconContentDescription
     */
    public static final int TextInputLayout_startIconContentDescription=46;
    /**
     * <p>
     * @attr description
     * Drawable to use for the start icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:startIconDrawable
     */
    public static final int TextInputLayout_startIconDrawable=47;
    /**
     * <p>
     * @attr description
     * Tint color to use for the start icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:startIconTint
     */
    public static final int TextInputLayout_startIconTint=48;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:startIconTintMode
     */
    public static final int TextInputLayout_startIconTintMode=49;
    /**
     * Attributes that can be used with a ThemeEnforcement.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ThemeEnforcement_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceMaterialTheme com.android.talkback:enforceMaterialTheme}</code></td><td>Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.</td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceTextAppearance com.android.talkback:enforceTextAppearance}</code></td><td>Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.</td></tr>
     * </table>
     * @see #ThemeEnforcement_android_textAppearance
     * @see #ThemeEnforcement_enforceMaterialTheme
     * @see #ThemeEnforcement_enforceTextAppearance
     */
    public static final int[] ThemeEnforcement={
      0x01010034, 0x7f04010b, 0x7f04010c
    };
    /**
     * <p>
     * @attr description
     * Attribute used to check that a component has a TextAppearance specified on it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ThemeEnforcement_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:enforceMaterialTheme
     */
    public static final int ThemeEnforcement_enforceMaterialTheme=1;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.talkback:enforceTextAppearance
     */
    public static final int ThemeEnforcement_enforceTextAppearance=2;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.talkback:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.talkback:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.talkback:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.talkback:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.talkback:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.talkback:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.talkback:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.talkback:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.talkback:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.talkback:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.talkback:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.talkback:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.android.talkback:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.talkback:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.talkback:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.talkback:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.talkback:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.talkback:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.talkback:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.talkback:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.talkback:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.talkback:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.talkback:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.talkback:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.talkback:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.talkback:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.talkback:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.talkback:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f040067, 0x7f04009d, 
      0x7f04009e, 0x7f0400ba, 0x7f0400bb, 0x7f0400bc, 
      0x7f0400bd, 0x7f0400be, 0x7f0400bf, 0x7f04019d, 
      0x7f04019e, 0x7f0401b4, 0x7f0401ba, 0x7f0401be, 
      0x7f0401bf, 0x7f0401d7, 0x7f04022a, 0x7f04022b, 
      0x7f04022c, 0x7f04027c, 0x7f04027e, 0x7f04027f, 
      0x7f040280, 0x7f040281, 0x7f040282, 0x7f040283, 
      0x7f040284, 0x7f040285
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:menu
     */
    public static final int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:navigationIcon
     */
    public static final int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:popupTheme
     */
    public static final int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:subtitle
     */
    public static final int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.talkback:title
     */
    public static final int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:titleMargin
     */
    public static final int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.talkback.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:titleTextColor
     */
    public static final int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.talkback:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.talkback:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.talkback:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f0401c9, 0x7f0401ca, 
      0x7f040271
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.talkback:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.talkback:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.talkback:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.talkback:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f040041, 0x7f040042
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.talkback:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.talkback:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewPager2.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewPager2_android_orientation android:orientation}</code></td><td></td></tr>
     * </table>
     * @see #ViewPager2_android_orientation
     */
    public static final int[] ViewPager2={
      0x010100c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ViewPager2} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ViewPager2_android_orientation=0;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
  public static final class xml {
    public static final int accessibilityservice=0x7f130000;
    public static final int advanced_preferences=0x7f130001;
    public static final int braille_ime=0x7f130002;
    public static final int brailleime_preferences=0x7f130003;
    public static final int context_menu_preferences=0x7f130004;
    public static final int customize_menus_preferences=0x7f130005;
    public static final int default_key_combo_preferences=0x7f130006;
    public static final int developer_preferences=0x7f130007;
    public static final int dump_events_preferences=0x7f130008;
    public static final int file_paths=0x7f130009;
    public static final int gesture_preferences=0x7f13000a;
    public static final int help_preferences=0x7f13000b;
    public static final int key_combo_preferences=0x7f13000c;
    public static final int navigation_menu_preferences=0x7f13000d;
    public static final int preferences=0x7f13000e;
    public static final int selector_menu_preferences=0x7f13000f;
    public static final int sound_and_vibration_preferences=0x7f130010;
    public static final int standalone_badge=0x7f130011;
    public static final int standalone_badge_gravity_bottom_end=0x7f130012;
    public static final int standalone_badge_gravity_bottom_start=0x7f130013;
    public static final int standalone_badge_gravity_top_start=0x7f130014;
    public static final int verbosity_preferences=0x7f130015;
  }
}